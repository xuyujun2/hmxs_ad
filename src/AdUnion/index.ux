<import name="mobads-ad" src="union-quick-app-ad/components/mobadsAd"></import>
<import name="onekey-shortcut-new" src="../Base/onekey-shortcut-new"></import>

<template>
    <div id="ad-wrap" class="ad-wrap {{ adType === 'insert' && chnType === 'SDK_BAIDU' && currentAdInfo.action_area !== 2 ? 'baidu-insert-wrap' : '' }} {{(adType === 'back') ? 'ad-wrap-back' : ''}} {{(adType === 'pre' || adType === 'insert') ? 'ad-wrap-flex' : ''}} {{isNewOpenStyle ? 'ad-new-wrap' : ''}} {{ adType === 'open' && chnType === 'SDK_BAIDU' ? 'baidu-open-wrap' : '' }}" style="background-color:{{ adType === 'insert' ? (adSetup.bNight ? 'rgba(255, 255, 255, .04)' : 'rgba(255, 255, 255, .1)') : 'transparent' }};">
        <div class="message-wrap" if="chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'message' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <div if="adAlias == 'readTop'" class="message-top">
                <div class="message-top-info message-top-fs" if="currentAdInfo.style_type == '10002'">
                    <text if="currentAdInfo.title" class="message-top-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                    <text if="currentAdInfo.description" class="message-top-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                    <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                        <ad-button
                            adId="{{ currentAdInfo.adId }}"
                            adunitId="{{ currentAdInfo.chn_slot_id }}"
                            @click="fnDownloadStart"
                            class="message-top-btn"
                        >
                        </ad-button>
                    </div>
                    <text else class="message-top-btn" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                </div>
                <div class="message-top-img-wrap {{ currentAdInfo.style_type == '10002' ? 'message-top-ml' : '' }}">
                    <stack class="img-stack-end">
                        <block if="currentAdInfo.isIconStyle">
                            <div class="message-top-image-wrap">
                                <image class="message-top-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-top-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-top-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <div>
                            <image if="currentAdInfo.adlogo" class="message-top-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="message-top-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                </div>
                <div class="message-top-info" if="currentAdInfo.style_type != '10002'">
                    <text if="currentAdInfo.title" class="message-top-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                    <text if="currentAdInfo.description" class="message-top-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                    <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                        <ad-button
                            adId="{{ currentAdInfo.adId }}"
                            adunitId="{{ currentAdInfo.chn_slot_id }}"
                            @click="fnDownloadStart"
                            class="message-top-btn"
                        >
                        </ad-button>
                    </div>
                    <text else class="message-top-btn" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                </div>
            </div>
            <div if="adAlias == 'readMiddle'" class="message-middle">
                <text if="currentAdInfo.title && currentAdInfo.style_type == '10006'" class="message-middle-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                <text if="currentAdInfo.description && currentAdInfo.style_type == '10006'" class="message-middle-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                <div class="message-middle-img-wrap">
                    <stack class="img-stack-end"> 
                        <block if="currentAdInfo.isIconStyle">
                            <div class="message-middle-image-wrap">
                                <image class="message-middle-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-middle-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-middle-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <div>
                            <image if="currentAdInfo.adlogo" class="message-middle-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="message-middle-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                </div>
                <text if="currentAdInfo.title && currentAdInfo.style_type != '10006'" class="message-middle-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                <text if="currentAdInfo.description && currentAdInfo.style_type != '10006'" class="message-middle-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                <div class="message-middle-info-wrap">
                    <div class="message-middle-info">
                        <image if="currentAdInfo.icon_url" class="message-middle-icon" src="{{ currentAdInfo.icon_url }}"></image>
                        <text if="currentAdInfo.brand_name" class="message-middle-name {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.brand_name }}</text> 
                    </div>
                    <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                        <ad-button
                            adId="{{ currentAdInfo.adId }}"
                            adunitId="{{ currentAdInfo.chn_slot_id }}"
                            @click="fnDownloadStart"
                            class="message-middle-btn"
                        >
                        </ad-button>
                    </div>
                    <text else class="message-middle-btn" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                </div>
            </div>
        </div>
        <div id="ad-container" class="pre-container" if="adType === 'pre' && (!(isBrandAd && brandAdVersion === 2) || isNoFilling || isNewBrandAdError)" @resize="fnAdContainerResize" @touchstart="fnTouchStartHandle" @touchend="fnTouchEndHandle" @click="fnClickSwitchHandle">
            <text class="pre-block"></text>
            <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
            <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
            <div class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}">
                <block if="chnType === 'SDK_BAIDU'">
                    <div class="pre-wrap {{ adHeight && adHeight > 1250 ? 'pre-wrap-pro' : '' }} {{ adSetup.bNight ? 'pre-wrap-night' : ''  }}" style="flex-direction: row; align-items: {{ currentAdInfo.action_area === 2 ? 'stretch' : 'center' }};">
                        <mobads-ad
                            if="SDK_BAIDU.canLoad"
                            type="feed"
                            apid="{{ currentAdInfo.chn_slot_id }}"
                            appid="{{ currentAdInfo.chn_app_id }}"
                            device="{{ imei || oaid || '' }}"
                            adstyle="{{ SDK_BAIDU.feedStyle }}"
                            downloadpanel="{{ SDK_BAIDU.downloadPanel }}"
                            videomuted="{{ !currentAdInfo.play_voice }}"
                            @ad-load="fnBaiduAdLoad"
                            @ad-show="fnBaiduAdShow"
                            @ad-click="fnBaiduAdClick"
                            @ad-closed="fnBaiduAdClosed"
                            @ad-error="fnBaiduAdError"
                            @touchend="fnBaiduTouchend"
                        >
                        </mobads-ad>
                    </div>
                </block>
                <block else>
                    <div id="ad-area" class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}" if="isExtraShow && adType === 'pre' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
                        <stack class="pre-image-box">
                            <block if="currentAdInfo.isApiVideo || currentAdInfo.isVideoStyle">
                                <stack class="pre-video-wrap">
                                    <video class="pre-video" id="video-pre" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.video_url : currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                                    <div if="{{isPibbVideoFinish}}" class="pre-finish-cover">
                                        <image class="pre-finish-image" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.icon_url : currentAdInfo.icon }}"></image>
                                        <text class="pre-finish-title">{{ currentAdInfo.isApiVideo ? (currentAdInfo.brand_name || currentAdInfo.title) : currentAdInfo.title }}</text>
                                        <text class="pre-finish-btn">{{ currentAdInfo.btnContent }}</text>
                                    </div>
                                    <div class="pre-pop"></div>
                                </stack>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="pre-image-wrap">
                                    <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image class="pre-image {{ currentAdInfo.isImageContain ? 'pre-image-contain' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <image id="ad-close-btn" class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                            <image id="ad-close-btn" class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                            <div class="pre-ad-tip">
                                <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div> 
                        </stack>
                        <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                        <div class="pre-box" if="adHeight && adHeight > 1250">
                            <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                        </div>
                        <div if="currentAdInfo.isShowHuaweiAdButton" style="width: 100%; flex-direction: column;" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                            <ad-button
                                adId="{{ currentAdInfo.adId }}"
                                adunitId="{{ currentAdInfo.chn_slot_id }}"
                                @click="fnDownloadStart"
                                class="pre-btn {{ adSetup.bNight ? 'pre-btn-night' : '' }} {{ currentAdInfo.isBtnBreath ? 'show-breathe' : '' }}"
                            >
                            </ad-button>
                        </div>
                        <text else class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </block>
            </div>
        </div>
        <div id="ad-container" class="insert-container" if="adType === 'insert' && chnType !== 'SDK_BAIDU' && !(isBrandAd && brandAdVersion === 2)" @resize="fnAdContainerResize" @touchstart="fnTouchStartHandle" @touchend="fnTouchEndHandle" @click="fnClickSwitchHandle">
            <div id="ad-area" class="insert-wrap {{ (currentAdInfo.isVerticalVideo || currentAdInfo.isVerticalImage) ? 'insert-wrap-vertical' : '' }}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};" if="isExtraShow && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)">
                <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalVideo && !currentAdInfo.isVerticalImage">
                    <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                    <div class="insert-extra-rating">
                        <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                    </div>
                </div>
                <div class="insert-ad-box" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
                    <stack class="insert-box-stack">
                        <block if="currentAdInfo.isApiVideo || currentAdInfo.isVideoStyle">
                            <stack class="insert-video-pop">
                                <video id="video-insert" class="insert-video" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.video_url : currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                                <div if="{{isPibbVideoFinish}}" class="insert-finish-cover">
                                    <image class="insert-finish-image" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.icon_url : currentAdInfo.icon }}"></image>
                                    <text class="insert-finish-title">{{ currentAdInfo.isApiVideo ? (currentAdInfo.brand_name || currentAdInfo.title) : currentAdInfo.title }}</text>
                                    <text class="insert-finish-btn">{{ currentAdInfo.btnContent }}</text>
                                </div>
                                <div class="insert-pop"></div>
                            </stack>
                        </block>
                        <block elif="currentAdInfo.isIconStyle">
                            <div class="insert-image-wrap">
                                <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image class="insert-image {{ currentAdInfo.isImageContain ? 'insert-image-contain' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <block if="{{ currentAdInfo.isVerticalVideo || currentAdInfo.isVerticalImage }}">
                            <div class="insert-vertical-wrap">
                                <div class="insert-box">
                                    <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}}  {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                </div>
                                <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                <div if="currentAdInfo.isShowHuaweiAdButton" style="width: 100%; flex-direction: column;" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                                    <ad-button
                                        adId="{{ currentAdInfo.adId }}"
                                        adunitId="{{ currentAdInfo.chn_slot_id }}"
                                        @click="fnDownloadStart"
                                        class="insert-btn {{ adSetup.bNight ? 'insert-btn-night' : '' }} {{ currentAdInfo.isBtnBreath ? 'show-breathe' : '' }}"
                                    >
                                    </ad-button>
                                </div>
                                <text else class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                            </div>
                        </block>
                        <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalVideo || currentAdInfo.isVerticalImage ? insertHeight - 28 : '376'}}px;">
                            <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                            <image if="currentAdInfo.adtext" class="insert-ad-logo" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                        <image id="ad-close-btn" class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                        <image id="ad-close-btn" class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                    </stack>
                    <block if="!currentAdInfo.isVerticalVideo && !currentAdInfo.isVerticalImage">
                        <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                        <div class="insert-box">
                            <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}}  {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                        </div>
                        <div if="currentAdInfo.isShowHuaweiAdButton" style="width: 100%; flex-direction: column;" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                            <ad-button
                                adId="{{ currentAdInfo.adId }}"
                                adunitId="{{ currentAdInfo.chn_slot_id }}"
                                @click="fnDownloadStart"
                                class="insert-btn {{ adSetup.bNight ? 'insert-btn-night' : '' }} {{ currentAdInfo.isBtnBreath ? 'show-breathe' : '' }}"
                            >
                            </ad-button>
                        </div>
                        <text else class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                    </block>
                </div>
                <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalVideo && !currentAdInfo.isVerticalImage" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
            </div>
        </div>
        <!-- 激励墙 -->
        <div class="wall-ad-wrap {{ adSetup.bNight ? 'night-wall-ad-wrap' : '' }}" if="isExtraShow && adType === 'wall' && adAlias !== 'adWallCache' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <!-- 上图下文 -->
            <block if="[10005, 10207].indexOf(currentAdInfo.style_type) > -1">
                <div class="ad-item top-img-bottom-title">
                    <stack class="img-box">
                        <image class="img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <div class="ad-logo-box">
                            <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                            <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <div class="title-box">
                        <text class="title">{{ currentAdInfo.title }}</text>
                        <text class="btn-box" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </div>
            </block>
            <!-- 左图右文 、左文右图 -->
            <block if="[10001, 10002, 10209].indexOf(currentAdInfo.style_type) > -1">
                <div class="ad-item {{ [10001, 10209].indexOf(currentAdInfo.style_type) > -1 ? 'left-img-right-word' : 'left-word-right-img' }}">
                    <stack class="img-box left-img-box">
                        <image class="img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <div class="ad-logo-box">
                            <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                            <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <div class="title-box right-title-box">
                        <text class="title">{{ currentAdInfo.description || currentAdInfo.title }}</text>
                        <text class="btn-box" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </div>
            </block>
            <!-- 三图 -->
            <block if="[10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1">
                <div class="ad-item three-img">
                    <div class="imgs-box">
                        <stack class="img-box" if="currentAdInfo.images.length" for="['', '', '']">
                            <image class="img" if="$idx === 0" src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}" @complete="fnAdShow"></image>
                            <image class="img" else src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}"></image>
                            <div class="ad-logo-box">
                                <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                    </div>
                    <div class="title-box">
                        <text class="title">{{ currentAdInfo.title }}</text>
                        <text class="btn-box" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </div>
            </block>
        </div>
        <!-- 百度SDK -->
        <mobads-ad
            if="['banner', 'message', 'insert'].indexOf(adType) > -1 && SDK_BAIDU.canLoad"
            type="feed"
            apid="{{ currentAdInfo.chn_slot_id }}"
            appid="{{ currentAdInfo.chn_app_id }}"
            device="{{ imei || oaid || '' }}"
            adstyle="{{ SDK_BAIDU.feedStyle }}"
            downloadpanel="{{ SDK_BAIDU.downloadPanel }}"
            videomuted="{{ !currentAdInfo.play_voice }}"
            templateid="{{ templateid() }}"
            @ad-load="fnBaiduAdLoad"
            @ad-show="fnBaiduAdShow"
            @ad-click="fnBaiduAdClick"
            @ad-closed="fnBaiduAdClosed"
            @ad-error="fnBaiduAdError"
            @touchend="fnBaiduTouchend"
        >
        </mobads-ad>
        <!-- 不传entry，开屏结束后，SDK不会进行跳转 -->
        <!-- entry="{{ fromPage }}" -->
        <mobads-ad
            if="adType === 'open' && SDK_BAIDU.canLoad"
            type="rsplash"
            apid="{{ currentAdInfo.chn_slot_id }}"
            appid="{{ currentAdInfo.chn_app_id }}"
            device="{{ imei || oaid || '' }}"
            downloadpanel="{{ SDK_BAIDU.downloadPanel }}"
            customclose="{{ true }}"
            skiptime="{{ skipTime }}"
            @ad-load="fnBaiduAdLoad"
            @ad-show="fnBaiduAdShow"
            @ad-click="fnBaiduAdClick"
            @ad-closed="fnBaiduAdClosed"
            @ad-error="fnBaiduAdError"
        >
        </mobads-ad>
        <stack id="ad-container" class="banner-ad-wrap {{ currentAdInfo.menu_click_behive && !adHasClick ? 'banner-ad-wrap-click-behive' : '' }}" if="chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'banner' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow" style="flex-direction: column;">
            <div class="empty-click-area" @click="fnExtendAreaClickHandle"></div>
            <div id="ad-area" class="banner-wrap" style="background-color: {{adSetup.bNight ? 'rgba(29,29,31,1)' : (adSetup.isMember ? (adSetup.memberBg == 'parchment' ? '#F3E3BE' : '#dfedd6') : adSetup.bgColor)}};">
                <div class="banner-img-wrap">
                    <stack class="img-stack-end {{ currentAdInfo.isIconStyle ? 'banner-stack' : '' }}">
                        <block if="currentAdInfo.isApiVideo || currentAdInfo.isVideoStyle">
                            <stack class="banner-video-wrap">
                                <video id="video-banner" class="banner-video" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.video_url : currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                                <div if="{{isPibbVideoFinish}}" class="banner-finish-cover">
                                    <image class="banner-finish-image" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.icon_url : currentAdInfo.icon }}"></image>
                                    <text class="banner-finish-title">{{ currentAdInfo.isApiVideo ? (currentAdInfo.brand_name || currentAdInfo.title) : currentAdInfo.title }}</text>
                                </div>
                                <div class="banner-pop"></div>
                            </stack>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img {{ currentAdInfo.isIconStyle ? 'banner-img-brand-icon' : (currentAdInfo.isImageContain ? 'banner-img-contain' : '') }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isIconStyle" class="banner-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <image id="ad-close-btn" class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <image id="ad-close-btn" class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @appear="fnInitAdButtonOptimize" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        <div>
                            <image if="currentAdInfo.adlogo" class="banner-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                            <image if="currentAdInfo.adtext" class="banner-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                </div>
                <div class="banner-desc-wrap">
                    <text if="currentAdInfo.title" class="banner-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                    <text if="currentAdInfo.description" class="banner-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                </div>
                <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                    <ad-button
                        adId="{{ currentAdInfo.adId }}"
                        adunitId="{{ currentAdInfo.chn_slot_id }}"
                        @click="fnDownloadStart"
                        class="banner-btn {{ adSetup.bNight ? 'banner-btn-night' : '' }}"
                    >
                    </ad-button>
                </div>
                <text else class="banner-btn {{adSetup.bNight ? 'banner-btn-night' : ''}}" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
            </div>
        </stack>
        <div class="tip-wrap" if="isExtraShow && adType === 'tip' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <stack class="tip-stack">
                <div class="tip-box">
                    <stack class="tip-box-stack">
                        <block if="currentAdInfo.isIconStyle">
                            <div class="tip-image-wrap">
                                <image class="tip-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image class="tip-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="tip-box-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <div class="tip-info-box">
                            <stack class="tip-info-stack">
                                <image class="tip-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                <div class="tip-info-mask">
                                    <text if="currentAdInfo.title" class="tip-title">{{ currentAdInfo.title }}</text>
                                    <div class="tip-img-wrap"> 
                                        <image if="currentAdInfo.adlogo" class="tip-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                        <image if="currentAdInfo.adtext" class="tip-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </div>
                            </stack>
                        </div>
                    </stack>
                </div>
                <image class="tip-ad-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-ad-bg.png"></image>
                <div class="ad-message-close-wrap">
                    <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                </div>
            </stack>
        </div>
        <div class="reward-wrap" if="isExtraShow && adType === 'reward' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <stack class="reward-box-stack">
                <block if="currentAdInfo.isIconStyle">
                    <div class="reward-image-wrap">
                        <image class="reward-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                    </div>
                </block>
                <block else>
                    <image class="reward-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                    <image class="reward-box-img" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                </block>
                <div class="reward-info-box">
                    <stack class="reward-info-stack">
                        <image class="reward-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                        <div class="ad-message-close-wrap">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                        </div>
                        <div class="reward-info-mask">
                            <text if="currentAdInfo.title" class="reward-title">{{ currentAdInfo.title }}</text>
                            <div class="reward-img-wrap">
                                <image if="currentAdInfo.adlogo" class="reward-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                <image if="currentAdInfo.adtext" class="reward-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </div>
                    </stack>
                </div>
            </stack>
        </div>
        <div class="video-mask" if="videoShow && canShowAd && adType === 'video' && currentAdInfo" @click="fnOtherClick" @appear="fnAdShow">
            <stack class="video-stack">
                <video if="!currentAdInfo.style_type || currentAdInfo.style_type==50001" class="video-full" id="video" src="{{ currentAdInfo.video_url }}" autoplay="true" controls="false" muted="{{isVideoMuted}}" @prepared="fnVideoPrepared" @start="fnVideoStart" @finish="fnVideoFinish" @timeupdate="fnTimeUpdate"></video>
                <image if="!currentAdInfo.style_type || currentAdInfo.style_type==50001" class="video-bg" alt="blank" src="https://xsmfdq.kkyd.cn/images/ad/ad-bg.png"></image>
                <div if="currentAdInfo.style_type==50002" class="video-wrap">
                    <video if="currentAdInfo.style_type==50002" class="video-block" id="video" src="{{ currentAdInfo.video_url  }}" autoplay="true" controls="false" muted="{{isVideoMuted}}" @prepared="fnVideoPrepared" @start="fnVideoStart" @finish="fnVideoFinish" @timeupdate="fnTimeUpdate"></video>
                </div>
            </stack>
            <div class="cancel-control-wrap"></div>
            <div class="video-time-wrap">
                <stack class="video-time-stack">
                    <image src="https://xsmfdq.kkyd.cn/images/ad_new/ad-time-bg.png" class="video-time-image"></image>
                    <text if="videoTime && videoTime > 0" class="video-time-text">{{ videoTime }}</text>
                </stack>
            </div>
            <image if="!isVideoMuted" @click="fnVideoAudioClose" class="video-audio-open" src="https://xsmfdq.kkyd.cn/images/ad_new/ad-audio-open.png"></image>
            <image if="isVideoMuted" @click="fnVideoAudioOpen" class="video-audio-close" src="https://xsmfdq.kkyd.cn/images/ad_new/ad-audio-close.png"></image>
            <image if="videoCloseTime === 0" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnCloseEvent" class="video-close" src="https://xsmfdq.kkyd.cn/images/ad_new/ad-video-close.png"></image>
            <div if="videoCloseTime === 0 && !isCacheInfo" class="video-award-wrap">
                <stack class="video-award-stack">
                    <image src="https://xsmfdq.kkyd.cn/images/ad_new/ad-award-bg.png" class="video-award-image"></image>
                    <text class="video-award-text">恭喜获得奖励</text>
                </stack>
            </div>
            <div if="videoCloseTime && videoCloseTime > 0" class="video-close-wrap">
                <stack class="video-close-stack">
                    <image src="https://xsmfdq.kkyd.cn/images/ad_new/ad-close-bg.png" class="video-close-image"></image>
                    <text class="video-close-text">{{ isCacheInfo ? '视频'+ videoCloseTime + '秒后可关闭' : '奖励将于'+ videoCloseTime + '秒后发放' }}</text>
                </stack>
            </div>
            <div class="video-box video-box-animation" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch">
                <stack class="video-box-stack">
                    <div class="video-box-info">
                        <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="video-ad-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}"></image>
                        <div class="video-ad-info">
                            <text class="video-ad-title">{{ currentAdInfo.title }}</text>
                            <text class="video-ad-desc">{{ currentAdInfo.description }}</text>
                        </div>
                        <text class="video-ad-btn">{{ currentAdInfo.btnContent }}</text>
                    </div>
                    <div class="video-box-ad-wrap">
                        <image if="currentAdInfo.adlogo" class="video-box-ad-icon" src="{{ currentAdInfo.adlogo }}"></image>
                        <image if="currentAdInfo.adtext" class="video-box-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                    </div>
                </stack>
            </div>
        </div>
        <div class="video-ad-mask" if="videoAdShow && canShowAd && adType === 'video' && currentAdInfo"  @click="fnOtherClick">
            <stack class="video-ad-stack">
                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="video-ad-bg" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}"></image>
                <div class="video-ad-info">
                    <image if="currentAdInfo.icon_url" class="video-ad-img" src="{{ currentAdInfo.icon_url }}"></image>
                    <text class="video-ad-title">{{ currentAdInfo.title }}</text>
                    <text class="video-ad-desc">{{ currentAdInfo.description }}</text>
                    <div class="video-ad-rating-wrap">
                        <rating class="video-ad-rating" numstars="5" rating="{{ currentAdInfo.rating_num || 5 }}" stepsize="0.1" indicator="true"></rating>
                    </div>
                    <div class="video-ad-btn-wrap" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch">
                        <text class="video-ad-btn video-ad-btn-animation">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </div>
            </stack>
            <image class="video-ad-close" src="https://xsmfdq.kkyd.cn/images/ad_new/ad-video-close.png" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnCloseVideoAd('isClick')"></image>
        </div>
        <div id="ad-container" class="open-wrap" if="!isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd) && !isInsertEyeAd" @resize="fnAdContainerResize" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnOpenClick" @appear="fnAdShow">
            <div class="close-btn-block {{currentAdInfo.isBottomCloseBtn ? 'close-btn-bottom' : 'close-btn-top'}}" @touchstart="fnStopPropagation" @click="fnExtraClose" if="currentAdInfo && currentAdInfo.click_behive && !hasTouchClick && !adHasClick && isShowClickBlock"></div>
            <stack class="open-stack-wrap {{isShakeShow ? 'open-stack-end' : ''}}">
                <div class="open-box {{isBrandAd ? 'open-box-brand' : ''}}">
                    <div class="open-extra" if="{{ isBrandAd }}">
                        <text if="currentAdInfo.background_type == 1" class="open-extra-title">今日推荐</text>
                        <div if="currentAdInfo.background_type == 1" class="open-extra-rating">
                            <image class="open-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                        </div>
                    </div>
                    <stack class="img-stack-end open-stack {{isBrandAd ? 'open-stack-brand' : ''}}">
                        <block if="currentAdInfo.isVideoStyle">
                            <stack class="open-video-wrap">
                                <video class="open-video" id="video-open" src="{{ currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                                <div if="{{isPibbVideoFinish}}" class="open-finish-cover">
                                    <image class="open-finish-image" src="{{ currentAdInfo.icon }}"></image>
                                    <text class="open-finish-title">{{ currentAdInfo.title }}</text>
                                    <text class="open-finish-btn">{{ currentAdInfo.btnContent }}</text>
                                </div>
                                <div class="open-pop"></div>
                            </stack>
                        </block>
                        <block elif="currentAdInfo.isIconStyle">
                            <div class="open-image-wrap">
                                <image class="open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="open-img {{ currentAdInfo.isImageContain ? 'open-img-contain' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <div>
                            <image if="currentAdInfo.adlogo" class="open-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                            <image if="currentAdInfo.adtext" class="open-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <div class="open-ad-box-bottom" if="isBrandAd" @appear="fnInitAdButtonOptimize">
                        <text class="open-ad-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>                  
                        <div class="open-ad-box" if="currentAdInfo.icon_url || currentAdInfo.brand_name || currentAdInfo.title">
                            <image if="currentAdInfo.icon_url" class="open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                        </div>
                        <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                            <ad-button
                                adId="{{ currentAdInfo.adId }}"
                                adunitId="{{ currentAdInfo.chn_slot_id }}"
                                @click="fnDownloadStart"
                                class="open-ad-btn {{ currentAdInfo.isBtnBreath ? 'show-breathe' : '' }}"
                            >
                            </ad-button>
                        </div>
                        <text else class="open-ad-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}" @click="fnAdBtnClickHandle">{{ currentAdInfo.btnContent }}</text>
                    </div>
                </div>
                <div class="open-mask" if="isShakeShow && !isBrandAd"></div>
            </stack>
            <div class="{{isBrandAd ? 'shake-brand-wrap' : 'shake-wrap'}}" if="isShakeShow">
                <div class="shake-image-wrap">
                    <image class="shake-image" src="https://xsmfdq.kkyd.cn/images/ad-shake.png"></image>
                </div>
                <text class="shake-straight-text" if="!isBrandAd">摇动手机 了解更多</text>
                <text class="shake-text" if="isBrandAd">摇一摇 或 点击</text>
                <text class="shake-go-page" if="isBrandAd">前往第三方页面或应用</text>
            </div>
            <div class="{{isBrandAd ? 'click-open-brand-wrap' : 'click-open-wrap'}}" if="isOpenFloat" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch">
                <text class="click-open-text">点击前往第三方页面或应用</text>
            </div>
            <div class="open-info" if="isSystemOpenStyle || isBrandAd || !isBrandAd && currentAdInfo.style_type && currentAdInfo.style_type == '30003'">
                <image class="open-info-img" src="{{isSystemOpenStyle ? 'https://xsmfdq.kkyd.cn/images/hmxs/quickapp.png' : '../Common/logo.png'}}"></image>
                <div if="isSystemOpenStyle" class="system-open-info">
                    <text class="system-open-title">{{appName}}</text>
                    <text class="system-open-tip">此服务由快应用提供</text>
                </div>
                <text else class="open-info-text">{{appName}}</text>
            </div>
        </div>
        <div class="new-open-wrap" if="isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd) && !isInsertEyeAd" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <stack class="new-open-stack-box img-stack-end" if="!isBrandAd && canShowAd">
                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                <div>
                    <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                    <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                </div>
                <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchstart="fnStopPropagation" @click="fnCloseOpenAd"></image>
                <div class="new-open-shake-wrap new-open-shake-wrap-api" if="isShakeShow">
                    <image class="shake-image" src="https://xsmfdq.kkyd.cn/images/hmxs/read-new-open-shake-icon.png"></image>
                    <div class="shake-text-wrap">
                        <text class="shake-text">摇一摇 或 点击</text>
                        <text class="shake-go-page">前往第三方页面或应用</text>
                    </div>
                </div>
            </stack>
            <div class="new-open-box" if="isBrandAd && isLoadComplete && brandAdVersion === 1">
                <div class="new-open-close">
                    <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchstart="fnStopPropagation" @click="fnCloseOpenAd"></image>
                </div>
                <text class="new-open-title {{ isShakeShow ? 'new-open-title-shake' : '' }}">今日推荐</text>
                <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                <stack class="new-open-stack">
                    <block if="currentAdInfo.isVideoStyle">
                        <stack class="new-open-video-wrap">
                            <video class="new-open-video" id="video-open" src="{{ currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                            <div if="{{isPibbVideoFinish}}" class="open-finish-cover">
                                <image class="new-open-finish-image" src="{{ currentAdInfo.icon }}"></image>
                                <text class="new-open-finish-title">{{ currentAdInfo.title }}</text>
                                <text class="new-open-finish-btn">{{ currentAdInfo.btnContent }}</text>
                            </div>
                            <div class="new-open-pop"></div>
                        </stack>
                    </block>
                    <block elif="currentAdInfo.isIconStyle">
                        <div class="new-open-icon-wrap">
                            <image class="new-open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        </div>
                    </block>
                    <block else>
                        <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img {{ currentAdInfo.isImageContain ? 'new-open-img-contain' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                    </block>
                    <div>
                        <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                        <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                    </div>
                </stack>
                <text class="new-open-desc {{ isShakeShow ? 'new-open-desc-shake' : '' }}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                <div class="new-open-ad-box {{ isShakeShow ? 'new-open-ad-box-shake' : '' }}">
                    <image if="currentAdInfo.icon_url"  class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                </div>
                <text class="new-open-btn {{ currentAdInfo.isBtnBreath ? 'show-breathe' : '' }} {{ isShakeShow ? 'new-open-btn-shake' : '' }}" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
                <div class="new-open-shake-wrap new-open-shake-wrap-brand" if="isShakeShow">
                    <image class="shake-image" src="https://xsmfdq.kkyd.cn/images/hmxs/read-new-open-shake-icon.png"></image>
                    <div class="shake-text-wrap">
                        <text class="shake-text">摇一摇 或 点击</text>
                        <text class="shake-go-page">前往第三方页面或应用</text>
                    </div>
                </div>
            </div>
        </div>
        <!-- 书架弹窗 -->
        <div class="pop-wrap" if="isExtraShow && adType === 'pop' && currentAdInfo && (isBrandAd && isLoadComplete && brandAdVersion === 1 || !isBrandAd && canShowAd)" @touchstart="fnTouchStart" @touchend="fnTouchEnd" @click="fnClickSwitch" @appear="fnAdShow">
            <stack class="new-open-stack-box img-stack-end" if="!isBrandAd && canShowAd">
                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                <div>
                    <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                    <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                </div>
                <text class="pop-title" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnClosePopAd" @touchstart="fnStopPropagation"></image>
            </stack>
            <div class="new-open-box" if="isBrandAd && isLoadComplete && brandAdVersion === 1">
                <div class="new-open-close">
                    <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnClosePopAd" @touchstart="fnStopPropagation"></image>
                </div>
                <text class="new-open-title">今日推荐</text>
                <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                <stack class="new-open-stack"> 
                    <block if="currentAdInfo.isIconStyle">
                        <div class="pop-image-wrap">
                            <image class="pop-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        </div>
                    </block>
                    <block else>
                        <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                    </block>
                    <div>
                        <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                        <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                    </div>
                </stack>
                <text class="new-open-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                <div if="currentAdInfo.isShowHuaweiAdButton" style="width: 100%; justify-content: center;" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                    <ad-button
                        adId="{{ currentAdInfo.adId }}"
                        adunitId="{{ currentAdInfo.chn_slot_id }}"
                        @click="fnDownloadStart"
                        class="new-open-btn"
                    >
                    </ad-button>
                </div>
                <text else class="new-open-btn" @click="fnAdBtnClick">{{ currentAdInfo.btnContent }}</text>
            </div>
        </div>
        <!-- 返回弹窗，注意：所有广告源均无填充时，或者vivo2.0正在加载时，也展示该1.0弹窗，避免弹窗交替时闪动 -->
        <div class="back-container" if="adType === 'back' && (isBrandAd && brandAdVersion === 1 || !isBrandAd || isNoFilling || isBrandAd && brandAdVersion === 2 && (serviceAdBrand === 'vivo' || serviceAdBrand !== 'vivo' && oppoBrandAdPreload) && !isLoadComplete)" @touchstart="fnTouchStartHandle" @touchend="fnTouchEndHandle" @click="fnClickSwitchHandle">
            <stack id="ad-container" class="back-wrap {{ isVerticalButton ? 'back-wrap-vertical' : '' }}" @touchstart="fnTouchStart" @touchend="fnTouchEnd">
                <div class="content-wrap">
                    <text class="back-title {{ adAlias === 'indexBack' ? 'back-title-index' : '' }}">{{ adAlias === 'readBack' ? '确定退出阅读?' : '确定退出应用?' }}</text>
                    <text class="back-tip" if="adAlias === 'readBack'">今日已阅读<span style="color: #f97053;">{{ readTimes }}</span>分钟</text>
                    <!-- 百度SDK -->
                    <div class="back-box-baidu-sdk" if="chnType === 'SDK_BAIDU'" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                        <div class="baidu-container">
                            <mobads-ad
                                if="SDK_BAIDU.canLoad"
                                type="feed"
                                apid="{{ currentAdInfo.chn_slot_id }}"
                                appid="{{ currentAdInfo.chn_app_id }}"
                                device="{{ imei || oaid || '' }}"
                                adstyle="{{ SDK_BAIDU.feedStyle }}"
                                downloadpanel="{{ SDK_BAIDU.downloadPanel }}"
                                videomuted="{{ !currentAdInfo.play_voice }}"
                                @ad-load="fnBaiduAdLoad"
                                @ad-show="fnBaiduAdShow"
                                @ad-click="fnBaiduAdClick"
                                @ad-closed="fnBaiduAdClosed"
                                @ad-error="fnBaiduAdError"
                            >
                            </mobads-ad>
                        </div>
                        <text if="isNoFilling || !backLoading || SDK_BAIDU.isLoaded" class="exit-btn" @click="fnClickExit">退 出</text>
                    </div>
                    <!-- 厂商1.0和API -->
                    <block else>
                        <!-- 广告素材部分，back-box上没有if是为了占据剩余高度 -->
                        <div class="back-box">
                            <div class="ad-content-box" if="currentAdInfo && (isBrandAd && isLoadComplete || !isBrandAd && canShowAd)" @appear="fnAdShow">
                                <stack class="back-image-box" @appear="fnInitAdButtonOptimize">
                                    <block if="currentAdInfo.isApiVideo || currentAdInfo.isVideoStyle">
                                        <stack class="back-video-wrap">
                                            <video id="video-back" class="back-video" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.video_url : currentAdInfo.videoUrl }}" autoplay="true" muted="true" controls="false" poster="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" playcount="1" @prepared="fnPibbVideoPrepared" @finish="fnPibbVideoFinish"></video>
                                            <div if="{{isPibbVideoFinish}}" class="back-finish-cover">
                                                <image class="back-finish-image" src="{{ currentAdInfo.isApiVideo ? currentAdInfo.icon_url : currentAdInfo.icon }}"></image>
                                                <text class="back-finish-title">{{ currentAdInfo.isApiVideo ? (currentAdInfo.brand_name || currentAdInfo.title) : currentAdInfo.title }}</text>
                                                <text class="back-finish-btn">{{ currentAdInfo.btnContent }}</text>
                                            </div>
                                            <div class="back-pop" @click="fnClickSwitch"></div>
                                        </stack>
                                    </block>
                                    <block elif="currentAdInfo.isIconStyle">
                                        <div class="back-image-wrap" @click="fnClickSwitch">
                                            <image class="back-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                        </div>
                                    </block>
                                    <block else>
                                        <image class="back-image {{ currentAdInfo.isImageContain ? 'back-image-contain' : '' }}" @click="fnClickSwitch" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                        <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="back-image" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}" @click="fnClickSwitch"></image>
                                    </block>
                                    <div class="back-icon">
                                        <image if="currentAdInfo.adlogo" class="back-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                        <image if="currentAdInfo.adtext" class="back-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </stack>
                                <text class="back-desc" @click="fnClickSwitch">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                            </div>
                        </div>
                        <div class="{{ isVerticalButton ? 'back-btn-wrap-vertical' : 'back-btn-wrap' }}">
                            <block if="isNoFilling || !backLoading || isBrandAd && isLoadComplete || !isBrandAd && canShowAd">
                                <!-- 支持退出并加桌 -->
                                <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                    <!-- 退出按钮误触 -->
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick && (isBrandAd && isLoadComplete || !isBrandAd && canShowAd)" class="back-btn-exit" @touchstart="fnStopPropagation" @click="fnExitButtonBehive">{{ adShortcutConfig.outButtonTip }}</text>
                                    <!-- 一键加桌 -->
                                    <div else class="back-btn-container" @touchstart="fnStopPropagation" @click="fnStopPropagation">
                                        <onekey-shortcut-new
                                            btnwidth="{{ isVerticalButton ? backButtonStyle.base.width : '260px' }}"
                                            btnheight="{{ isVerticalButton ? backButtonStyle.base.height : '90px' }}" 
                                            btnfontsize="{{ isVerticalButton ? backButtonStyle.top.fontSize : '32px' }}" 
                                            btnradius="{{ isVerticalButton ? 0 : '45px' }}" 
                                            btncolor="{{ isVerticalButton ? backButtonStyle.top.color : '#817272' }}" 
                                            btnbgcolor="{{ isVerticalButton ? backButtonStyle.top.backgroundColor : '#E7E7E7' }}"
                                            buttexto="{{ adShortcutConfig.outButtonTip }}"
                                            buttextv="{{ adShortcutConfig.outButtonTip }}"
                                            cut-support="{{ cutSupport }}" 
                                            position="adExit"
                                            @oneshortcomplete="fnOneshortComplete">
                                        </onekey-shortcut-new>
                                    </div>
                                </block>
                                <!-- 不支持退出并加桌 -->
                                <block else>
                                    <!-- 退出按钮误触 -->
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" @touchstart="fnStopPropagation" @click="fnExitButtonBehive">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                                    <!-- 非退出按钮误触 -->
                                    <text else class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" @touchstart="fnStopPropagation" @click="fnClickExit">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                                </block>
                            </block>
                            <!-- 下载并加桌 -->
                            <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && adShortcutConfig.advertAddDesk && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                <div if="currentAdInfo && (isBrandAd && isLoadComplete || !isBrandAd && canShowAd)" @touchstart="fnStopPropagation" @click="fnStopPropagation">
                                    <onekey-shortcut-new
                                        btnwidth="{{ isVerticalButton ? backButtonStyle.base.width : '260px' }}"
                                        btnheight="{{ isVerticalButton ? backButtonStyle.base.height : '90px' }}" 
                                        btnfontsize="{{ isVerticalButton ? backButtonStyle.bottom.fontSize : '32px' }}"
                                        btnradius="45px" 
                                        btncolor="{{ isVerticalButton ? backButtonStyle.bottom.color : '#FFFFFF' }}" 
                                        btnbgcolor="{{ isVerticalButton ? backButtonStyle.bottom.backgroundColor : '#6D28F4' }}"
                                        buttexto="{{ currentAdInfo.interaction_type === 2 ? '下载并加桌' : '查看并加桌' }}"
                                        buttextv="{{ currentAdInfo.interaction_type === 2 ? '下载并加桌' : '查看并加桌' }}"
                                        cut-support="{{ cutSupport }}" 
                                        position="adAction"
                                        @oneshortcomplete="fnOneshortComplete">
                                    </onekey-shortcut-new>
                                </div>
                            </block>
                            <!-- 广告按钮 -->
                            <block else>
                                <block if="isBrandAd && isLoadComplete || !isBrandAd && canShowAd">
                                    <div if="currentAdInfo.isShowHuaweiAdButton" @click="fnStopPropagation" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                                        <ad-button
                                            adId="{{ currentAdInfo.adId }}"
                                            adunitId="{{ currentAdInfo.chn_slot_id }}"
                                            @click="fnDownloadStart"
                                            class="back-btn-action {{currentAdInfo.isBtnSize && !(!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)) ? 'back-btn-action-big' : ''}}"
                                        >
                                        </ad-button>
                                    </div>
                                    <text else class="back-btn-action {{currentAdInfo.isBtnSize && !(!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)) ? 'back-btn-action-big' : ''}}" @click="fnAdBtnClickHandle">{{ currentAdInfo.btnContent }}</text>
                                </block>
                            </block>
                        </div>
                    </block>
                </div>
                <!-- 弹窗右上角关闭叉子 -->
                <div class="close-wrap">
                    <image if="chnType === 'SDK_BAIDU'" class="back-close" src="../Common/images/ad-close.png" @touchstart="fnStopPropagation" @click="fnCloseBack"></image>
                    <image else id="ad-close-btn" class="back-close" src="../Common/images/ad-close.png" @touchstart="fnStopPropagation" @click="fnExtraClose"></image>
                </div>
            </stack>
        </div>
        <div class="click-pop-wrap" if="isClickShow && adType != 'message' && adType != 'wall' && adType != 'pre' && adType != 'insert'" @click="fnOtherClick">
            <image class="click-pop-close" src="https://xsmfdq.kkyd.cn/images/ad-close-extra.png" @click="fnCancleClick"></image>
            <div class="click-pop-box">
                <text class="click-pop-content">即将跳转到第三方页面或应用</text>
                <div class="click-pop-btn">
                    <text class="click-pop-cancel" @click="fnCancleClick">取消</text>
                    <text class="click-pop-confirm" @click="fnConfirmClick('isClick')">确认</text>
                </div>
            </div>
        </div>
        <div class="download-pop-wrap" if="isDownloadShow && adType != 'message' && adType != 'wall' && adType != 'pre' && adType != 'insert'" @click="fnOtherClick">
            <image class="download-pop-close" src="https://xsmfdq.kkyd.cn/images/ad-close-extra.png" @click="fnCancleDownload"></image>
            <div class="download-pop-box" if="currentAdInfo.app_info_url && currentAdInfo.app_info_url != ''">
                <text class="download-pop-title">应用详情</text>
                <web class="download-pop-web" src="{{currentAdInfo.app_info_url}}"></web>
                <text class="download-pop-confirm" @click="fnConfirmDownload('isClick')">立即下载</text>
                <text class="download-pop-cancle" @click="fnCancleDownload">放弃下载</text>
            </div>
            <div class="download-pop-box" else>
                <text class="download-pop-title">应用详情</text>
                <div class="download-pop-item" if="currentAdInfo.brand_name">
                    <text class="download-pop-item-title">应用程序：</text>
                    <text class="download-pop-item-content">{{currentAdInfo.brand_name}}</text>
                </div>
                <div class="download-pop-item" if="currentAdInfo.app_size">
                    <text class="download-pop-item-title">大小：</text>
                    <text class="download-pop-item-content">{{currentAdInfo.app_size}}</text>
                </div>
                <div class="download-pop-item" if="currentAdInfo.app_version">
                    <text class="download-pop-item-title">版本：</text>
                    <text class="download-pop-item-content">{{currentAdInfo.app_version}}</text>
                </div>
                <div class="download-pop-item" if="currentAdInfo.publisher">
                    <text class="download-pop-item-title">开发者：</text>
                    <text class="download-pop-item-content">{{currentAdInfo.publisher}}</text>
                </div>
                <div class="download-pop-item" @click="fnChangeWebShow" if="currentAdInfo.privacy_link">
                    <text class="download-pop-item-title">隐私政策：</text>
                    <image class="download-pop-arrow {{isWebShow ? 'download-pop-arrow-default' : 'download-pop-arrow-turn'}}" src="https://xsmfdq.kkyd.cn/images/ad-web-arrow.png"></image>
                </div>
                <web class="download-pop-web" if="isWebShow && currentAdInfo.privacy_link" src="{{currentAdInfo.privacy_link}}"></web>
                <div class="download-pop-item" @click="fnChangeAppShow" if="currentAdInfo.permission_link">
                    <text class="download-pop-item-title">应用权限：</text>
                    <image class="download-pop-arrow {{isAppShow ? 'download-pop-arrow-default' : 'download-pop-arrow-turn'}}" src="https://xsmfdq.kkyd.cn/images/ad-web-arrow.png"></image>
                </div>
                <web class="download-pop-web" if="isAppShow && currentAdInfo.permission_link" src="{{currentAdInfo.permission_link}}"></web>
                <text class="download-pop-confirm" @click="fnConfirmDownload('isClick')">立即下载</text>
                <text class="download-pop-cancle" @click="fnCancleDownload">放弃下载</text>
            </div>
        </div>
        <div class="pre-progress" if="{{canVideoPreShow && isVideoLoading && adType === 'video' && !videoShow && !videoAdShow}}" @click="fnPreProgressClose">
            <progress type="circular"  class="pre-progress-con"/>
        </div>
        <!-- VIVO2.0 -->
        <ad
            if="{{chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'message' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo' }}"
            class="message-ad-wrap"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack class="message-ad-stack">
                <div class="message-wrap">
                    <div if="adAlias == 'readTop'" class="message-top">
                        <div class="message-top-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-top-image-wrap">
                                        <image class="message-top-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-top-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-top-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-top-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-top-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="message-top-info">
                            <text if="currentAdInfo.title" class="message-top-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                            <text if="currentAdInfo.description" class="message-top-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                            <text class="message-top-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                    <div if="adAlias == 'readMiddle'" class="message-middle">
                        <div class="message-middle-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-middle-image-wrap">
                                        <image class="message-middle-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-middle-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-middle-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-middle-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-middle-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <text if="currentAdInfo.title" class="message-middle-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="message-middle-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                        <div class="message-middle-info-wrap">
                            <div class="message-middle-info">
                                <image if="currentAdInfo.icon_url" class="message-middle-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                <text if="currentAdInfo.brand_name" class="message-middle-name {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.brand_name }}</text> 
                            </div>
                            <text class="message-middle-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                </div>
                <ad-clickable-area type="click">
                    <text class="message-ad-blank"></text>
                </ad-clickable-area>
                <block if="!currentAdInfo.click_behive || adHasClick">
                    <image class="{{adAlias == 'readTop' ? 'message-close-top-outer' :  'message-close-middle-outer'}}" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="{{adAlias == 'readTop' ? 'message-na-close-top-outer' :  'message-na-close-middle-outer'}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <div class="pre-ad-box" if="adType === 'pre' && isBrandAd && brandAdVersion === 2 && serviceAdBrand === 'vivo' && !isNoFilling" >
            <block if="!currentAdInfo.invisible_click_behive">
                <swiper class="pre-ad-tab" loop="{{false}}" indicator="{{false}}" @click="fnVivoClick" @touchend="fnVivoTouch">
                    <div class="pre-container">
                        <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-block"></text>
                        <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                        <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                        <div if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                        <ad
                            if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                            class="pre-ad-brand {{!(currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                            adId="{{currentAdInfo.adId}}"
                            @appear="fnAdShow"
                            @error="fnNewBrandAdError"
                            @adclick="fnNewBrandAdClick"
                            >
                            <stack class="pre-ad-stack">
                                <div class="pre-ad-wrap">
                                    <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                    <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                    <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                    <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}">
                                        <stack class="pre-image-box">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video-click" class="video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="pre-image-wrap">
                                                    <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="pre-image {{currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                            </block>
                                            <div class="pre-ad-tip">
                                                <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                                <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                        </stack>
                                        <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                        <div class="pre-box" if="adHeight && adHeight > 1250">
                                            <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                        </div>
                                        <div class="pre-btn-center">
                                            <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </div>
                                    </div>
                                </div>
                                <ad-clickable-area type="click" class="pre-ad-blank">
                                    <text class="pre-ad-blank"></text>
                                </ad-clickable-area>
                                <block if="!currentAdInfo.click_behive || adHasClick">
                                    <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    <image class="pre-na-close-outer {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}"  if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                </block>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>
            <block else>
                <div class="pre-container">
                    <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-block"></text>
                    <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                    <text if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick)" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                    <div if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                    <ad
                        if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                        class="pre-ad-brand {{!(currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                        adId="{{currentAdInfo.adId}}"
                        @appear="fnAdShow"
                        @error="fnNewBrandAdError"
                        @adclick="fnNewBrandAdClick"
                        >
                        <stack class="pre-ad-stack">
                            <div class="pre-ad-wrap">
                                <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}">
                                    <stack class="pre-image-box">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video-click" class="video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="pre-image-wrap">
                                                    <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="pre-image {{currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                        <block if="currentAdInfo.click_behive && !adHasClick">
                                            <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                            <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                        </block>
                                        <div class="pre-ad-tip">
                                            <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                            <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </stack>
                                    <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                    <div class="pre-box" if="adHeight && adHeight > 1250">
                                        <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                    </div>
                                    <div class="pre-btn-center">
                                        <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                    </div>
                                </div>
                            </div>
                            <ad-clickable-area type="click" class="pre-ad-blank">
                                <text class="pre-ad-blank"></text>
                            </ad-clickable-area>
                            <block if="!currentAdInfo.click_behive || adHasClick">
                                <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                <image class="pre-na-close-outer {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}"  if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                            </block>
                        </stack>
                    </ad>
                </div>
            </block>
        </div>
        <block if="adType === 'insert' && chnType !== 'SDK_BAIDU' && isBrandAd && brandAdVersion === 2 && serviceAdBrand === 'vivo'">
            <block if="!currentAdInfo.invisible_click_behive">
                <swiper class="insert-ad-tab" loop="{{false}}" indicator="{{false}}" @click="fnVivoClick" @touchend="fnVivoTouch">
                    <div class="insert-container">
                        <ad
                            if="{{isExtraShow && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError}}"
                            style="width: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertHeight + 'px'}};"
                            adId="{{currentAdInfo.adId}}"
                            @appear="fnAdShow"
                            @error="fnNewBrandAdError"
                            @adclick="fnNewBrandAdClick"
                            >
                            <stack class="insert-container">
                                <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                        <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                        <div class="insert-extra-rating">
                                            <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                                        </div>
                                    </div>
                                    <div class="insert-ad-box">
                                        <stack class="insert-box-stack">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video-click" class="insert-image"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="insert-image-wrap">
                                                    <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                            <block if="currentAdInfo.isVerticalStyle">
                                                <div class="insert-vertical-wrap">
                                                    <div class="insert-box">
                                                        <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                    </div>
                                                    <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                    <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                                 </div>
                                            </block>
                                            <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                                <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                                <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                            </block>
                                        </stack>
                                        <block if="!currentAdInfo.isVerticalStyle">
                                            <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                            <div class="insert-box">
                                                <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                            </div>
                                            <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </block>
                                    </div>
                                    <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                                </div>
                                <ad-clickable-area type="click" class="insert-ad-blank">
                                    <text class="insert-ad-blank"></text>
                                </ad-clickable-area>
                                <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <ad-clickable-area type="click" class="insert-ad-blank">
                                        <text class="insert-ad-blank"></text>
                                    </ad-clickable-area>
                                    <block if="!currentAdInfo.click_behive || adHasClick">
                                        <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    </block>
                                </stack>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>
            <block else>
                <div class="insert-container">
                    <ad
                        if="{{isExtraShow && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError}}"
                        style="width: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertHeight + 'px'}};"
                        adId="{{currentAdInfo.adId}}"
                        @appear="fnAdShow"
                        @error="fnNewBrandAdError"
                        @adclick="fnNewBrandAdClick"
                        >
                        <stack class="insert-container">
                            <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                    <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                    <div class="insert-extra-rating">
                                        <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                                    </div>
                                </div>
                                <div class="insert-ad-box">
                                    <stack class="insert-box-stack">
                                        <block if="currentAdInfo.isVideoStyle">
                                            <ad-clickable-area type="video-click" class="insert-image"></ad-clickable-area>
                                        </block>
                                        <block elif="currentAdInfo.isIconStyle">
                                            <div class="insert-image-wrap">
                                                <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            </div>
                                        </block>
                                        <block else>
                                            <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                        </block>
                                        <block if="currentAdInfo.isVerticalStyle">
                                            <div class="insert-vertical-wrap">
                                                <div class="insert-box">
                                                    <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                </div>
                                                <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                            </div>
                                        </block>
                                        <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                            <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                            <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                        <block if="currentAdInfo.click_behive && !adHasClick">
                                            <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                            <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                        </block>
                                    </stack>
                                    <block if="!currentAdInfo.isVerticalStyle">
                                        <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                        <div class="insert-box">
                                            <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                        </div>
                                        <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                    </block>
                                </div>
                                <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                            </div>
                            <ad-clickable-area type="click" class="insert-ad-blank">
                                <text class="insert-ad-blank"></text>
                            </ad-clickable-area>
                            <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                <ad-clickable-area type="click" class="insert-ad-blank">
                                    <text class="insert-ad-blank"></text>
                                </ad-clickable-area>
                                <block if="!currentAdInfo.click_behive || adHasClick">
                                    <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                </block>
                            </stack>
                        </stack>
                    </ad>
                </div>
            </block>
        </block>
        <ad
            if="{{isExtraShow && adType === 'wall' && adAlias !== 'adWallCache' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo'}}"
            class="wall-ad"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack class="wall-ad-stack">
                <div class="wall-ad-wrap {{ adSetup.bNight ? 'night-wall-ad-wrap' : '' }}">
                    <block if="[10005, 10207].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item top-img-bottom-title">
                            <stack class="img-box">
                                <image class="img-brand img-brand-new" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                            <div class="title-box">
                                <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                                <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                            </div>
                        </div>
                    </block>
                    <block if="[10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item three-img">
                            <div class="imgs-box">
                                <stack class="img-box" if="currentAdInfo.images.length" for="['', '', '']">
                                    <image class="img-brand" if="$idx === 0" src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}" @complete="fnAdShow"></image>
                                    <image class="img-brand" else src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}"></image>
                                    <div class="ad-logo-box">
                                        <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                        <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </stack>
                            </div>
                        </div>
                        <div class="title-box right-title-box">
                            <text class="title">{{ currentAdInfo.description || currentAdInfo.title }}</text>
                            <text class="btn-box">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                    <block if="[10001, 10002, 10209].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item {{ [10001, 10209].indexOf(currentAdInfo.style_type) > -1 ? 'left-img-right-word' : 'left-word-right-img' }}">
                            <stack class="img-box left-img-box">
                                <image class="img-brand" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="title-box">
                            <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                            <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                </div>
                <ad-clickable-area type="click">
                    <text class="wall-ad-blank"></text>
                </ad-clickable-area>
            </stack>
        </ad>
        <ad
            if="{{chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'banner' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo'}}"
            class="banner-ad-wrap {{ currentAdInfo.menu_click_behive && !adHasClick ? 'banner-ad-wrap-click-behive' : '' }}"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack style="flex-direction: column; justify-content: flex-end; width: 100%; height: 100%;">
                <div class="banner-wrap" style="background-color: {{adSetup.bNight ? 'rgba(29,29,31,1)' : (adSetup.isMember ? (adSetup.memberBg == 'parchment' ? '#F3E3BE' : '#dfedd6') : adSetup.bgColor)}};">
                    <div class="banner-img-wrap">
                        <stack class="img-stack-end {{currentAdInfo.isIconStyle ? 'banner-stack' : ''}}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video-click" class="video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand-icon" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand {{ currentAdInfo.isVerticalStyle ? 'banner-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="banner-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>  
                            <div>
                                <image if="currentAdInfo.adlogo" class="banner-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                <image if="currentAdInfo.adtext" class="banner-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                    </div>
                    <div class="banner-desc-wrap">
                        <text if="currentAdInfo.title" class="banner-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="banner-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                    </div>
                    <text class="banner-btn {{adSetup.bNight ? 'banner-btn-night' : ''}}">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click" class="empty-click-area"></ad-clickable-area>
                <block if="currentAdInfo.click_behive && !adHasClick">
                    <ad-clickable-area type="click">
                        <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                        <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                    </ad-clickable-area>
                </block>
                <block else>
                    <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'tip' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo'}}"
            class="tip-ad-wrap"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <div class="tip-wrap tip-wrap-extra">
                <stack class="tip-stack">
                    <div class="tip-box">
                        <stack class="tip-box-stack">
                            <block if="currentAdInfo.isIconStyle">
                                <div class="tip-image-wrap">
                                    <image class="tip-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image class="tip-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="tip-box-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="tip-info-box">
                                <stack class="tip-info-stack">
                                    <image class="tip-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                    <div class="tip-info-mask">
                                        <text if="currentAdInfo.title" class="tip-title">{{ currentAdInfo.title }}</text>
                                        <div class="tip-img-wrap"> 
                                            <image if="currentAdInfo.adlogo" class="tip-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                            <image if="currentAdInfo.adtext" class="tip-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </div>
                                </stack>
                            </div>
                        </stack>
                    </div>
                    <ad-clickable-area type="click">
                        <image class="tip-ad-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-ad-bg.png"></image>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click" style="align-self: flex-start;">
                            <div class="ad-message-close-wrap">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'reward' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo'}}"
            class="reward-wrap"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <div class="reward-box">
                <stack class="reward-box-stack reward-box-stack-extra">
                    <block if="currentAdInfo.isIconStyle">
                        <div class="reward-image-wrap">
                            <image class="reward-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        </div>
                    </block>
                    <block else>
                        <image class="reward-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <image class="reward-box-img" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                    </block>
                    <ad-clickable-area type="click">
                        <div class="reward-info-box">
                            <stack class="reward-info-stack">
                                <image class="reward-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                <div class="reward-info-mask">
                                    <text if="currentAdInfo.title" class="reward-title">{{ currentAdInfo.title }}</text>
                                    <div class="reward-img-wrap"> 
                                        <image if="currentAdInfo.adlogo" class="reward-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                        <image if="currentAdInfo.adtext" class="reward-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </div>
                            </stack>
                        </div>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click">
                            <div class="ad-message-close-wrap-extra">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap-extra">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{!isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && !isInsertEyeAd && serviceAdBrand === 'vivo'}}"
            class="open-ad-wrap"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack class="open-container {{currentAdInfo.isBottomCloseBtn ? 'open-container-bottom' : '' }}">
                <div class="open-wrap">
                    <div class="open-box {{ currentAdInfo.isVerticalStyle ? '' : 'open-box-brand' }}">
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-extra">
                                <text if="currentAdInfo.background_type == 1" class="open-extra-title">今日推荐</text>
                                <div if="currentAdInfo.background_type == 1" class="open-extra-rating">
                                    <image class="open-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                                </div>
                            </div>
                        </block>
                        <stack class="img-stack-end open-stack {{ currentAdInfo.isVerticalStyle ? '' : 'open-stack-brand' }}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video-click" class="video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="open-image-wrap">
                                    <image class="open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="open-img-brand {{ currentAdInfo.isVerticalStyle ? 'open-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="open-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="{{ currentAdInfo.isVerticalStyle ? 'open-ad-right' : '' }}">
                                <image if="currentAdInfo.adlogo" class="open-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="open-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-ad-box-bottom">
                                <text class="open-ad-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>                  
                                <div class="open-ad-box" >
                                    <image if="currentAdInfo.icon_url" class="open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                </div>
                                <ad-clickable-area type="click">
                                    <text class="open-ad-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                                </ad-clickable-area>
                            </div> 
                        </block>
                    </div>
                    <div class="click-open-brand-wrap" if="isOpenFloat">
                        <ad-clickable-area type="click">
                            <text class="click-open-text">点击前往第三方页面或应用</text>
                        </ad-clickable-area>
                    </div>
                    <div class="open-info" if="!currentAdInfo.isVerticalStyle">
                        <image class="open-info-img" src="{{isSystemOpenStyle ? 'https://xsmfdq.kkyd.cn/images/hmxs/quickapp.png' : '../Common/logo.png'}}"></image>
                        <div if="isSystemOpenStyle" class="system-open-info">
                            <text class="system-open-title">{{appName}}</text>
                            <text class="system-open-tip">此服务由快应用提供</text>
                        </div>
                        <text else class="open-info-text">{{appName}}</text>
                    </div>
                </div>
                <ad-clickable-area type="click" class="open-close-wrapper {{currentAdInfo.isBottomCloseBtn ? 'open-close-bottom' : 'open-close-top' }}" >
                    <div class="open-screen-close" if="currentAdInfo.click_behive && !adHasClick">
                        <text class="close-time-text">{{ countTime }}</text>
                        <text class="close-text"> 跳过</text>
                    </div>
                </ad-clickable-area>
                <block if="!isOpenFloat">
                    <ad-clickable-area type="click" class="open-block"></ad-clickable-area>
                </block>
            </stack>
        </ad>
        <ad
            if="{{isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && !isInsertEyeAd && serviceAdBrand === 'vivo'}}"
            class="new-open-wrap"
            adId="{{currentAdInfo.adId}}"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack class="new-open-container">
                <div class="new-open-box">
                    <block if="!currentAdInfo.isVerticalStyle">
                        <text class="new-open-title" >今日推荐</text>
                        <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                    </block>
                    <stack class="{{currentAdInfo.isVerticalStyle ? 'new-vertical-stack' : 'new-open-stack'}} ">
                        <block if="currentAdInfo.isVideoStyle">
                            <ad-clickable-area type="video-click" class="new-open-img"></ad-clickable-area>
                        </block>
                        <block elif="currentAdInfo.isIconStyle">
                            <div class="new-open-icon-wrap">
                                <image class="new-open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img " src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <block if="currentAdInfo.isVerticalStyle">
                            <div class="new-open-vertical-wrap">
                                <div class="new-open-vertical-box">
                                    <image if="currentAdInfo.icon_url" class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name ">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                </div>
                                <text class="new-open-vertical-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }} </text>
                                <text class="new-open-vertical-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                            </div>
                        </block>
                        <div>
                            <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <block if="!currentAdInfo.isVerticalStyle">
                        <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                        <div class="new-open-ad-box">
                            <image if="currentAdInfo.icon_url"  class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                        </div>
                        <text class="new-open-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                    </block>
                </div>
                <ad-clickable-area type="click">
                    <text class="new-open-block"></text>
                </ad-clickable-area>
                <block if="currentAdInfo.click_behive && !adHasClick">
                    <ad-clickable-area type="click">
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                        </div>
                    </ad-clickable-area>
                </block>
                <block else>
                    <div class="new-open-close">
                        <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnCloseOpenAd"></image>
                    </div>
                </block>
            </stack> 
        </ad>
        <ad
            if="{{isExtraShow && adType === 'pop' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand === 'vivo'}}"
            adId="{{currentAdInfo.adId}}"
            class="pop-wrap"
            @appear="fnAdShow"
            @error="fnNewBrandAdError"
            @adclick="fnNewBrandAdClick"
            >
            <stack class="new-open-ad-stack">
                <div class="new-open-box">
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                        </div>
                    </block>
                    <block else>
                        <text class="pop-block"></text>
                    </block>
                    <text class="new-open-title">今日推荐</text>
                    <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                    <stack class="new-open-stack"> 
                        <block if="currentAdInfo.isIconStyle">
                            <div class="pop-image-wrap">
                                <image class="pop-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <div>
                            <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                    <text class="new-open-btn">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click"  class="pop-ad-blank">
                    <text class="pop-ad-blank"></text>
                </ad-clickable-area> 
                 <block if="!currentAdInfo.click_behive || adHasClick">
                    <div class="new-open-close">
                        <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnClosePopAd"></image>
                    </div>
                </block>
            </stack>
        </ad>
        <div class="back-container" if="adType === 'back' && isBrandAd && brandAdVersion === 2 && serviceAdBrand === 'vivo' && isLoadComplete && !isNoFilling">
            <ad
                class="back-ad-brand {{ isVerticalButton ? 'back-ad-brand-vertical' : '' }} {{ currentAdInfo.action_area === 2 && !adHasClick ? 'back-ad-brand-extend' : '' }}"
                adId="{{currentAdInfo.adId}}"
                @error="fnNewBrandAdError"
                @adclick="fnNewBrandAdClick">
                <stack class="back-ad-stack">        
                    <stack class="back-wrap {{ isVerticalButton ? 'back-wrap-vertical' : '' }}">
                        <div class="content-wrap">
                            <text class="back-title {{ adAlias === 'indexBack' ? 'back-title-index' : '' }}">{{ adAlias === 'readBack' ? '确定退出阅读?' : '确定退出应用?' }}</text>
                            <text class="back-tip" if="adAlias === 'readBack'">今日已阅读<span style="color: #f97053;">{{ readTimes }}</span>分钟</text>
                            <div class="back-box">
                                <div class="ad-content-box" @appear="fnAdShow">
                                    <stack class="back-image-box">
                                        <block if="currentAdInfo.isVideoStyle">
                                            <ad-clickable-area type="video-click" class="video-show"></ad-clickable-area>
                                        </block>
                                        <block elif="currentAdInfo.isIconStyle">
                                            <div class="back-image-wrap">
                                                <image class="back-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            </div>
                                        </block>
                                        <block else>
                                            <image class="back-image {{ currentAdInfo.isVerticalStyle ? 'back-img-vertical' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="back-image" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                        </block>
                                        <div class="back-icon">
                                            <image if="currentAdInfo.adlogo" class="back-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                            <image if="currentAdInfo.adtext" class="back-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </stack>
                                    <text class="back-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                </div>
                            </div>
                            <div class="{{ isVerticalButton ? 'back-btn-wrap-vertical' : 'back-btn-wrap' }}">
                                <!-- 支持退出加桌 -->
                                <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit">{{ adShortcutConfig.outButtonTip }}</text>
                                    <!-- 未开启关闭误触时，空白占位符 -->
                                    <div else class="back-btn-exit" style="background-color: transparent;"></div>
                                    <text class="back-btn-action">{{ currentAdInfo.btnContent }}</text>
                                </block>
                                <!-- 不支持退出加桌 -->
                                <block else>
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                                    <div else class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" style="background-color: transparent;"></div>
                                    <text class="back-btn-action {{ currentAdInfo.isBtnSize ? 'back-btn-action-big' : '' }}">{{ currentAdInfo.btnContent }}</text>
                                </block>
                            </div>
                        </div>
                        <div class="close-wrap" if="currentAdInfo.click_behive && !adHasClick">
                            <image class="back-close" src="../Common/images/ad-close.png"></image>
                        </div>
                    </stack>
                    <ad-clickable-area type="click" class="back-ad-blank">
                        <text class="back-ad-blank"></text>
                    </ad-clickable-area>
                    <stack class="back-stack-outer">
                        <ad-clickable-area type="click" class="back-stack-outer-blank">
                            <text class="back-ad-blank"></text>
                        </ad-clickable-area>
                        <block if="!currentAdInfo.click_behive || adHasClick">
                            <image class="back-close-outer" src="../Common/images/ad-close.png" @click="fnExtraClose"></image>
                        </block>
                        <div class="back-btn-wrap-outer {{ currentAdInfo.isBtnSize && !(!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)) ? 'back-btn-wrap-outer-small' : '' }}" if="!(currentAdInfo.exit_button_behive && !adHasClick)">
                            <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                <div class="back-btn-container" @click="fnStopPropagation">
                                    <onekey-shortcut-new
                                        btnwidth="{{ isVerticalButton ? backButtonStyle.base.width : '260px' }}"
                                        btnheight="{{ isVerticalButton ? backButtonStyle.base.height : '90px' }}" 
                                        btnfontsize="{{ isVerticalButton ? backButtonStyle.top.fontSize : '32px' }}" 
                                        btnradius="{{ isVerticalButton ? '0px' :'45px'}}" 
                                        btncolor="{{ isVerticalButton ? backButtonStyle.top.color : '#817272' }}" 
                                        btnbgcolor="{{ isVerticalButton ? backButtonStyle.top.backgroundColor : '#E7E7E7' }}"
                                        buttexto="{{ adShortcutConfig.outButtonTip }}"
                                        buttextv="{{ adShortcutConfig.outButtonTip }}"
                                        cut-support="{{ cutSupport }}" 
                                        position="adExit"
                                        @oneshortcomplete="fnOneshortComplete">
                                    </onekey-shortcut-new>
                                </div>
                            </block>
                            <block else>
                                <text class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" @click="fnClickExit">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                            </block>
                        </div>
                    </stack>
                </stack>
            </ad>  
        </div>
        <!-- OPPO2.0非预加载 -->
        <ad
            if="{{chnType !== 'SDK_BAIDU' &&  isExtraShow && adType === 'message' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError}}"
            class="message-ad-wrap {{ isLoadComplete ? adAlias === 'readTop' ? 'message-ad-wrap-top' : adAlias === 'readMiddle' ? 'message-ad-wrap-middle' : '' : '' }}"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="message-ad-stack" if="isLoadComplete">
                <div class="message-wrap">
                    <div if="adAlias == 'readTop'" class="message-top">
                        <div class="message-top-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-top-image-wrap">
                                        <image class="message-top-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-top-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-top-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-top-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-top-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="message-top-info">
                            <text if="currentAdInfo.title" class="message-top-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                            <text if="currentAdInfo.description" class="message-top-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                            <text class="message-top-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                    <div if="adAlias == 'readMiddle'" class="message-middle">
                        <div class="message-middle-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-middle-image-wrap">
                                        <image class="message-middle-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-middle-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-middle-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-middle-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-middle-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <text if="currentAdInfo.title" class="message-middle-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="message-middle-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                        <div class="message-middle-info-wrap">
                            <div class="message-middle-info">
                                <image if="currentAdInfo.icon_url" class="message-middle-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                <text if="currentAdInfo.brand_name" class="message-middle-name {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.brand_name }}</text> 
                            </div>
                            <text class="message-middle-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                </div>
                <ad-clickable-area type="click">
                    <text class="message-ad-blank"></text>
                </ad-clickable-area>
                <block if="!currentAdInfo.click_behive || adHasClick">
                    <image class="{{adAlias == 'readTop' ? 'message-close-top-outer' :  'message-close-middle-outer'}}" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="{{adAlias == 'readTop' ? 'message-na-close-top-outer' :  'message-na-close-middle-outer'}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <div class="pre-ad-box" if="adType === 'pre' && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError && !isNoFilling">
            <block if="!currentAdInfo.isFullScreenCover && !currentAdInfo.invisible_click_behive">
                <swiper class="pre-ad-tab" loop="{{false}}" indicator="{{false}}">
                    <div class="pre-container">
                        <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-block"></text>
                        <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                        <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) }}" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                        <div if="!(isExtraShow && currentAdInfo && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                        <ad
                            if="{{isExtraShow && currentAdInfo}}"
                            class="pre-ad-brand {{!(currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                            adunitid="{{ currentAdInfo.chn_slot_id }}"
                            @load="fnOppoAdLoad"
                            @error="fnOppoAdError"
                            @adclick="fnNewBrandAdClick"
                            @adshow="fnAdShow"
                            type="native"
                            > 
                            <stack class="pre-ad-stack" if="isLoadComplete" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                                <div class="pre-ad-wrap">
                                    <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                    <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                    <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                    <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}" >
                                        <stack class="pre-image-box">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="pre-image-wrap">
                                                    <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="pre-image {{currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                            </block>
                                            <div class="pre-ad-tip">
                                                <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                                <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                        </stack>
                                        <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                        <div class="pre-box" if="adHeight && adHeight > 1250">
                                            <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                        </div>
                                        <div class="pre-btn-center">
                                            <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </div>
                                    </div>
                                </div>
                                <ad-clickable-area type="click" class="pre-ad-blank" >
                                    <text class="pre-ad-blank"></text>
                                </ad-clickable-area>
                                <block if="adHasClick || !currentAdInfo.click_behive">
                                    <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}"  if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    <image class="pre-na-close-outer  {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                </block>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>     
            <block else>
                <div class="pre-container">
                    <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-block"></text>
                    <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                    <text if="{{!(isExtraShow && currentAdInfo && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) }}" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                    <div if="!(isExtraShow && currentAdInfo && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                    <ad
                        if="{{isExtraShow && currentAdInfo}}"
                        class="pre-ad-brand {{!((isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                        style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }};"
                        adunitid="{{ currentAdInfo.chn_slot_id }}"
                        @load="fnOppoAdLoad"
                        @error="fnOppoAdError"
                        @adclick="fnNewBrandAdClick"
                        @adshow="fnAdShow"
                        type="native"
                        >
                        <stack class="pre-ad-stack" if="isLoadComplete" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                            <div class="pre-ad-stack" style="flex-direction: column;">
                                <stack class="pre-ad-stack" style="flex: 1;">
                                    <div class="pre-ad-wrap" style="margin-left: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '20px' : '0px' }};">
                                        <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                        <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                        <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                        <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}" >
                                            <stack class="pre-image-box">
                                                <block if="currentAdInfo.isVideoStyle">
                                                    <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                                </block>
                                                <block elif="currentAdInfo.isIconStyle">
                                                    <div class="pre-image-wrap">
                                                        <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    </div>
                                                </block>
                                                <block else>
                                                    <image class="pre-image {{currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                                </block>
                                                <block if="currentAdInfo.click_behive && !adHasClick">
                                                    <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                    <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                                </block>
                                                <div class="pre-ad-tip">
                                                    <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                                    <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                                </div>
                                            </stack>
                                            <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                            <div class="pre-box" if="adHeight && adHeight > 1250">
                                                <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                            </div>
                                            <div class="pre-btn-center">
                                                <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                            </div>
                                        </div>
                                    </div>
                                    <ad-clickable-area type="click" class="pre-ad-blank" >
                                        <text class="pre-ad-blank"></text>
                                    </ad-clickable-area>
                                    <block if="adHasClick || !currentAdInfo.click_behive">
                                        <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}"  if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        <image class="pre-na-close-outer  {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    </block>
                                </stack>
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '328px' : '0px' }};"></div>
                            </div>
                            <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                        </stack>
                    </ad>
                </div> 
            </block>
        </div>
        <block if="adType === 'insert' && chnType !== 'SDK_BAIDU' && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError">
            <block if="!currentAdInfo.isFullScreenCover && !currentAdInfo.invisible_click_behive">
                <swiper class="insert-ad-tab" loop="{{false}}" indicator="{{false}}">
                    <div class="insert-container">
                        <ad
                            if="{{isExtraShow && currentAdInfo && isBrandAd && brandAdVersion === 2 }}"
                            style="width: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertHeight + 'px'}};"
                            adunitid="{{ currentAdInfo.chn_slot_id }}"
                            @load="fnOppoAdLoad"
                            @error="fnOppoAdError"
                            @adclick="fnNewBrandAdClick"
                            @adshow="fnAdShow"
                            type="native"
                            >
                            <stack class="insert-container" if="isLoadComplete" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                                <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                        <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                        <div class="insert-extra-rating">
                                            <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                                        </div>
                                    </div>
                                    <div class="insert-ad-box {{ currentAdInfo.isVerticalStyle ? 'insert-vertical-box' : '' }}">
                                        <stack class="insert-box-stack {{currentAdInfo.isVerticalStyle ? 'insert-vertical-stack' : '' }}">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="insert-image-wrap">
                                                    <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                            <block if="currentAdInfo.isVerticalStyle">
                                                <div class="insert-vertical-wrap">
                                                    <div class="insert-box">
                                                        <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                    </div>
                                                    <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                    <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                                </div>
                                            </block>
                                            <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                                <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                                <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                            </block>
                                        </stack>
                                        <block if="!currentAdInfo.isVerticalStyle">
                                            <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                            <div class="insert-box">
                                                <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                            </div>
                                            <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </block>
                                    </div>
                                    <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                                </div>
                                <ad-clickable-area type="click" class="insert-ad-blank">
                                    <text class="insert-ad-blank"></text>
                                </ad-clickable-area>
                                <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <ad-clickable-area type="click" class="insert-ad-blank">
                                        <text class="insert-ad-blank"></text>
                                    </ad-clickable-area>
                                    <block if="!currentAdInfo.click_behive || adHasClick">
                                        <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    </block>
                                </stack>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>
            <block else>
                <div class="insert-container">
                    <ad
                        if="{{isExtraShow && currentAdInfo && isBrandAd && brandAdVersion === 2 }}"
                        style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }}; width: {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick ? '100%' : insertHeight + 'px'}};"
                        adunitid="{{ currentAdInfo.chn_slot_id }}"
                        @load="fnOppoAdLoad"
                        @error="fnOppoAdError"
                        @adclick="fnNewBrandAdClick"
                        @adshow="fnAdShow"
                        type="native"
                        >
                        <stack class="insert-container" if="isLoadComplete" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                            <div class="insert-container">
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '150px' : '0px' }};"></div>
                                <stack class="insert-container">
                                    <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                        <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                            <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                            <div class="insert-extra-rating">
                                                <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                                            </div>
                                        </div>
                                        <div class="insert-ad-box {{ currentAdInfo.isVerticalStyle ? 'insert-vertical-box' : '' }}">
                                            <stack class="insert-box-stack {{currentAdInfo.isVerticalStyle ? 'insert-vertical-stack' : '' }}">
                                                <block if="currentAdInfo.isVideoStyle">
                                                    <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                                </block>
                                                <block elif="currentAdInfo.isIconStyle">
                                                    <div class="insert-image-wrap">
                                                        <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    </div>
                                                </block>
                                                <block else>
                                                    <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                                </block>
                                                <block if="currentAdInfo.isVerticalStyle">
                                                    <div class="insert-vertical-wrap">
                                                        <div class="insert-box">
                                                            <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                        </div>
                                                        <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                        <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                                    </div>
                                                </block>
                                                <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                                    <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                                    <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                                </div>
                                                <block if="currentAdInfo.click_behive && !adHasClick">
                                                    <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                    <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                                </block>
                                            </stack>
                                            <block if="!currentAdInfo.isVerticalStyle">
                                                <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                <div class="insert-box">
                                                    <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                </div>
                                                <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                            </block>
                                        </div>
                                        <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                                    </div>
                                    <ad-clickable-area type="click" class="insert-ad-blank">
                                        <text class="insert-ad-blank"></text>
                                    </ad-clickable-area>
                                    <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                        <ad-clickable-area type="click" class="insert-ad-blank">
                                            <text class="insert-ad-blank"></text>
                                        </ad-clickable-area>
                                        <block if="!currentAdInfo.click_behive || adHasClick">
                                            <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                            <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        </block>
                                    </stack>
                                </stack>
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '328px' : '0px' }};"></div>
                            </div>
                            <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click">
                                <text class="insert-ad-blank"></text>
                            </ad-clickable-area>
                        </stack>
                    </ad>
                </div>
            </block>
        </block>
        <ad
            if="{{isExtraShow && adType === 'wall' && adAlias !== 'adWallCache' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="wall-ad {{isLoadComplete ? [10005, 10207].indexOf(currentAdInfo.style_type) > -1 ? 'wall-ad-one-style' : [10001, 10002, 10209].indexOf (currentAdInfo.style_type) > -1 ? 'wall-ad-two-style' : [10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1 ? 'wall-ad-three-style' : '' : ''}}"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="wall-ad-stack" if="isLoadComplete">
                <div class="wall-ad-wrap {{ adSetup.bNight ? 'night-wall-ad-wrap' : '' }}">
                    <block if="[10005, 10207].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item top-img-bottom-title">
                            <stack class="img-box">
                                <image class="img-brand img-brand-new" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                            <div class="title-box">
                                <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                                <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                            </div>
                        </div>
                    </block>
                    <block if="[10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item three-img">
                            <div class="imgs-box">
                                <stack class="img-box" if="currentAdInfo.images.length" for="['', '', '']">
                                    <image class="img-brand" if="$idx === 0" src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}" @complete="fnAdShow"></image>
                                    <image class="img-brand" else src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}"></image>
                                    <div class="ad-logo-box">
                                        <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                        <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </stack>
                            </div>
                        </div>
                        <div class="title-box right-title-box">
                            <text class="title">{{ currentAdInfo.description || currentAdInfo.title }}</text>
                            <text class="btn-box">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                    <block if="[10001, 10002, 10209].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item {{ [10001, 10209].indexOf(currentAdInfo.style_type) > -1 ? 'left-img-right-word' : 'left-word-right-img' }}">
                            <stack class="img-box left-img-box">
                                <image class="img-brand" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="title-box">
                            <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                            <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                </div>
                <ad-clickable-area type="click">
                    <text class="wall-ad-blank"></text>
                </ad-clickable-area>
            </stack>
        </ad>
        <ad
            if="{{chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'banner' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="banner-ad-wrap"
            style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }}; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : currentAdInfo.menu_click_behive && !adHasClick ? '188px' : '146px' }};"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad" 
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="banner-stack-wrap" if="isLoadComplete">
                <div class="banner-wrap" style="background-color: {{adSetup.bNight ? 'rgba(29,29,31,1)' : (adSetup.isMember ? (adSetup.memberBg == 'parchment' ? '#F3E3BE' : '#dfedd6') : adSetup.bgColor)}};">
                    <div class="banner-img-wrap">
                        <stack class="img-stack-end {{currentAdInfo.isIconStyle ? 'banner-stack' : ''}}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand-icon" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand {{ currentAdInfo.isVerticalStyle ? 'banner-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="banner-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>  
                            <div>
                                <image if="currentAdInfo.adlogo" class="banner-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                <image if="currentAdInfo.adtext" class="banner-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                    </div>
                    <div class="banner-desc-wrap">
                        <text if="currentAdInfo.title" class="banner-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="banner-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                    </div>
                    <text class="banner-btn {{adSetup.bNight ? 'banner-btn-night' : ''}}">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click" class="empty-click-area"></ad-clickable-area>
                <block if="(currentAdInfo.isFullScreenCover || currentAdInfo.click_behive) && !adHasClick">
                    <ad-clickable-area type="click">
                        <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                        <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                    </ad-clickable-area>
                </block>
                <block else>
                    <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'tip' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="{{ isLoadComplete ? 'tip-ad-wrap' : '' }}"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <div class="tip-wrap tip-wrap-extra" if="isLoadComplete">
                <stack class="tip-stack">
                    <div class="tip-box">
                        <stack class="tip-box-stack">
                            <block if="currentAdInfo.isIconStyle">
                                <div class="tip-image-wrap">
                                    <image class="tip-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image class="tip-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="tip-box-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="tip-info-box">
                                <stack class="tip-info-stack">
                                    <image class="tip-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                    <div class="tip-info-mask">
                                        <text if="currentAdInfo.title" class="tip-title">{{ currentAdInfo.title }}</text>
                                        <div class="tip-img-wrap"> 
                                            <image if="currentAdInfo.adlogo" class="tip-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                            <image if="currentAdInfo.adtext" class="tip-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </div>
                                </stack>
                            </div>
                        </stack>
                    </div>
                    <ad-clickable-area type="click">
                        <image class="tip-ad-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-ad-bg.png"></image>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click" style="align-self: flex-start;">
                            <div class="ad-message-close-wrap">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'reward' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="{{ isLoadComplete ? 'reward-wrap' : '' }}"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <div class="reward-box" if="isLoadComplete">
                <stack class="reward-box-stack reward-box-stack-extra">
                    <block if="currentAdInfo.isIconStyle">
                        <div class="reward-image-wrap">
                            <image class="reward-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        </div>
                    </block>
                    <block else>
                        <image class="reward-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <image class="reward-box-img" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                    </block>
                    <ad-clickable-area type="click">
                        <div class="reward-info-box">
                            <stack class="reward-info-stack">
                                <image class="reward-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                <div class="reward-info-mask">
                                    <text if="currentAdInfo.title" class="reward-title">{{ currentAdInfo.title }}</text>
                                    <div class="reward-img-wrap"> 
                                        <image if="currentAdInfo.adlogo" class="reward-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                        <image if="currentAdInfo.adtext" class="reward-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </div>
                            </stack>
                        </div>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click">
                            <div class="ad-message-close-wrap-extra">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap-extra">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{!isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="open-ad-wrap"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="open-container {{currentAdInfo.isBottomCloseBtn ? 'open-container-bottom' : '' }}" if="isLoadComplete">
                <div class="open-wrap">
                    <div class="open-box {{currentAdInfo.isVerticalStyle ? '' : 'open-box-brand' }}">
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-extra">
                                <text if="{{currentAdInfo.background_type == 1}}" class="open-extra-title">今日推荐</text>
                                <div if="{{currentAdInfo.background_type == 1}}" class="open-extra-rating">
                                    <image class="open-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                                </div>
                            </div>
                        </block>
                        <stack class="img-stack-end open-stack {{ currentAdInfo.isVerticalStyle ? '' : 'open-stack-brand' }}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="open-image-wrap">
                                    <image class="open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="open-img-brand {{ currentAdInfo.isVerticalStyle ? 'open-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="open-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="{{ currentAdInfo.isVerticalStyle ? 'open-ad-right' : '' }}">
                                <image if="currentAdInfo.adlogo" class="open-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="open-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-ad-box-bottom">
                                <text class="open-ad-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>                  
                                <div class="open-ad-box" >
                                    <image if="currentAdInfo.icon_url" class="open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                </div>
                                <ad-clickable-area type="click">
                                    <text class="open-ad-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                                </ad-clickable-area>
                            </div> 
                        </block>
                    </div>
                    <div class="click-open-brand-wrap" if="isOpenFloat">
                        <ad-clickable-area type="click">
                            <text class="click-open-text">点击前往第三方页面或应用</text>
                        </ad-clickable-area>
                    </div>
                    <div class="open-info" if="!currentAdInfo.isVerticalStyle">
                        <image class="open-info-img" src="{{isSystemOpenStyle ? 'https://xsmfdq.kkyd.cn/images/hmxs/quickapp.png' : '../Common/logo.png'}}"></image>
                        <div if="isSystemOpenStyle" class="system-open-info">
                            <text class="system-open-title">{{appName}}</text>
                            <text class="system-open-tip">此服务由快应用提供</text>
                        </div>
                        <text else class="open-info-text">{{appName}}</text>
                    </div>
                </div>
                <ad-clickable-area type="click" class="open-close-wrapper {{currentAdInfo.isBottomCloseBtn ? 'open-close-bottom' : 'open-close-top' }}" >
                    <div class="open-screen-close" if="currentAdInfo.click_behive && !adHasClick">
                        <text class="close-time-text">{{ countTime }}</text>
                        <text class="close-text"> 跳过</text>
                    </div>
                </ad-clickable-area>
                <ad-clickable-area style="width: 100%; height: {{ !isOpenFloat || isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? '100%' : '0px' }};" type="click"></ad-clickable-area>
            </stack>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'pop' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="pop-wrap"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="new-open-ad-stack" if="isLoadComplete">
                <div class="new-open-box">
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                        </div>
                    </block>
                    <block else>
                        <text class="pop-block"></text>
                    </block>
                    <text class="new-open-title">今日推荐</text>
                    <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                    <stack class="new-open-stack"> 
                        <block if="currentAdInfo.isIconStyle">
                            <div class="pop-image-wrap">
                                <image class="pop-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <div>
                            <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                    <text class="new-open-btn">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click"  class="pop-ad-blank">
                    <text class="pop-ad-blank"></text>
                </ad-clickable-area> 
                 <block if="!currentAdInfo.click_behive || adHasClick">
                    <div class="new-open-close">
                        <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnClosePopAd"></image>
                    </div>
                </block>
            </stack>
        </ad>
        <div class="back-container" if="adType === 'back' && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError && !isNoFilling">
            <ad
                class="back-ad-brand {{ isVerticalButton ? 'back-ad-brand-vertical' : '' }} {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area === 2) && !adHasClick ? 'back-ad-brand-extend' : '' }}"
                adunitid="{{ currentAdInfo.chn_slot_id }}"
                @load="fnOppoAdLoad"
                @error="fnOppoAdError"
                @adclick="fnNewBrandAdClick"
                @adshow="fnAdShow"
                type="native"
                >
                <stack class="back-ad-stack">
                    <stack class="back-wrap {{ isVerticalButton ? 'back-wrap-vertical' : '' }}">
                        <div class="back-video-box">
                            <ad-clickable-area show="currentAdInfo.isVideoStyle" type="video" class="oppo-video-show"></ad-clickable-area>
                        </div>
                        <div class="content-wrap">
                            <text class="back-title {{ adAlias === 'indexBack' ? 'back-title-index' : '' }}">{{ adAlias === 'readBack' ? '确定退出阅读?' : '确定退出应用?' }}</text>
                            <text class="back-tip" if="adAlias === 'readBack'">今日已阅读<span style="color: #f97053;">{{ readTimes }}</span>分钟</text>
                            <div class="back-box">
                                <div class="ad-content-box" if="isLoadComplete" @appear="fnAdShow">
                                    <stack class="back-image-box">
                                        <block if="!currentAdInfo.isVideoStyle">
                                            <block if="currentAdInfo.isIconStyle">
                                                <div class="back-image-wrap">
                                                    <image class="back-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="back-image {{ currentAdInfo.isVerticalStyle ? 'back-img-vertical' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="back-image" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                        </block>
                                        <div class="back-icon">
                                            <image if="currentAdInfo.adlogo" class="back-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                            <image if="currentAdInfo.adtext" class="back-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </stack>
                                    <text class="back-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                </div>
                            </div>
                            <div class="{{ isVerticalButton ? 'back-btn-wrap-vertical' : 'back-btn-wrap' }}" if="isLoadComplete">
                                <!-- 支持退出加桌 -->
                                <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit">{{ adShortcutConfig.outButtonTip }}</text>
                                    <!-- 未开启关闭误触时，空白占位符 -->
                                    <div else class="back-btn-exit" style="background-color: transparent;"></div>
                                    <text class="back-btn-action">{{ currentAdInfo.btnContent }}</text>
                                </block>
                                <!-- 不支持退出加桌 -->
                                <block else>
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                                    <div else class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" style="background-color: transparent;"></div>
                                    <text class="back-btn-action {{ currentAdInfo.isBtnSize ? 'back-btn-action-big' : '' }}">{{ currentAdInfo.btnContent }}</text>
                                </block>
                            </div>
                        </div>
                        <div class="close-wrap" if="currentAdInfo.click_behive && !adHasClick && isLoadComplete">
                            <image class="back-close" src="../Common/images/ad-close.png"></image>
                        </div>
                    </stack>
                    <ad-clickable-area style="width: 100%; height: {{ isLoadComplete ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                    <stack class="back-stack-outer">
                        <ad-clickable-area style="width: 100%; height: {{ isLoadComplete ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                        <block if="(!currentAdInfo.click_behive || adHasClick) && (isLoadComplete || !backLoading) || (currentAdInfo.click_behive && !backLoading && !isLoadComplete)">
                            <image class="back-close-outer" src="../Common/images/ad-close.png" @click="fnExtraClose"></image>
                        </block>
                        <div class="back-btn-wrap-outer {{ currentAdInfo.isBtnSize && !(!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)) ? 'back-btn-wrap-outer-small' : '' }}" if="!(currentAdInfo.exit_button_behive && !adHasClick) || !backLoading && !isLoadComplete">
                            <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                <div if="!backLoading || isLoadComplete" class="back-btn-container" @click="fnStopPropagation">
                                    <onekey-shortcut-new
                                        btnwidth="{{ isVerticalButton ? backButtonStyle.base.width : '260px' }}"
                                        btnheight="{{ isVerticalButton ? backButtonStyle.base.height : '90px' }}" 
                                        btnfontsize="{{ isVerticalButton ? backButtonStyle.top.fontSize : '32px' }}" 
                                        btnradius="{{ isVerticalButton ? '0px' :'45px'}}" 
                                        btncolor="{{ isVerticalButton ? backButtonStyle.top.color : '#817272' }}" 
                                        btnbgcolor="{{ isVerticalButton ? backButtonStyle.top.backgroundColor : '#E7E7E7' }}"
                                        buttexto="{{ adShortcutConfig.outButtonTip }}"
                                        buttextv="{{ adShortcutConfig.outButtonTip }}"
                                        cut-support="{{ cutSupport }}" 
                                        position="adExit"
                                        @oneshortcomplete="fnOneshortComplete">
                                    </onekey-shortcut-new>
                                </div>
                            </block>
                            <block else>
                                <text if="!backLoading || isLoadComplete" class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" @click="fnClickExit">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                            </block>
                        </div>
                    </stack>
                    <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                </stack>
            </ad>
        </div>
        <ad
            if="{{isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && brandAdVersion === 2 && canLoadNewOppoAd && !isNewBrandAdError }}"
            class="new-open-wrap {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? 'new-open-wrap-cover' : '' }}"
            adunitid="{{ currentAdInfo.chn_slot_id }}"
            @load="fnOppoAdLoad"
            @error="fnOppoAdError"
            @adclick="fnNewBrandAdClick"
            @adshow="fnAdShow"
            type="native"
            >
            <stack class="new-open-container-wrap" if="isLoadComplete">
                <stack class="new-open-container">
                    <div class="new-open-box">
                        <block if="!currentAdInfo.isVerticalStyle">
                            <text class="new-open-title" >今日推荐</text>
                            <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                        </block>
                        <stack class="{{currentAdInfo.isVerticalStyle ? 'new-vertical-stack' : 'new-open-stack'}}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="new-open-icon-wrap">
                                    <image class="new-open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img " src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <block if="currentAdInfo.isVerticalStyle">
                                <div class="new-open-vertical-wrap">
                                    <div class="new-open-vertical-box">
                                        <image if="currentAdInfo.icon_url" class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name ">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                    </div>
                                    <text class="new-open-vertical-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }} </text>
                                    <text class="new-open-vertical-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                                </div>
                            </block>
                            <div>
                                <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                        <block if="!currentAdInfo.isVerticalStyle">
                            <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                            <div class="new-open-ad-box">
                                <image if="currentAdInfo.icon_url"  class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                            </div>
                            <text class="new-open-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                        </block>
                    </div>
                    <ad-clickable-area type="click">
                        <text class="new-open-block"></text>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click">
                            <div class="new-open-close">
                                <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnCloseOpenAd"></image>
                        </div>
                    </block>
                </stack>
                <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? '100%' : '0px' }};" type="click"></ad-clickable-area>
            </stack>
        </ad>
        <!-- OPPO2.0预加载 -->
        <ad
            if="{{chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'message' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="message-ad-wrap {{ adAlias === 'readTop' ? 'message-ad-wrap-top' : adAlias === 'readMiddle' ? 'message-ad-wrap-middle' : '' }}"
            adId="{{ currentAdInfo.adId }}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack class="message-ad-stack">
                <div class="message-wrap">
                    <div if="adAlias == 'readTop'" class="message-top">
                        <div class="message-top-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-top-image-wrap">
                                        <image class="message-top-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-top-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-top-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-top-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-top-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="message-top-info">
                            <text if="currentAdInfo.title" class="message-top-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                            <text if="currentAdInfo.description" class="message-top-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                            <text class="message-top-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                    <div if="adAlias == 'readMiddle'" class="message-middle">
                        <div class="message-middle-img-wrap">
                            <stack class="img-stack-end">
                                <block if="currentAdInfo.isIconStyle">
                                    <div class="message-middle-image-wrap">
                                        <image class="message-middle-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    </div>
                                </block>
                                <block else>
                                    <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="message-middle-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                    <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="message-middle-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                </block>
                                <block if="currentAdInfo.click_behive && !adHasClick">
                                    <image class="ad-message-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                                    <image class="no-ad-close" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                                </block>
                                <div>
                                    <image if="currentAdInfo.adlogo" class="message-middle-img-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                    <image if="currentAdInfo.adtext" class="message-middle-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <text if="currentAdInfo.title" class="message-middle-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="message-middle-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                        <div class="message-middle-info-wrap">
                            <div class="message-middle-info">
                                <image if="currentAdInfo.icon_url" class="message-middle-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                <text if="currentAdInfo.brand_name" class="message-middle-name {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.brand_name }}</text> 
                            </div>
                            <text class="message-middle-btn">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </div>
                </div>
                <ad-clickable-area type="click">
                    <text class="message-ad-blank"></text>
                </ad-clickable-area>
                <block if="!currentAdInfo.click_behive || adHasClick">
                    <image class="{{adAlias == 'readTop' ? 'message-close-top-outer' :  'message-close-middle-outer'}}" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="{{adAlias == 'readTop' ? 'message-na-close-top-outer' :  'message-na-close-middle-outer'}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <div class="pre-ad-box" if="adType === 'pre' && isBrandAd && brandAdVersion === 2 && serviceAdBrand !== 'vivo' && !isNoFilling && oppoBrandAdPreload">
            <block if="!currentAdInfo.isFullScreenCover && !currentAdInfo.invisible_click_behive">
                <swiper class="pre-ad-tab" loop="{{false}}" indicator="{{false}}">
                    <div class="pre-container">
                        <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-block"></text>
                        <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                        <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) }}" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                        <div if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                        <ad
                            if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                            class="pre-ad-brand {{!(currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                            adId="{{ currentAdInfo.adId }}"
                            @error="fnNewBrandAdError"
                            @adshow="fnAdShow"
                            @adclick="fnNewBrandAdClick"
                            type="native"
                            >
                            <stack class="pre-ad-stack" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                                <div class="pre-ad-wrap">
                                    <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                    <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                    <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                    <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}" >
                                        <stack class="pre-image-box">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="pre-image-wrap">
                                                    <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="pre-image {{ currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>      
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                            </block>
                                            <div class="pre-ad-tip">
                                                <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                                <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                        </stack>
                                        <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                        <div class="pre-box" if="adHeight && adHeight > 1250">
                                            <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                        </div>
                                        <div class="pre-btn-center">
                                            <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </div>
                                    </div>
                                </div>
                                <ad-clickable-area type="click" class="pre-ad-blank" >
                                    <text class="pre-ad-blank"></text>
                                </ad-clickable-area>
                                <block if="adHasClick || !currentAdInfo.click_behive">
                                    <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}"  if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    <image class="pre-na-close-outer  {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                </block>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>     
            <block else>
                <div class="pre-container">
                    <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-block"></text>
                    <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ) }}" class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                    <text if="{{!(isExtraShow && currentAdInfo && isLoadComplete && currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick) }}" class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                    <div if="!(isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError)" class="pre-box-container {{adHeight && adHeight > 1250 ? 'pre-box-container-pro' : ''}}"></div>
                    <ad
                        if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                        class="pre-ad-brand {{!((isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick) ? (adHeight && adHeight > 1250 ? 'pre-ad-brand-limit-pro' : 'pre-ad-brand-limit') : ''}}"
                        style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }};"
                        adId="{{ currentAdInfo.adId }}"
                        @error="fnNewBrandAdError"
                        @adshow="fnAdShow"
                        @adclick="fnNewBrandAdClick"
                        type="native"
                        >
                        <stack class="pre-ad-stack" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                            <div class="pre-ad-stack" style="flex-direction: column;">
                                <stack class="pre-ad-stack" style="flex: 1;">
                                    <div class="pre-ad-wrap" style="margin-left: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '20px' : '0px' }};">
                                        <text class="pre-block" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick"></text>
                                        <text class="pre-tip-title {{adHeight && adHeight > 1350 ? 'pre-tip-title-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : '#222222'}}">内容免费公告</text>
                                        <text class="pre-tip-desc {{adHeight && adHeight > 1350 ? 'pre-tip-desc-pro' : ''}}" if="currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick" style="color: {{adSetup.bNight ? 'rgba(255, 255, 255, 0.5)' : 'rgba(34, 34, 34, 0.5)'}}">亲爱的读者，您正在阅读正版免费内容，阅读中出现的广告内容，是为了激励作者，给您提供更多优质的免费内容，感谢您的理解！</text>
                                        <div class="pre-wrap {{adHeight && adHeight > 1250 ? 'pre-wrap-pro' : ''}} {{adSetup.bNight ? 'pre-wrap-night' : ''}}" >
                                            <stack class="pre-image-box">
                                                <block if="currentAdInfo.isVideoStyle">
                                                    <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                                </block>
                                                <block elif="currentAdInfo.isIconStyle">
                                                    <div class="pre-image-wrap">
                                                        <image class="pre-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    </div>
                                                </block>
                                                <block else>
                                                    <image class="pre-image {{ currentAdInfo.isVerticalStyle ? 'pre-vertical-image' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    <image class="pre-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                                </block> 
                                                <block if="currentAdInfo.click_behive && !adHasClick">
                                                    <image class="pre-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                    <image class="no-ad-close-normal no-ad-close-end" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>
                                                </block>
                                                <div class="pre-ad-tip">
                                                    <image if="currentAdInfo.adlogo" class="pre-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                                    <image if="currentAdInfo.adtext" class="pre-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                                </div>
                                            </stack>
                                            <text class="pre-desc {{adSetup.bNight ? 'pre-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                            <div class="pre-box" if="adHeight && adHeight > 1250">
                                                <image if="currentAdInfo.icon_url" class="pre-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="pre-name {{ !currentAdInfo.icon_url ? 'pre-name-pro' : ''}} {{adSetup.bNight ? 'pre-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                            </div>
                                            <div class="pre-btn-center">
                                                <text class="pre-btn {{adSetup.bNight ? 'pre-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                            </div>
                                        </div>
                                    </div>
                                    <ad-clickable-area type="click" class="pre-ad-blank" >
                                        <text class="pre-ad-blank"></text>
                                    </ad-clickable-area>
                                    <block if="adHasClick || !currentAdInfo.click_behive">
                                        <image class="pre-close-outer {{adHeight > 1250 ? 'pre-close-pro' : ''}}"  if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        <image class="pre-na-close-outer  {{adHeight > 1250 ? 'pre-na-close-pro' : ''}}" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    </block>
                                </stack>
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '328px' : '0px' }};"></div>
                            </div>
                            <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                        </stack>
                    </ad>
                </div> 
            </block>
        </div>
        <block if="adType === 'insert' && chnType !== 'SDK_BAIDU' && isBrandAd && brandAdVersion === 2 && serviceAdBrand !== 'vivo' && oppoBrandAdPreload">
            <block if="!currentAdInfo.isFullScreenCover && !currentAdInfo.invisible_click_behive">
                <swiper class="insert-ad-tab" loop="{{false}}" indicator="{{false}}">
                    <div class="insert-container">
                        <ad
                            if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                            style="width: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ currentAdInfo.action_area && +currentAdInfo.action_area === 2 && !adHasClick ? '100%' : insertHeight + 'px'}};"
                            adId="{{ currentAdInfo.adId }}"
                            @error="fnNewBrandAdError"
                            @adshow="fnAdShow"
                            @adclick="fnNewBrandAdClick"
                            type="native"
                            >
                            <stack class="insert-container" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                                <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                        <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                        <div class="insert-extra-rating">
                                            <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                                        </div>
                                    </div>
                                    <div class="insert-ad-box {{ currentAdInfo.isVerticalStyle ? 'insert-vertical-box' : '' }}">
                                        <stack class="insert-box-stack {{currentAdInfo.isVerticalStyle ? 'insert-vertical-stack' : '' }}">
                                            <block if="currentAdInfo.isVideoStyle">
                                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                            </block>
                                            <block elif="currentAdInfo.isIconStyle">
                                                <div class="insert-image-wrap" >
                                                    <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                </div>
                                            </block>
                                            <block else>
                                                <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                            </block>
                                            <block if="currentAdInfo.isVerticalStyle">
                                                <div class="insert-vertical-wrap">
                                                    <div class="insert-box">
                                                        <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                    </div>
                                                    <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                    <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                                </div>
                                            </block>
                                            <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                                <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                                <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                            </div>
                                            <block if="currentAdInfo.click_behive && !adHasClick">
                                                <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                            </block>
                                        </stack>
                                        <block if="!currentAdInfo.isVerticalStyle">
                                            <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                            <div class="insert-box">
                                                <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                            </div>
                                            <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                        </block>
                                    </div>
                                    <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                                </div>
                                <ad-clickable-area type="click" class="insert-ad-blank">
                                    <text class="insert-ad-blank"></text>
                                </ad-clickable-area>
                                <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : ''}} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                    <ad-clickable-area type="click" class="insert-ad-blank">
                                        <text class="insert-ad-blank"></text>
                                    </ad-clickable-area>
                                    <block if="!currentAdInfo.click_behive || adHasClick">
                                        <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                    </block>
                                </stack>
                            </stack>
                        </ad>
                    </div>
                </swiper>
            </block>
            <block else>
                <div class="insert-container">
                    <ad
                        if="{{isExtraShow && currentAdInfo && isLoadComplete && !isNewBrandAdError}}"
                        style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }}; width: {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick ? '100%' : insertWidth + 'px'}}; height: {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area && +currentAdInfo.action_area === 2) && !adHasClick ? '100%' : insertHeight + 'px'}};"
                        adId="{{ currentAdInfo.adId }}"
                        @error="fnNewBrandAdError"
                        @adshow="fnAdShow"
                        @adclick="fnNewBrandAdClick"
                        type="native"
                        >
                        <stack class="insert-container" @click="fnNewOppoAdClick" @touchend="fnTouchOppoAd">
                            <div class="insert-container">
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '150px' : '0px' }};"></div>
                                <stack class="insert-container">
                                    <div class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : '' }}" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                        <div class="insert-extra" if="adHeight && adHeight > 1230 && currentAdInfo.background_type === 1 && !currentAdInfo.isVerticalStyle">
                                            <text class="insert-extra-title {{adSetup.bNight ? 'insert-extra-title-night' : ''}}">今日推荐</text>
                                            <div class="insert-extra-rating">
                                                <image class="insert-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                                            </div>
                                        </div>
                                        <div class="insert-ad-box {{ currentAdInfo.isVerticalStyle ? 'insert-vertical-box' : '' }}">
                                            <stack class="insert-box-stack {{currentAdInfo.isVerticalStyle ? 'insert-vertical-stack' : '' }}">
                                                <block if="currentAdInfo.isVideoStyle">
                                                    <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                                </block>
                                                <block elif="currentAdInfo.isIconStyle">
                                                    <div class="insert-image-wrap" >
                                                        <image class="insert-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    </div>
                                                </block>
                                                <block else>
                                                    <image class="insert-image" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                                    <image class="insert-image" if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                                </block>
                                                <block if="currentAdInfo.isVerticalStyle">
                                                    <div class="insert-vertical-wrap">
                                                        <div class="insert-box">
                                                            <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                            <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                        </div>
                                                        <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                        <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                                    </div>
                                                </block>
                                                <div class="insert-ad-tip" style="margin-top: {{ currentAdInfo.isVerticalStyle ? insertHeight - 28 : '376'}}px;">
                                                    <image if="currentAdInfo.adlogo" class="insert-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                                    <image if="currentAdInfo.adtext" class="insert-ad-logo insert-ad-logo-last" src="{{ currentAdInfo.adtext }}"></image>
                                                </div>
                                                <block if="currentAdInfo.click_behive && !adHasClick">
                                                    <image class="insert-close" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation"></image>
                                                    <image class="no-ad-close-normal" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation"></image>    
                                                </block>
                                            </stack>
                                            <block if="!currentAdInfo.isVerticalStyle">
                                                <text class="insert-desc {{adSetup.bNight ? 'insert-desc-night' : ''}}">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                                <div class="insert-box">
                                                    <image if="currentAdInfo.icon_url" class="insert-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="insert-name {{!currentAdInfo.icon_url ? 'insert-name-pro' : ''}} {{adSetup.bNight ? 'insert-name-night' : ''}}">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                                </div>
                                                <text class="insert-btn {{adSetup.bNight ? 'insert-btn-night' : ''}} {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{currentAdInfo.btnContent }}</text>
                                            </block>
                                        </div>
                                        <image if="(adHeight && adHeight > 1230 && currentAdInfo.background_type !== 1 || adHeight && adHeight > 1350) && currentAdInfo.isInsertInduceClick && !currentAdInfo.isVerticalStyle" class="insert-induce-click" src="{{'https://xsmfdq.kkyd.cn/images/hmxs/insert-missclick-' + currentAdInfo.insertInduceClickIndex + '.gif'}}"></image>
                                    </div>
                                    <ad-clickable-area type="click" class="insert-ad-blank">
                                        <text class="insert-ad-blank"></text>
                                    </ad-clickable-area>
                                    <stack class="insert-wrap {{ currentAdInfo.isVerticalStyle ? 'insert-wrap-vertical' : '' }} insert-wrap-end" style="width: {{ insertWidth + 'px'}}; height: {{ insertHeight + 'px'}};">
                                        <ad-clickable-area type="click" class="insert-ad-blank">
                                            <text class="insert-ad-blank"></text>
                                        </ad-clickable-area>
                                        <block if="!currentAdInfo.click_behive || adHasClick">
                                            <image class="insert-close" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                            <image class="no-ad-close-normal" style="margin-top: {{ insertCloseTop }}px;" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @touchend="fnStopPropagation" @click="fnExtraClose"></image>
                                        </block>
                                    </stack>
                                </stack>
                                <div style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '328px' : '0px' }};"></div>
                            </div>
                            <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click">
                                <text class="insert-ad-blank"></text>
                            </ad-clickable-area>
                        </stack>
                    </ad>
                </div>
            </block>
        </block>
        <ad
            if="{{isExtraShow && adType === 'wall' && adAlias !== 'adWallCache' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="wall-ad {{[10005, 10207].indexOf(currentAdInfo.style_type) > -1 ? 'wall-ad-one-style' : [10001, 10002, 10209].indexOf(currentAdInfo.style_type) > -1 ? 'wall-ad-two-style' : [10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1 ? 'wall-ad-three-style' : ''}}"
            adId="{{ currentAdInfo.adId }}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack class="wall-ad-stack">
                <div class="wall-ad-wrap {{ adSetup.bNight ? 'night-wall-ad-wrap' : '' }}">
                    <block if="[10005, 10207].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item top-img-bottom-title">
                            <stack class="img-box">
                                <image class="img-brand img-brand-new" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                            <div class="title-box">
                                <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                                <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                            </div>
                        </div>
                    </block>
                    <block if="[10003, 10004, 10240].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item three-img">
                            <div class="imgs-box">
                                <stack class="img-box" if="currentAdInfo.images.length" for="['', '', '']">
                                    <image class="img-brand" if="$idx === 0" src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}" @complete="fnAdShow"></image>
                                    <image class="img-brand" else src="{{ (currentAdInfo.images[$idx] || currentAdInfo.images[0]).url }}"></image>
                                    <div class="ad-logo-box">
                                        <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                        <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </stack>
                            </div>
                        </div>
                        <div class="title-box right-title-box">
                            <text class="title">{{ currentAdInfo.description || currentAdInfo.title }}</text>
                            <text class="btn-box">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                    <block if="[10001, 10002, 10209].indexOf(currentAdInfo.style_type) > -1">
                        <div class="ad-item {{ [10001, 10209].indexOf(currentAdInfo.style_type) > -1 ? 'left-img-right-word' : 'left-word-right-img' }}">
                            <stack class="img-box left-img-box">
                                <image class="img-brand" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <div class="ad-logo-box">
                                    <image class="ad-logo" if="currentAdInfo.adlogo" src="{{ currentAdInfo.adlogo }}"></image>
                                    <image class="ad-text" if="currentAdInfo.adtext" src="{{ currentAdInfo.adtext }}"></image>
                                </div>
                            </stack>
                        </div>
                        <div class="title-box">
                            <text class="title" style="flex: 1;">{{ currentAdInfo.title }}</text>
                            <text class="btn-box" style="flex-shrink: 0;">{{ currentAdInfo.btnContent }}</text>
                        </div>
                    </block>
                </div>
                <ad-clickable-area type="click">
                    <text class="wall-ad-blank"></text>
                </ad-clickable-area>
            </stack>
        </ad>
        <ad
            if="{{chnType !== 'SDK_BAIDU' && isExtraShow && adType === 'banner' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="banner-ad-wrap"
            style="position: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? 'fixed' : 'relative' }}; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : currentAdInfo.menu_click_behive && !adHasClick ? '188px' : '146px' }};"
            adId="{{ currentAdInfo.adId }}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack style="flex-direction: column; justify-content: flex-end; width: 100%; height: 100%;">
                <div class="banner-wrap" style="background-color: {{adSetup.bNight ? 'rgba(29,29,31,1)' : (adSetup.isMember ? (adSetup.memberBg == 'parchment' ? '#F3E3BE' : '#dfedd6') : adSetup.bgColor)}};">
                    <div class="banner-img-wrap">
                        <stack class="img-stack-end {{currentAdInfo.isIconStyle ? 'banner-stack' : ''}}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand-icon" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="banner-img-brand {{ currentAdInfo.isVerticalStyle ? 'banner-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="banner-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div>
                                <image if="currentAdInfo.adlogo" class="banner-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                <image if="currentAdInfo.adtext" class="banner-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                    </div>
                    <div class="banner-desc-wrap">
                        <text if="currentAdInfo.title" class="banner-title {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.title }}</text>
                        <text if="currentAdInfo.description" class="banner-desc {{ adSetup.bNight ? 'color-night' : '' }}">{{ currentAdInfo.description }}</text>
                    </div>
                    <text class="banner-btn {{adSetup.bNight ? 'banner-btn-night' : ''}}">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click" class="empty-click-area"></ad-clickable-area>
                <block if="(currentAdInfo.isFullScreenCover || currentAdInfo.click_behive) && !adHasClick">
                    <ad-clickable-area type="click">
                        <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                        <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                    </ad-clickable-area>
                </block>
                <block else>
                    <image class="ad-message-close-banner" if="isExtraClose && !noAdVipSwitch" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                    <image class="no-ad-close-banner" if="isExtraClose && noAdVipSwitch" src="../Common/images/no-ad-icon.png" @click="fnExtraClose"></image>
                </block>
            </stack>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'tip' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="tip-ad-wrap"
            adId="{{currentAdInfo.adId}}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <div class="tip-wrap tip-wrap-extra">
                <stack class="tip-stack">
                    <div class="tip-box">
                        <stack class="tip-box-stack">
                            <block if="currentAdInfo.isIconStyle">
                                <div class="tip-image-wrap">
                                    <image class="tip-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image class="tip-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="tip-box-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="tip-info-box">
                                <stack class="tip-info-stack">
                                    <image class="tip-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                    <div class="tip-info-mask">
                                        <text if="currentAdInfo.title" class="tip-title">{{ currentAdInfo.title }}</text>
                                        <div class="tip-img-wrap"> 
                                            <image if="currentAdInfo.adlogo" class="tip-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                            <image if="currentAdInfo.adtext" class="tip-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </div>
                                </stack>
                            </div>
                        </stack>
                    </div>
                    <ad-clickable-area type="click">
                        <image class="tip-ad-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-ad-bg.png"></image>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click" style="align-self: flex-start;">
                            <div class="ad-message-close-wrap">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'reward' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="reward-wrap"
            adId="{{currentAdInfo.adId}}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <div class="reward-box">
                <stack class="reward-box-stack reward-box-stack-extra">
                    <block if="currentAdInfo.isIconStyle">
                        <div class="reward-image-wrap">
                            <image class="reward-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        </div>
                    </block>
                    <block else>
                        <image class="reward-box-img" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                        <image class="reward-box-img" if="currentAdInfo.ext && currentAdInfo.ext.opt_img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                    </block>
                    <ad-clickable-area type="click">
                        <div class="reward-info-box">
                            <stack class="reward-info-stack">
                                <image class="reward-info-mask-bg" src="https://xsmfdq.kkyd.cn/images/task-tip-bg.png"></image>
                                <div class="reward-info-mask">
                                    <text if="currentAdInfo.title" class="reward-title">{{ currentAdInfo.title }}</text>
                                    <div class="reward-img-wrap"> 
                                        <image if="currentAdInfo.adlogo" class="reward-img-logo" src="{{ currentAdInfo.adlogo }}"></image>              
                                        <image if="currentAdInfo.adtext" class="reward-img-ad" src="{{ currentAdInfo.adtext }}"></image>
                                    </div>
                                </div>
                            </stack>
                        </div>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click">
                            <div class="ad-message-close-wrap-extra">
                                <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="ad-message-close-wrap-extra">
                            <image class="ad-message-close" if="isExtraClose" src="https://xsmfdq.kkyd.cn/images/ad-message-close.png" @click="fnExtraClose"></image>
                        </div>
                    </block>
                </stack>
            </div>
        </ad>
        <ad
            if="{{!isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && !isInsertEyeAd && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="open-ad-wrap"
            adId="{{currentAdInfo.adId}}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack class="open-container {{currentAdInfo.isBottomCloseBtn ? 'open-container-bottom' : '' }}">
                <div class="open-wrap">
                    <div class="open-box {{currentAdInfo.isVerticalStyle ? '' : 'open-box-brand' }}">
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-extra">
                                <text if="{{currentAdInfo.background_type == 1}}" class="open-extra-title">今日推荐</text>
                                <div if="{{currentAdInfo.background_type == 1}}" class="open-extra-rating">
                                    <image class="open-extra-rating-img" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                                </div>
                            </div>
                        </block>
                        <stack class="img-stack-end open-stack {{ currentAdInfo.isVerticalStyle ? '' : 'open-stack-brand' }}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="open-image-wrap">
                                    <image class="open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="open-img-brand {{ currentAdInfo.isVerticalStyle ? 'open-img-vertical' : '' }}" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="open-img-brand" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <div class="{{ currentAdInfo.isVerticalStyle ? 'open-ad-right' : '' }}">
                                <image if="currentAdInfo.adlogo" class="open-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="open-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                        <block if="!currentAdInfo.isVerticalStyle">
                            <div class="open-ad-box-bottom">
                                <text class="open-ad-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>                  
                                <div class="open-ad-box" >
                                    <image if="currentAdInfo.icon_url" class="open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                    <text if="currentAdInfo.brand_name || currentAdInfo.title" class="open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                </div>
                                <ad-clickable-area type="click">
                                    <text class="open-ad-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                                </ad-clickable-area>
                            </div> 
                        </block>
                    </div>
                    <div class="click-open-brand-wrap" if="isOpenFloat">
                        <ad-clickable-area type="click">
                            <text class="click-open-text">点击前往第三方页面或应用</text>
                        </ad-clickable-area>
                    </div>
                    <div class="open-info" if="!currentAdInfo.isVerticalStyle">
                        <image class="open-info-img" src="{{isSystemOpenStyle ? 'https://xsmfdq.kkyd.cn/images/hmxs/quickapp.png' : '../Common/logo.png'}}"></image>
                        <div if="isSystemOpenStyle" class="system-open-info">
                            <text class="system-open-title">{{appName}}</text>
                            <text class="system-open-tip">此服务由快应用提供</text>
                        </div>
                        <text else class="open-info-text">{{appName}}</text>
                    </div>
                </div>
                <ad-clickable-area type="click" class="open-close-wrapper {{currentAdInfo.isBottomCloseBtn ? 'open-close-bottom' : 'open-close-top' }}" >
                    <div class="open-screen-close" if="currentAdInfo.click_behive && !adHasClick">
                        <text class="close-time-text">{{ countTime }}</text>
                        <text class="close-text"> 跳过</text>
                    </div>
                </ad-clickable-area>
                <ad-clickable-area style="width: 100%; height: {{ !isOpenFloat || isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? '100%' : '0px' }};" type="click"></ad-clickable-area>
            </stack>
        </ad>
        <ad
            if="{{isExtraShow && adType === 'pop' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="pop-wrap"
            adId="{{currentAdInfo.adId}}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack class="new-open-ad-stack">
                <div class="new-open-box">
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                        </div>
                    </block>
                    <block else>
                        <text class="pop-block"></text>
                    </block>
                    <text class="new-open-title">今日推荐</text>
                    <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/dzmfxs/star.png"></image>
                    <stack class="new-open-stack"> 
                        <block if="currentAdInfo.isIconStyle">
                            <div class="pop-image-wrap">
                                <image class="pop-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            </div>
                        </block>
                        <block else>
                            <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                        </block>
                        <div>
                            <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                            <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                        </div>
                    </stack>
                    <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                    <text class="new-open-btn">{{ currentAdInfo.btnContent }}</text>
                </div>
                <ad-clickable-area type="click" class="pop-ad-blank">
                    <text class="pop-ad-blank"></text>
                </ad-clickable-area> 
                 <block if="!currentAdInfo.click_behive || adHasClick">
                    <div class="new-open-close">
                        <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnClosePopAd"></image>
                    </div>
                </block>
            </stack>
        </ad>
        <div class="back-container" if="adType === 'back' && isBrandAd && brandAdVersion === 2 && serviceAdBrand !== 'vivo' && isLoadComplete && !isNoFilling && oppoBrandAdPreload">
            <ad
                class="back-ad-brand {{ isVerticalButton ? 'back-ad-brand-vertical' : '' }} {{ (isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position || currentAdInfo.action_area === 2) && !adHasClick ? 'back-ad-brand-extend' : '' }}"
                adId="{{currentAdInfo.adId}}"
                @error="fnNewBrandAdError"
                @adshow="fnAdShow"
                @adclick="fnNewBrandAdClick"
                type="native"
                >
                <stack class="back-ad-stack">
                    <stack class="back-wrap {{ isVerticalButton ? 'back-wrap-vertical' : '' }}">
                        <div class="content-wrap">
                            <text class="back-title {{ adAlias === 'indexBack' ? 'back-title-index' : '' }}">{{ adAlias === 'readBack' ? '确定退出阅读?' : '确定退出应用?' }}</text>
                            <text class="back-tip" if="adAlias === 'readBack'">今日已阅读<span style="color: #f97053;">{{ readTimes }}</span>分钟</text>
                            <div class="back-box">
                                <div class="ad-content-box">
                                    <stack class="back-image-box">
                                        <block if="currentAdInfo.isVideoStyle">
                                            <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                                        </block>
                                        <block elif="currentAdInfo.isIconStyle">
                                            <div class="back-image-wrap">
                                                <image class="back-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            </div>
                                        </block>
                                        <block else>
                                            <image class="back-image {{ currentAdInfo.isVerticalStyle ? 'back-img-vertical' : '' }}" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                            <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img && !currentAdInfo.isVerticalStyle" class="back-image" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                                        </block>
                                        <div class="back-icon">
                                            <image if="currentAdInfo.adlogo" class="back-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>
                                            <image if="currentAdInfo.adtext" class="back-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                                        </div>
                                    </stack>
                                    <text class="back-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }}</text>
                                </div>
                            </div>
                            <div class="{{ isVerticalButton ? 'back-btn-wrap-vertical' : 'back-btn-wrap' }}">
                                <!-- 支持退出加桌 -->
                                <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit">{{ adShortcutConfig.outButtonTip }}</text>
                                    <!-- 未开启关闭误触时，空白占位符 -->
                                    <div else class="back-btn-exit" style="background-color: transparent;"></div>
                                    <text class="back-btn-action">{{ currentAdInfo.btnContent }}</text>
                                </block>
                                <!-- 不支持退出加桌 -->
                                <block else>
                                    <text if="currentAdInfo.exit_button_behive && !adHasClick" class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                                    <div else class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" style="background-color: transparent;"></div>
                                    <text class="back-btn-action {{ currentAdInfo.isBtnSize ? 'back-btn-action-big' : '' }}">{{ currentAdInfo.btnContent }}</text>
                                </block>
                            </div>
                        </div>
                        <div class="close-wrap" if="currentAdInfo.click_behive && !adHasClick">
                            <image class="back-close" src="../Common/images/ad-close.png"></image>
                        </div>
                    </stack>
                    <ad-clickable-area type="click" class="back-ad-blank">
                        <text class="back-ad-blank"></text>
                    </ad-clickable-area>
                    <stack class="back-stack-outer">
                        <ad-clickable-area type="click" class="back-stack-outer-blank">
                            <text class="back-ad-blank"></text>
                        </ad-clickable-area>
                        <block if="!currentAdInfo.click_behive || adHasClick">
                            <image class="back-close-outer" src="../Common/images/ad-close.png" @click="fnExtraClose"></image>
                        </block>
                        <div class="back-btn-wrap-outer {{ currentAdInfo.isBtnSize && !(!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)) ? 'back-btn-wrap-outer-small' : '' }}" if="!(currentAdInfo.exit_button_behive && !adHasClick)">
                            <block if="!hasShortcut && !isShortcut && adAlias === 'indexBack' && adShortcutConfig && adShortcutConfig.ready && cutSupport && (cutSupport.vivoSupport || cutSupport.oppoSupport || cutSupport.huaweiSupport)">
                                <div class="back-btn-container" @click="fnStopPropagation">
                                    <onekey-shortcut-new
                                        btnwidth="{{ isVerticalButton ? backButtonStyle.base.width : '260px' }}"
                                        btnheight="{{ isVerticalButton ? backButtonStyle.base.height : '90px' }}" 
                                        btnfontsize="{{ isVerticalButton ? backButtonStyle.top.fontSize : '32px' }}" 
                                        btnradius="{{ isVerticalButton ? '0px' :'45px'}}" 
                                        btncolor="{{ isVerticalButton ? backButtonStyle.top.color : '#817272' }}" 
                                        btnbgcolor="{{ isVerticalButton ? backButtonStyle.top.backgroundColor : '#E7E7E7' }}"
                                        buttexto="{{ adShortcutConfig.outButtonTip }}"
                                        buttextv="{{ adShortcutConfig.outButtonTip }}"
                                        cut-support="{{ cutSupport }}" 
                                        position="adExit"
                                        @oneshortcomplete="fnOneshortComplete">
                                    </onekey-shortcut-new>
                                </div>
                            </block>
                            <block else>
                                <text class="back-btn-exit {{ currentAdInfo.isBtnSize ? 'back-btn-exit-small' : '' }}" @click="fnClickExit">{{ isVerticalButton ? '立即退出' : '退出' }}</text>
                            </block>
                        </div>
                    </stack>
                    <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position && !adHasClick ? '100%' : '0px' }};" type="click"></ad-clickable-area>
                </stack>
            </ad>
        </div>
        <ad
            if="{{isNewOpenStyle && chnType !== 'SDK_BAIDU' && adType === 'open' && currentAdInfo && isBrandAd && isLoadComplete && brandAdVersion === 2 && !isNewBrandAdError && !isInsertEyeAd && serviceAdBrand !== 'vivo' && oppoBrandAdPreload}}"
            class="new-open-wrap {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? 'new-open-wrap-cover' : '' }}"
            adId="{{currentAdInfo.adId}}"
            @error="fnNewBrandAdError"
            @adshow="fnAdShow"
            @adclick="fnNewBrandAdClick"
            type="native"
            >
            <stack class="new-open-container-wrap">
                <stack class="new-open-container">
                    <div class="new-open-box">
                        <block if="!currentAdInfo.isVerticalStyle">
                            <text class="new-open-title">今日推荐</text>
                            <image class="new-open-rating" src="https://xsmfdq.kkyd.cn/images/hmxs/star.png"></image>
                        </block>
                        <stack class="{{currentAdInfo.isVerticalStyle ? 'new-vertical-stack' : 'new-open-stack'}}">
                            <block if="currentAdInfo.isVideoStyle">
                                <ad-clickable-area type="video" class="oppo-video-show"></ad-clickable-area>
                            </block>
                            <block elif="currentAdInfo.isIconStyle">
                                <div class="new-open-icon-wrap">
                                    <image class="new-open-image-icon" if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                </div>
                            </block>
                            <block else>
                                <image if="currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url" class="new-open-img " src="{{ currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url }}" @complete="fnAdShow"></image>
                                <image if="currentAdInfo.ext && currentAdInfo.ext.opt_img" class="new-open-img" src="{{ currentAdInfo.ext && currentAdInfo.ext.opt_img }}"></image>
                            </block>
                            <block if="currentAdInfo.isVerticalStyle">
                                <div class="new-open-vertical-wrap">
                                    <div class="new-open-vertical-box">
                                        <image if="currentAdInfo.icon_url" class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                        <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name ">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                                    </div>
                                    <text class="new-open-vertical-desc">{{ currentAdInfo.description ? currentAdInfo.description : currentAdInfo.title }} </text>
                                    <text class="new-open-vertical-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                                </div>
                            </block>
                            <div>
                                <image if="currentAdInfo.adlogo" class="new-open-img-ad-logo" src="{{ currentAdInfo.adlogo }}"></image>  
                                <image if="currentAdInfo.adtext" class="new-open-img-ad-text" src="{{ currentAdInfo.adtext }}"></image>
                            </div>
                        </stack>
                        <block if="!currentAdInfo.isVerticalStyle">
                            <text class="new-open-desc" if="currentAdInfo.title || currentAdInfo.description">{{ currentAdInfo.title || currentAdInfo.description }}</text>
                            <div class="new-open-ad-box">
                                <image if="currentAdInfo.icon_url"  class="new-open-icon" src="{{ currentAdInfo.icon_url }}"></image>
                                <text if="currentAdInfo.brand_name || currentAdInfo.title" class="new-open-name">{{ currentAdInfo.brand_name || currentAdInfo.title }}</text>
                            </div>
                            <text class="new-open-btn {{currentAdInfo.isBtnBreath ? 'show-breathe' : ''}}">{{ currentAdInfo.btnContent }}</text>
                        </block> 
                    </div>
                    <ad-clickable-area type="click">
                        <text class="new-open-block"></text>
                    </ad-clickable-area>
                    <block if="currentAdInfo.click_behive && !adHasClick">
                        <ad-clickable-area type="click">
                            <div class="new-open-close">
                                <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                            </div>
                        </ad-clickable-area>
                    </block>
                    <block else>
                        <div class="new-open-close">
                            <image class="new-open-close-img" src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png" @click="fnCloseOpenAd"></image>
                        </div>
                    </block>
                </stack>
                <ad-clickable-area style="width: 100%; height: {{ isShowAdFullScreenCover && isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? '100%' : '0px' }};" type="click"></ad-clickable-area>
            </stack>
        </ad>
        <!-- 华为ad-button点击优化区域 -->
        <div class="ad-button-optimize-container {{ adButtonOptimize.isContainerFixed ? 'ad-button-optimize-container-fixed' : '' }}" if="isExtraShow && adButtonOptimize.isShowContainer" style="{{ adButtonOptimize.containerStyle }}" @click="fnStopPropagation">
            <div class="ad-button-list" @touchmove="fnAdButtonContainerTouchmove" @touchstart="fnAdButtonContainerTouchstart" @touchend="fnAdButtonContainerTouchend">
                <block for="adButtonOptimize.adButtonCounts">
                    <ad-button
                        class="ad-button-item"
                        adId="{{ currentAdInfo.adId }}"
                        adunitId="{{ currentAdInfo.chn_slot_id }}"
                        @click="fnDownloadStart"
                        style="{{ adButtonOptimize.adButtonStyle }}"
                    >
                    </ad-button>
                </block>
            </div>
            <!-- back位置的关闭按钮是弹窗右上角的叉子，和其他位置有区别 -->
            <block if="adButtonOptimize.isShowCloseBtn">
                <block if="adType === 'back'">
                    <image class="ad-close-btn" src="../Common/images/ad-close.png" style="{{ adButtonOptimize.closeBtnStyle }}" @click="fnExtraClose" @touchstart="fnStopPropagation" @touchend="fnStopPropagation"></image>
                </block>
                <block else>
                    <div style="{{ adButtonOptimize.closeBtnStyle }}" @click="fnExtraClose" @touchstart="fnStopPropagation" @touchend="fnStopPropagation">
                        <image class="ad-close-btn" if="noAdVipSwitch" src="../Common/images/no-ad-icon.png"></image>
                        <image class="ad-close-btn" else src="https://xsmfdq.kkyd.cn/images/ad-close-insert.png"></image>
                    </div>
                </block>
            </block>
        </div>
        <!-- vivo2.0全屏覆盖误触 -->
        <ad
            if="isShowAdFullScreenCover && serviceAdBrand === 'vivo'"
            class="ad-full-screen-cover {{ isAdShow && adFullScreenCover.position === adFullScreenCoverPosition.position ? '' : 'ad-full-screen-cover-hide' }}"
            adId="{{ currentAdInfo.adId }}"
            @adclick="fnNewBrandAdClick"
        >
            <ad-clickable-area type="click" class="ad-blank">
                <text class="ad-blank"></text>
            </ad-clickable-area>
        </ad>
    </div>
</template>
<style lang="less" scoped>
    @keyframes shake {
        0% {
            transform: rotate(0deg);
        }
        20% {
            transform: rotate(40deg);
        }  
        35% {
            transform: rotate(-30deg);
        }
        45% {
            transform: rotate(40deg);
        }
        60% {
            transform: rotate(-30deg);
        }
        100% {
            transform: rotate(0deg);
        }
    }
    @keyframes boxFadeIn {
        from {
            transform: translateY(160px);
        }
        to {
            transform: translateY(0px);
        }
    }
    @keyframes videoBtn {
        0% {
            transform: scale(0.9);
        }
        50% {
            transform: scale(1);
        }  
        100% {
            transform: scale(0.9);
        }
    }
    @keyframes breathe{

        0%{
            transform: scale(.89);
        }
        50%{
            transform: scale(1.0);
        }
        100%{
            transform: scale(.89);
        }
    }
    .show-breathe{
        animation-name: breathe;
        animation-duration: 1000ms;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
    }
    .cancel-control-wrap {
        position: fixed;
        width: 100%;
        height: 100%;  
    }
    .baidu-open-wrap {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        padding: 0;
    }
    /* 该样式会让百度SDK的外层元素高度为自身元素的高度。否则，会和广告组件最外层元素一样高，成了全区域可点击 */
    .baidu-insert-wrap {
        align-items: center;
    }
    .back-btn-mixin() {
        .back-btn-exit, .back-btn-action {
            width: 260px;
            height: 90px;
            border-radius: 45px;
            line-height: 90px;
            text-align: center;
        }
        .back-btn-exit {
            background-color: #E7E7E7;
            font-size: 32px;
            color: #817272;
        }
        .back-btn-action {
            background-color: #6D28F4;
            font-size: 32px;
            color: #FFFFFF;
        }
        .back-btn-exit-small {
            width: 170px;
        }
        .back-btn-action-big {
            width: 350px;
        }
    }
    .ad-wrap {
        .img-stack-end {
            align-items: flex-end;
            justify-content: flex-end;
        }
        .video-show {
            width: 100%;
            height: 100%;
            align-self: center;
        }
        .oppo-video-show {
            width: 100%;
            height: 100%;
            justify-content: center;
            background-color: #000000;
        }
        .banner-ad-wrap {
            justify-content: flex-end;
            width: 100%;
            height: 146px;
            .banner-stack-wrap {
                flex-direction: column;
                justify-content: flex-end;
                width: 100%;
                height: 100%;
            }
            .empty-click-area {
                width: 100%;
                height: 100%;
            }
        }
        .banner-ad-wrap-click-behive {
            height: 188px;
        }
        .banner-wrap {
            align-items: center;
            padding: 10px 20px;
            width: 100%;
            height: 146px;
            flex-shrink: 0;
            .banner-img-wrap {
                flex-shrink: 0;
                margin-right: 16px;
                width: 224px;
                height: 126px;
                .banner-stack {
                    width: 224px;
                    background-color: #EAEAEA;
                }
                .banner-img-brand {
                    width: 100%;
                    height: 126px;
                    object-fit: fill;
                }
                .banner-img {
                    width: 100%;
                    height: 100%;
                    object-fit: fill;
                }
                .banner-img-contain {
                    object-fit: contain;
                }
                .banner-img-brand-icon {
                    margin-right: 49px;
                    width: 126px;
                    height: 126px;
                    object-fit: fill;
                }
                .banner-img-vertical {
                    object-fit: contain;
                }
                .banner-video-wrap {
                    width: 100%; 
                    height: 100%;
                    border-radius: 8px;
                    .banner-video {
                        width: 100%; 
                        height: 100%;
                        object-fit: contain;
                        background-color: #444439;
                        border-radius: 8px;
                    }
                    .banner-finish-cover {
                        width: 100%;
                        height: 100%;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        background-color: rgba(0, 0, 0, .6);
                        .banner-finish-image {
                            width: 48px;
                            height: 48px;
                        }
                        .banner-finish-title {
                            font-size: 22px;
                            margin-top: 8px;
                            color: rgba(255,255,255, .6);
                        }
                    }
                    .banner-pop {
                        width: 100%;
                        height: 100%;
                        background-color: rgba(255,255,255,0);
                    }
                }
                .banner-img-ad {
                    height: 24px;
                }
                .banner-img-logo {
                    height: 24px;
                }
            }
            .banner-desc-wrap {
                margin-right: 22px;
                width: 280px;
                flex-grow: 1;
                flex-shrink: 1;
                flex-direction: column;
                align-items: flex-start;
                justify-content: center;
                .banner-title {
                    lines: 1;
                    text-overflow: ellipsis;
                    height: 42px;
                    width: 100%;
                    font-size: 30px;
                    color: #333;
                    line-height: 42px;    
                    font-weight: bold;
                }
                .banner-desc {
                    lines: 1;
                    text-overflow: ellipsis;
                    height: 33px;
                    width: 100%;
                    font-size: 24px;
                    color: #333;
                    line-height: 33px;
                    margin-top: 12px;
                }
                .color-night {
                    color: rgba(255, 255, 255, .5);
                }
            }
            .banner-btn {
                flex-shrink: 0;
                align-items: center;
                justify-content: center;
                width: 168px;
                height: 64px;
                background-color: #F97053;
                border-radius: 32px; 
                font-size: 30px;
                color: rgba(255,255,255,1);
                text-align: center;
            }
            .banner-btn-night {
                opacity: .6;
            }
        }
        .banner-wrap-hide {
            height: 0px;
            padding: 0px; 
        }
        .banner-wrap-box {
            height: 126px;
        }
        .tip-ad-wrap {
            margin-top: 30px;
            width: 640px;
            height: 390px;
        }
        .tip-wrap-extra {
            margin-top: 0px;
            height: 390px;
        }
        .tip-wrap {
            align-items: center;
            justify-content: center;
            margin-top: 30px;
            width: 640px;
            height: 360px;
            .tip-stack {
                width: 640px;
                height: 360px;      
                align-items: center;
                justify-content: center;
            }
            .tip-ad-bg {
                width: 640px;
                height: 360px;
            }
            .tip-box {
                width: 640px;
                height: 360px; 
                border-radius: 10px;
                .tip-box-stack {
                    width: 640px;
                    height: 360px; 
                    border-radius: 10px;
                }
                .tip-image-wrap {
                    width: 640px;
                    height: 360px; 
                    background-color: #EAEAEA;
                    border-radius: 10px;  
                    align-items: center;
                    justify-content: center; 
                    .tip-image-icon {
                        width: 360px;
                        height: 360px;  
                    } 
                }
                .tip-box-img {
                    width: 640px;
                    height: 360px; 
                    border-radius: 10px;
                    object-fit: fill;
                }
                .tip-info-box {
                    width: 640px;
                    height: 360px;      
                    .tip-info-stack {
                        align-items: flex-end;
                        width: 640px;
                        height: 360px; 
                    }  
                    .tip-info-mask-bg {
                        width: 640px;
                        height: 72px;
                    }
                    .tip-info-mask {
                        align-items: center;
                        justify-content: space-between;
                        width: 640px;
                        height: 72px;   
                        .tip-title {
                            width: 416px;
                            font-size: 26px;
                            color: #FFFFFF;
                            line-height: 72px;
                            margin-left: 20px;
                            lines: 1;
                            text-overflow: ellipsis;
                        }
                        .tip-img-logo, .tip-img-ad {
                            margin-top: 19px;
                            height: 34px;
                        }
                    }
                }
            }
        }
        .reward-wrap {
            align-items: center;
            justify-content: center;
            width: 580px;
            height: 326px;
            border-radius: 8px;
            .reward-box-stack-extra {
                flex-direction: column;
            }
            .reward-box-stack {
                width: 580px;
                height: 326px;
                border-radius: 8px;
            }
            .reward-image-wrap {
                width: 580px;
                height: 326px;
                background-color: #EAEAEA;
                border-radius: 8px;  
                align-items: center;
                justify-content: center; 
                .reward-image-icon {
                    width: 326px;
                    height: 326px;
                }
            }
            .reward-box-img {
                width: 580px;
                height: 326px;
                border-radius: 8px;
                object-fit: fill;
            }
            .reward-info-box {
                width: 580px;
                height: 326px;
                border-radius: 8px;
                .reward-info-stack {
                    align-items: flex-end;
                    width: 580px;
                    height: 326px;
                }  
                .reward-info-mask-bg {
                    width: 580px;
                    height: 72px;
                }
                .reward-info-mask {
                    align-items: center;
                    justify-content: space-between;
                    width: 580px;
                    height: 72px;
                    .reward-title {
                        width: 416px;
                        font-size: 26px;
                        color: #FFFFFF;
                        line-height: 72px;
                        margin-left: 20px;
                        lines: 1;
                        text-overflow: ellipsis;
                    }
                    .reward-img-logo, .reward-img-ad {
                        margin-top: 19px;
                        height: 34px;
                    }
                }
            }
        }
        .message-ad-wrap {
            margin: 0 auto;
            width: 690px;
        }
        .message-ad-wrap-top {
            height: 202px;
        }
        .message-ad-wrap-middle {
            height: 529px;
        }
        .message-ad-stack {
            width: 100%;
            height: 100%;
            .message-ad-blank {
                width: 100%;
                height: 100%;
            }
            /* 上 关闭按钮 */
            .message-close-top-outer {
                width: 40px;
                height: 40px;
                margin-left: 316px;
                margin-top: 20px;
            }
            .message-na-close-top-outer {
                width: 102px;
                height: 32px;
                margin-left: 254px;
                margin-top: 20px;
            }
            /* 中 关闭按钮 */
            .message-close-middle-outer {
                width: 40px;
                height: 40px;
                margin-left: 630px;
                margin-top: 20px;
            }
            .message-na-close-middle-outer {
                width: 102px;
                height: 32px;
                margin-left: 568px;
                margin-top: 20px;
            }
        }
        .message-wrap {
            margin: 0 auto;
            width: 690px;
            background-color: rgba(255,255,255,.3);
            border-radius: 6px;
            flex-shrink: 0;
            .message-top {
                padding: 20px;
                width: 690px;
                height: 202px;
                .color-night {
                    color: #ccc;
                }
                .message-top-img-wrap {
                    margin-right: 26px;
                    width: 336px;
                    height: 168px;
                    .message-top-image-wrap {
                        width: 336px;
                        height: 168px;    
                        background-color: #EAEAEA;
                        align-items: center;
                        justify-content: center; 
                        .message-top-image-icon {
                            width: 168px;
                            height: 168px;    
                        }
                    }
                    .message-top-img {
                        width: 336px;
                        height: 168px; 
                        object-fit: fill;
                    }
                    .message-top-img-ad {
                        height: 24px;
                    }
                    .message-top-img-logo {
                        height: 24px;
                    }
                }
                .message-top-ml {
                    margin-left: 26px;
                    margin-right: 0px;
                }
                .message-top-info {
                    flex-direction: column;
                    align-items: flex-end;
                    width: 288px;
                    .message-top-title {
                        width: 288px;
                        height: 40px;
                        font-size: 28px;
                        color: rgba(68,68,68,1);
                        font-weight: bold;
                        lines: 1;
                        text-overflow: ellipsis;   
                    }
                    .message-top-desc {
                        width: 288px;
                        height: 72px;
                        font-size: 26px;
                        color: rgba(68,68,68,1);
                        line-height: 40px;
                        font-weight: 500;
                        lines: 2;
                        text-overflow: ellipsis;
                    }
                    .message-top-btn {
                        align-items: center;
                        justify-content: center;
                        width: 220px;
                        height: 44px;
                        background-color: rgba(249,112,83,1);
                        border-radius: 27px;
                        font-size: 20px;
                        color: rgba(255,255,255,1);
                        text-align: center;
                    }
                }
                .message-top-fs {
                    align-items: flex-start;   
                }
            }
            .message-middle {
                flex-direction: column;
                padding: 20px;
                width: 690px;
                .message-middle-img-wrap {
                    margin-bottom: 20px;
                    width: 650px;
                    height: 325px;
                    .message-middle-image-wrap {
                        width: 650px;
                        height: 325px;
                        background-color: #EAEAEA;
                        align-items: center;
                        justify-content: center; 
                        .message-middle-image-icon {
                            width: 325px;
                            height: 325px;
                        }
                    }
                    .message-middle-img {
                        width: 650px;
                        height: 325px;
                        object-fit: fill;
                    }
                    .message-middle-img-ad {
                        height: 24px;
                    }
                    .message-middle-img-logo {
                        height: 24px;
                    }
                }
                .message-middle-title {
                    width: 650px;
                    height: 48px;
                    font-size: 30px;
                    color: rgba(68,68,68,1);
                    lines: 1;
                    text-overflow: ellipsis;
                    font-weight: bold;
                }
                .message-middle-desc {
                    margin-bottom: 10px;
                    width: 650px;
                    font-size: 24px;
                    color: rgba(68,68,68,1);
                    line-height: 36px;
                    lines: 2;
                    text-overflow: ellipsis;
                }
                .message-middle-info-wrap {
                    justify-content: space-between;
                    align-items: center;
                    width: 650px;
                    height: 44px;
                    .message-middle-info {
                        align-items: center;
                        height: 44px;
                        .message-middle-icon {
                            margin-right: 20px;
                            width: 36px;
                            height: 36px;
                        }
                        .message-middle-name {
                            height: 32px;
                            font-size: 24px;
                            color: rgba(68,68,68,1);
                        }
                    }
                    .message-middle-btn {
                        align-items: center;
                        justify-content: center;
                        width: 220px;
                        height: 44px;
                        background-color: rgba(249,112,83,1);
                        border-radius: 27px;
                        font-size: 20px;
                        color: rgba(255,255,255,1);
                        text-align: center;
                    }
                }
            }
        }
        .open-ad-wrap {
            width: 100%;
            height: 100%;
            flex: 1; 
            .open-container {
                height: 100%;
                width: 100%;
                flex-direction: column;
                .open-block {
                    width: 100%;
                    height: 100%;
                }
                .open-close-wrapper {
                    background-color: rgba(0, 0, 0, 0.2); 
                    height: 59px;
                    border-radius: 30px;
                    justify-content: center;
                    align-items: center;
                    align-self: flex-end;
                    margin-right: 16px;
                }
                .open-screen-close {
                    padding: 0px 16px;
                    height: 59px;
                    line-height: 59px;
                    justify-content: center;
                    align-items: center;
                    text {
                        color: #fff;
                        text-align: center;
                        font-size: 24px;
                    }
                }
                .open-close-bottom {
                    margin-bottom: 240px;
                }
                .open-close-top {
                    margin-top: 120px;
                }
            }
            .open-container-bottom {
                justify-content: flex-end;
            }
        }
        .open-wrap {
            flex-direction: column;
            width: 100%;
            height: 100%;
            flex: 1;
            flex-shrink: 0;
            background-color: rgba(255, 248, 238, 1);
            justify-content: center;
            .close-btn-block {
                position: fixed;
                width: 154px;
                height: 45px;
                right: 32px;
            }
            .close-btn-top {
                top: 120px;
            }
            .close-btn-bottom {
                bottom: 240px;
            }
            .open-extra {
                flex-direction: column;
                align-items: center;
                width: 100%;
                margin-top: 56px;
                height: 146px;
                .open-extra-title {
                    margin-bottom: 8px;
                    height: 56px;
                    font-size: 40px;
                    font-weight: bold;
                    color: #222222;
                    line-height: 56px;
                    text-align: center;
                }
                .open-extra-rating {
                    margin-bottom: 32px;
                    width: 294px;
                    height: 50px;
                    .open-extra-rating-img {
                        width: 320px;
                        height: 50px;
                    }
                }
            }
            .open-stack-wrap {
                flex: 1;
                width: 100%;
                height: 100%;
            }
            .open-stack-end {
                align-items: flex-end;
            }
            .open-mask {
                width: 100%;
                height: 600px;
                background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, .4));
            }
            .open-box {
                flex: 1;
                width: 100%;
                height: 100%;
                .open-stack {
                    width: 100%;
                    height: 100%;
                } 
                .open-img {
                    width: 100%;
                    height: 100%;
                    object-fit: fill;
                }
                .open-ad-right {
                    margin-right: 24px;
                }
                .open-ad-logo, .open-ad-text {
                    height: 34px;
                }
            }
            .open-img-vertical {
                width: 100%;
                height: 100%;
                object-fit: fill;
            }
            .open-box-brand {
                flex-direction: column;
                align-items: center;
                justify-content: center;
                width: 100%;
                padding: 0;
                .open-img {
                    width: 686px;
                    height: 386px;
                    border-radius: 8px;
                    object-fit: fill;
                }
                .open-img-contain {
                    object-fit: contain;
                }
                .open-img-brand {
                    width: 686px;
                    height: 386px;
                    border-radius: 8px;
                    object-fit: fill;
                }
                .open-stack-brand {
                    width: 686px;
                    height: 386px;
                    .open-image-wrap {
                        width: 686px;
                        height: 386px;
                        background-color: #444444;
                        border-radius: 8px;
                        align-items: center;
                        justify-content: center;
                        .open-image-icon {
                            width: 386px;
                            height: 386px;
                        }   
                    }
                    .open-video-wrap {
                        width: 686px;
                        height: 386px;
                        border-radius: 8px;
                        .open-video {
                            width: 686px;
                            height: 386px;
                            object-fit: contain;
                            background-color: #444444;
                            border-radius: 8px;
                        }
                        .open-finish-cover {
                            width: 100%;
                            height: 100%;
                            flex-direction: column;
                            justify-content: center;
                            align-items: center;
                            background-color: rgba(0, 0, 0, .6);
                            .open-finish-image {
                                width: 90px;
                                height: 90px;
                            }
                            .open-finish-title {
                                margin: 16px 32px;
                                font-size: 28px;
                                color: rgba(255, 255, 255, .8);
                            }
                            .open-finish-btn {
                                width: 192px;
                                height: 64px;
                                background-color: #6D28F4;
                                border-radius: 32px;
                                text-align: center;
                                align-items: center;
                                color: #FFFFFF;
                                font-size: 28px;
                            }
                        }
                        .open-pop {
                            width: 100%;
                            height: 100%;
                            background-color: rgba(255, 255, 255, 0);
                        }
                    }
                }
                .open-ad-box-bottom {
                    flex-direction: column;
                    background-color: rgba(255, 255, 255, 0.6);
                    width: 686px;
                    border-bottom-left-radius: 8px;
                    border-bottom-right-radius: 8px;
                    .open-ad-desc {
                        width: 686px;
                        height: 32px;
                        margin-top: 24px;
                        padding: 0px;
                        margin-left: 32px;
                        font-size: 32px;
                        font-weight: bold;
                        color: #333333;
                        line-height: 32px;
                        lines: 1;
                        text-overflow: ellipsis;
                    }
                    .open-ad-btn {
                        margin-top: 24px;
                        margin-bottom: 24px;
                        margin-left: 32px;
                        width: 622px;
                        height: 80px;
                        font-size: 32px;
                        font-weight: 400;
                        color: #ffffff;
                        line-height: 80px;
                        text-align: center; 
                        background-color:rgba(250, 88, 5, 1);
                        border-radius: 40px;
                    }
                    .open-ad-box {
                        align-items: center;
                        margin-left: 32px;
                        .open-icon {
                            margin-right: 16px;
                            margin-top: 12px;
                            width: 74px;
                            height: 74px;
                            border-radius: 8px;
                        }
                        .open-name {
                            height: 74px;
                            font-size: 32px;
                            color: #333333;
                            line-height: 74px;
                            lines: 1;
                            text-overflow: ellipsis;
                        }
                    }
                }

            }
            .open-info {
                align-items: center;
                justify-content: center;
                height: 200px;
                padding: 0 40px;
                background-color: rgba(255, 255, 255, 1);
                .open-info-img {
                    width: 64px;
                    height: 64px; 
                    border-radius: 8px;
                }
                .system-open-info {
                    margin-left: 24px;
                    flex-direction: column;
                    justify-content: center;
                    align-items: center;
                    .system-open-title {
                        margin-bottom: 8px;
                        height: 62px;
                        line-height: 62px;
                        font-size: 44px;
                        font-weight: bold;
                        color: #333333;
                    }
                    .system-open-tip {
                        height: 33px;
                        line-height: 33px;
                        font-size: 24px;
                        color: #999999;
                    }
                }
                .open-info-text {
                    margin-left: 20px;
                    height: 48px;
                    font-size: 34px;
                    font-weight: 400;
                    color: rgba(68,68,68,1);
                    line-height: 32px; 
                    lines: 1;
                    text-overflow: ellipsis; 
                }
            }
        }
        .pop-wrap {
            flex-direction: column;
            width: 524px;
            height: 932px;
            border-radius: 4px;
            .new-open-img {
                width: 524px;
                height: 932px;
                border-radius: 4px;
                object-fit: fill;
            }
            .new-open-img-ad-logo,  .new-open-img-ad-text {
                height: 28px;
            }
            .new-open-stack-box {
                width: 524px;
                height: 932px;
                border-radius: 4px;
                .new-open-close-img {
                    margin-top: 10px;
                    margin-right: 12px;
                    align-self: flex-start;
                    width: 60px;
                    height: 60px;
                }
                .pop-title {
                    width: 100%;
                    line-height: 45px;
                    margin-bottom: 35px;
                    padding: 0 16px;
                    color: rgba(255, 255, 255, 0.9);
                    font-size: 32px;
                    lines: 2;
                    text-overflow: ellipsis;
                }
            }
            .new-open-ad-stack{
                width: 100%;
                height: 100%;
                .new-open-close {
                    justify-content: flex-end;
                    margin: 10px 6px 55px 0px;
                    width: 100%;
                    height: 60px;
                    .new-open-close-img {
                        width: 60px;
                        height: 60px;
                    }
                }
            }
            .pop-ad-blank{
                width: 100%;
                height: 100%;
            }
            .new-open-box {
                flex-direction: column;
                align-items: center;
                width: 524px;
                height: 932px;
                border-radius: 4px;
                background: linear-gradient(180deg, #FFF3DD 0%, #FFE9CC 100%);
                .new-open-close, .pop-block {
                    justify-content: flex-end;
                    margin: 10px 12px 55px 0px;
                    width: 100%;
                    height: 60px;
                    .new-open-close-img {
                        width: 60px;
                        height: 60px;
                    }
                }
                .new-open-title {
                    margin-bottom: 16px;
                    height: 50px;
                    font-size: 36px;
                    font-weight: bold;
                    color: #222222;
                    line-height: 50px;
                }
                .new-open-rating {
                    margin-bottom: 40px;
                    height: 56px;
                    width: 320px;
                    color: #FFAB0E;
                }
                .new-open-stack {
                    margin-bottom: 24px;
                    align-items: flex-end;
                    justify-content: flex-end;
                    width: 482px;
                    height: 270px;
                    .new-open-img {
                        width: 482px;
                        height: 270px;
                        object-fit: fill;
                    }
                    .pop-image-wrap {
                        width: 482px;
                        height: 270px;
                        background-color: #EAEAEA;
                        border-radius: 4px;
                        align-items: center;
                        justify-content: center;
                        .pop-image-icon {
                            width: 270px;
                            height: 270px;
                        }
                    }
                }
                .new-open-desc {
                    margin-bottom: 40px;
                    width: 482px;
                    height: 90px;
                    font-size: 32px;
                    color: #222222;
                    line-height: 45px;
                    lines: 2;
                    text-overflow: ellipsis;
                }
                .new-open-btn {
                    width: 482px;
                    height: 80px;
                    background-color: #FF3D4E;
                    border-radius: 40px;
                    text-align: center;
                    font-size: 32px;
                    color: #FFFFFF;
                    line-height: 80px;
                }
            }
        }
        .new-open-wrap {
            flex-direction: column;
            width: 617px;
            height: 1096px;
            border-radius: 16px;
            .new-open-img {
                width: 100%;
                height: 1096px;
                border-radius: 8px;
                object-fit: fill;
            }
            .new-open-container {
                width: 617px;
                height: 1096px;
                .new-open-block{
                    width: 100%;
                    height: 100%;
                }
                .new-open-box {
                    border-radius: 16px;
                    .new-open-title {
                        margin-top: 134px;
                    }
                    .new-vertical-stack {
                        flex-direction: column;
                        align-items: flex-end;
                        justify-content: flex-end;
                        width: 617px;
                        height: 1096px;
                        .new-open-vertical-wrap {
                            flex-direction: column;
                            justify-content: flex-end;
                            padding: 0px 32px;
                            width: 100%;
                            height: 100%;
                            .new-open-vertical-desc {
                                margin-top: 16px;
                                width: 566px;
                                height: 90px;
                                font-size: 32px;
                                color: rgba(255, 255, 255, 0.9);
                                line-height: 45px;
                                lines: 2;
                                text-overflow: ellipsis;
                            }
                            .new-open-vertical-box {
                                width: 100%;
                                height: 74px;
                                align-items: center;
                                .new-open-icon {
                                    margin-right: 16px;
                                    width: 74px;
                                    height: 74px;
                                    border-radius: 8px;
                                }
                                .new-open-name {
                                    width: 566px;
                                    height: 74px;
                                    font-size: 28px;
                                    color: #FFFFFF;
                                    line-height: 74px;
                                    lines: 1;
                                    text-overflow: ellipsis;
                                }
                            }
                            .new-open-vertical-btn {
                                margin-top: 16px;
                                height: 80px;
                                background-color: #F35104;
                                border-radius: 40px;
                                font-size: 32px;
                                font-weight: bold;
                                color: #FFFFFF;
                                line-height: 80px;
                                text-align: center;
                                margin-bottom: 40px;
                                width: 566px;  
                            }
                        }
                    }
                }
            }
            .new-open-close {
                flex-shrink: 0;
                width: 50px;
                margin-left: 550px;
                margin-top: 16px;
                height: 50px;
                .new-open-close-img {
                    width: 50px;
                    height: 50px;
                }
            }
            .new-open-img-ad-logo,  .new-open-img-ad-text {
                height: 28px;
            }
            .new-open-stack-box {
                width: 100%;
                height: 100%;
                border-radius: 4px;
                .new-open-close-img {
                    margin-top: 10px;
                    margin-right: 12px;
                    align-self: flex-start;
                    width: 50px;
                    height: 50px;
                }
            }
            .new-open-box {
                flex-direction: column;
                align-items: center;
                width: 100%;
                height: 100%;
                border-radius: 16px;
                background: linear-gradient(180deg, #FFF3DD 0%, #FFE9CC 100%);
                .new-open-title {
                    margin-bottom: 16px;
                    margin-top: 68px;
                    height: 50px;
                    font-size: 36px;
                    font-weight: bold;
                    color: #222222;
                    line-height: 50px;
                }
                .new-open-title-shake {
                    margin-top: 0;
                }
                .new-open-rating {
                    margin-bottom: 24px;
                    height: 56px;
                    width: 320px;
                    color: #FFAB0E;
                }
                .new-open-stack {
                    align-items: flex-end;
                    justify-content: flex-end;
                    width: 566px;
                    height: 316px;
                    .new-open-video-wrap {
                        width: 566px;
                        height: 316px;
                        border-radius: 8px;
                        .new-open-video {
                            width: 566px;
                            height: 316px;
                            object-fit: contain;
                            background-color: #444444;
                            border-radius: 8px;
                        }
                        .new-open-finish-cover {
                            width: 100%;
                            height: 100%;
                            flex-direction: column;
                            justify-content: center;
                            align-items: center;
                            background-color: rgba(0, 0, 0, .6);
                            .new-open-finish-image {
                                width: 90px;
                                height: 90px;
                            }
                            .new-open-finish-title {
                                margin: 16px 32px;
                                font-size: 28px;
                                color: rgba(255, 255, 255, .8);
                            }
                            .new-open-finish-btn {
                                width: 192px;
                                height: 64px;
                                background-color: #6D28F4;
                                border-radius: 32px;
                                text-align: center;
                                align-items: center;
                                color: #FFFFFF;
                                font-size: 28px;
                            }
                        }
                        .new-open-pop {
                            width: 100%;
                            height: 100%;
                            background-color: rgba(255, 255, 255, 0);
                        }
                    }
                    .new-open-img {
                        width: 566px;
                        height: 316px;
                        object-fit: fill;
                    }
                    .new-open-img-contain {
                        object-fit: contain;
                    }
                    .new-open-icon-wrap {
                        width: 566px ;
                        height: 316px;
                        align-items: center;
                        justify-content: center;
                        background-color: #EAEAEA;
                        .new-open-image-icon {
                            width: 316px ;
                            height: 316px;
                        }
                    }
                }
                .new-open-desc {
                    margin-top: 25px;
                    width: 566px;
                    font-size: 32px;
                    color: rgba(51, 51, 51, 0.9);
                    lines: 2;
                    text-overflow: ellipsis;
                    font-weight: bold;
                    line-height: 45px;
                    height: 90px;
                }
                .new-open-desc-shake {
                    height: 45px;
                    lines: 1;
                }
                .new-open-btn {
                    width: 566px;
                    height: 90px;
                    background-color: #F35104;
                    border-radius: 45px;
                    text-align: center;
                    font-size: 32px;
                    color: #FFFFFF;
                    line-height: 90px;
                    margin-top: 40px;
                }
                .new-open-ad-box {
                    align-items: center;
                    margin-top: 24px;
                    height: 74px;
                    width: 566px;
                    .new-open-icon {
                        margin-right: 16px;
                        width: 74px;
                        height: 74px;
                        border-radius: 8px;
                    }
                    .new-open-name {
                        flex: 1;
                        height: 74px;
                        font-size: 32px;
                        color: #333333;
                        line-height: 74px;
                        lines: 1;
                        text-overflow: ellipsis;
                    }
                }
                .new-open-desc-shake,
                .new-open-btn-shake,
                .new-open-ad-box-shake {
                    margin-top: 20px;
                }
            }
            /* 新开屏摇一摇 */
            .new-open-shake-wrap {
                flex-direction: column;
                align-items: center;
                width: 100%;
                margin-bottom: 32px;
                .shake-image {
                    flex-shrink: 0;
                    width: 104px;
                    height: 104px;
                }
                .shake-text-wrap {
                    flex-direction: column;
                    align-items: center;
                    justify-content: center;
                    width: 100%;
                    text {
                        height: 45px;
                        line-height: 45px;
                        margin-bottom: 4px;
                        color: rgba(51, 51, 51, 1);
                        font-size: 32px;
                        font-weight: bold;
                        text-align: center;
                    }
                    .shake-go-page {
                        height: 33px;
                        line-height: 33px;
                        margin-top: 4px;
                        font-size: 24px;
                    }
                }
            }
            .new-open-shake-wrap-api {
                .shake-text-wrap {
                    width: 482px;
                    height: 130px;
                    border-radius: 65px;
                    background-color: rgba(0, 0, 0, 0.6);
                    text {
                        color: #fff;
                    }
                }
            }
            .new-open-shake-wrap-brand {
                margin-top: 45px;
                margin-bottom: 15px;
            }
            .new-open-container-wrap {
                align-items: center;
                justify-content: center;
                width: 100%;
                height: 100%;
            }
        }
        .new-open-wrap-cover {
            justify-content: center;
            width: 100%;
            height: 100%;
        }
        .pre-ad-brand, .pre-ad-stack, .pre-ad-blank, .insert-ad-blank {
            width: 100%;
            height: 100%;
        }
        .pre-close-outer {
            width: 44px;
            height: 44px;
            margin-left: 642px;
            align-self: flex-end;
            margin-bottom: 644px;
        }
        .pre-na-close-outer {
            width: 102px;
            height: 32px;
            margin-left: 584px;
            align-self: flex-end;
            margin-bottom: 644px;
        }
        .pre-close-pro, .pre-na-close-pro {
            margin-bottom: 729px;
        }
        .pre-ad-brand-limit-pro {
            height: 781px;
        }
        .pre-ad-brand-limit {
            height: 696px;
        }
        .pre-ad-wrap {
            flex-direction: column;
            justify-content: flex-end;
            align-items: center;
            width: 710px;
            height: 100%;
        }
        .pre-wrap {
            flex-direction: column;
            width: 710px;
            height: 696px;
            background-color: rgba(255, 255, 255, .1);
            border-radius: 8px;
            padding: 20px 24px 0px;
            .pre-image-box {
                align-self: center;
                flex-direction: column;
                width: 662px;
                height: 404px;
                border-radius: 8px;
                .pre-image {
                    width: 662px;
                    height: 404px;
                    object-fit: fill;  
                    border-radius: 8px;
                }
                .pre-vertical-image {
                    object-fit: contain;
                }
                .pre-image-contain {
                    object-fit: contain;
                }
                .pre-video-wrap {
                    width: 662px; 
                    height: 404px;
                    border-radius: 8px;
                    .pre-video {
                        width: 662px; 
                        height: 404px;
                        object-fit: contain;
                        background-color: #444444;
                        border-radius: 8px;
                    }
                    .pre-finish-cover {
                        width: 100%;
                        height: 100%;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                        background-color: rgba(0, 0, 0, .6);
                        .pre-finish-image {
                            width: 90px;
                            height: 90px;
                        }
                        .pre-finish-title {
                            font-size: 28px;
                            margin: 16px 32px;
                            color: rgba(255,255,255, .8);
                        }
                        .pre-finish-btn {
                            width: 192px;
                            height: 64px;
                            background-color: #6D28F4;
                            border-radius: 32px;
                            text-align: center;
                            align-items: center;
                            color: #FFFFFF;
                            font-size: 28px;
                        }
                    }
                    .pre-pop {
                        width: 100%;
                        height: 100%;
                        background-color: rgba(255,255,255,0);
                    }
                }
                .pre-close {
                    align-self: flex-end;
                    width: 44px;
                    height: 44px;
                }
                .pre-ad-tip {
                    align-self: flex-end;
                    margin-top: 376px;
                    border-bottom-right-radius: 8px;
                    opacity: .5;
                    .pre-ad-logo, .pre-ad-text {
                        height: 28px;
                    }
                    .pre-ad-text {
                        border-bottom-right-radius: 8px;
                    }
                }
                .pre-image-wrap {
                    align-items: center;
                    justify-content: center;
                    width: 662px;
                    height: 404px;
                    background-color: #EAEAEA;
                    .pre-image-icon {
                        width: 404px;
                        height: 404px;
                    }
                }
            }
            .pre-desc {
                margin-top: 24px;
                width: 662px;
                height: 90px;
                font-size: 32px;
                font-weight: bold;
                color: rgba(51, 51, 51, 0.9);
                line-height: 45px;
                lines: 2;
                text-overflow: ellipsis;
            }
            .pre-desc-night {
                color: rgba(255, 255, 255, .5);
            }
            .pre-box {
                align-items: center;
                margin-top: 24px;
                height: 74px;
                width: 662px;
                .pre-icon {
                    margin-right: 16px;
                    width: 74px;
                    height: 74px;
                    border-radius: 8px;
                }
                .pre-name {
                    width: 572px;
                    height: 74px;
                    font-size: 32px;
                    color: #333333;
                    line-height: 74px;
                    lines: 1;
                    text-overflow: ellipsis;
                }
                .pre-name-pro {
                    width: 662px;
                }
                .pre-name-night {
                    color: rgba(255, 255, 255, .3);
                }
            }
            .pre-btn-center {
                align-items: center;
                justify-content: center;
            }
            .pre-btn {
                align-self: center;
                margin-top: 24px;
                width: 566px;
                height: 80px;
                background-color: #F97053;
                border-radius: 40px;
                font-size: 32px;
                font-weight: bold;
                color: #FFFFFF;
                line-height: 80px;
                text-align: center;
            }
            .pre-btn-night {
                opacity: .6;
            }
        }
        .pre-wrap-pro {
            height: 781px;
            .pre-btn {
                margin-top: 40px;
            }
        }
        .pre-wrap-night {
            background-color: rgba(255, 255, 255, .04);
        }
        .pre-ad-box {
            width: 100%;
            height: 100%;
            flex: 1;
            flex-direction: column;
        }
        .pre-ad-tab {
           width: 100%;
           height: 100%;
           flex: 1;   
        }
        .insert-ad-tab {
            width: 100%;
            height: 100%;
            flex: 1; 
        }
        .insert-wrap {
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 0px 24px;
            .insert-extra {
                flex-direction: column;
                justify-content: center;
                align-items: center;
                width: 100%;
                height: 152px;
                .insert-extra-title {
                    margin-bottom: 16px;
                    height: 56px;
                    font-size: 40px;
                    font-weight: bold;
                    color: #222222;
                    line-height: 56px;
                    text-align: center;
                }
                .insert-extra-title-night {
                    color: rgba(255, 255, 255, .5);
                }
                .insert-extra-rating {
                    margin-bottom: 24px;
                    width: 320px;
                    height: 56px;
                    .insert-extra-rating-img {
                        width: 320px;
                        height: 56px;
                    }
                }
            }
            .insert-ad-box {
                flex-direction: column;
                width: 662px;
                height: 736px;
                .insert-box-stack {
                    flex-direction: column;
                    align-items: flex-end;
                    width: 662px;
                    height: 404px;
                    .insert-image {
                        width: 662px;
                        height: 404px;
                        object-fit: fill;
                        border-radius: 8px;
                    }
                    .insert-image-contain {
                        object-fit: contain;
                    }
                    .insert-video-pop {
                        width: 100%;
                        height: 100%;
                        .insert-video {
                            width: 100%;
                            height: 100%;
                            object-fit: contain;
                            background-color: #444444;
                            border-radius: 8px;
                        }
                        .insert-finish-cover {
                            width: 100%;
                            height: 100%;
                            flex-direction: column;
                            justify-content: center;
                            align-items: center;
                            background-color: rgba(0, 0, 0, .6);
                            .insert-finish-image {
                                width: 90px;
                                height: 90px;
                            }
                            .insert-finish-title {
                                font-size: 28px;
                                margin: 16px 32px;
                                color: rgba(255,255,255, .8);
                            }
                            .insert-finish-btn {
                                width: 192px;
                                height: 64px;
                                background-color: #6D28F4;
                                border-radius: 32px;
                                text-align: center;
                                align-items: center;
                                color: #FFFFFF;
                                font-size: 28px;
                            }
                        }
                        .insert-pop {
                            width: 100%;
                            height: 100%;
                            background-color: rgba(255,255,255,0);
                        }
                    }
                    .insert-image-wrap {
                        width: 662px;
                        height: 404px;
                        background-color: #EAEAEA;
                        justify-content: center;
                        align-items: center;
                    }
                    .insert-image-icon {
                        width: 404px;
                        height: 404px;
                    }
                    .insert-close {
                        width: 50px;
                        height: 50px; 
                    }
                    .insert-ad-tip {
                        height: 28px;
                        opacity: .5;
                        border-bottom-right-radius: 8px;
                        .insert-ad-logo {
                            height: 28px;
                        }
                    }
                }
                .insert-desc {
                    margin-top: 24px;
                    width: 662px;
                    height: 90px;
                    font-size: 32px;
                    color: rgba(51, 51, 51, 0.9);
                    line-height: 45px;
                    lines: 2;
                    text-overflow: ellipsis;
                    font-weight: bold;
                }
                .insert-desc-night {
                    color: rgba(255, 255, 255, .5);
                }
                .insert-box {
                    align-items: center;
                    margin-top: 24px;
                    height: 74px;
                    width: 662px;
                    .insert-icon {
                        margin-right: 16px;
                        width: 74px;
                        height: 74px;
                        border-radius: 8px;
                    }
                    .insert-name {
                        width: 572px;
                        height: 74px;
                        font-size: 32px;
                        color: #333333;
                        line-height: 74px;
                        lines: 1;
                        text-overflow: ellipsis;
                    }
                    .insert-name-pro {
                        width: 662px;
                    }
                    .insert-name-night {
                        color: rgba(255, 255, 255, .3);
                    }
                }
                .insert-btn-center {
                    align-items: center;
                    justify-content: center;
                }
                .insert-btn {
                    align-self: center;
                    margin-top: 40px;
                    width: 566px;
                    height: 80px;
                    background-color: #F97053;
                    border-radius: 40px;
                    font-size: 32px;
                    font-weight: bold;
                    color: #FFFFFF;
                    line-height: 80px;
                    text-align: center;
                }
                .insert-btn-night {
                    opacity: .6;
                }
            }
            .insert-induce-click {
                width: 508px;
                height: 120px;
            }
        }
        .insert-wrap-vertical {
            padding: 0px;
            .insert-ad-box {
                width: 100%;
                height: 100%;
                .insert-box-stack {
                    width: 100%;
                    height: 100%;
                    .insert-image {
                        width: 100%;
                        height: 100%;
                    }
                    .insert-ad-tip {
                        opacity: 1;
                    }
                    .insert-vertical-wrap {
                        flex-direction: column;
                        width: 100%;
                        height: 100%;
                        justify-content: flex-end;
                        padding: 84px 32px 40px;
                        background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,.8) 100%);
                        .insert-box {
                            margin-top: 0px;
                            width: 100%;
                            .insert-name {
                                width: 100%;
                                color: rgba(255,255,255,.9);
                            }
                        }
                        .insert-desc {
                            margin-top: 16px;
                            width: 100%;
                            color: rgba(255,255,255,.9);
                        }
                        .insert-btn {
                            margin-top: 16px;
                            width: 100%;   
                        }
                    }
                }
            }
            .insert-vertical-box {
                width: 100%;
                height: 100%;
                .insert-vertical-stack {
                    width: 100%;
                    height: 100%;
                }
            }
        }
        .insert-wrap-end {
            justify-content: flex-start;
            align-items: flex-end;
        }
        .back-container {
            flex-direction: column;
            justify-content: center;
            align-items: center;
            flex: 1;
            width: 100%;
            height: 100%;
            .back-wrap {
                width: 646px;
                height: 752px;
                border-radius: 16px;
                background-color: #fff;
                .back-video-box {
                    margin-top: 191px; 
                    padding: 0px 32px;
                    width: 100%;
                    height: 328px; 
                }
                .content-wrap {
                    flex-direction: column;
                    width: 100%;
                    .back-title {
                        width: 100%;
                        height: 50px;
                        line-height: 50px;
                        margin-top: 48px;
                        color: #222;
                        font-size: 36px;
                        font-weight: bold;
                        text-align: center;
                        text-overflow: ellipsis;
                        lines: 1;
                    }
                    .back-title-index {
                        margin-top: 81px;
                        margin-bottom: 28px;
                    }
                    .back-tip {
                        width: 100%;
                        height: 45px;
                        line-height: 45px;
                        margin-top: 16px;
                        color: #222222;
                        font-size: 32px;
                        text-align: center;
                        text-overflow: ellipsis;
                        lines: 1;
                    }
                    .back-box {
                        flex-direction: column;
                        align-items: center;
                        flex: 1;
                        width: 100%;
                        margin-top: 32px;
                        padding: 0px 32px;
                        .ad-content-box {
                            flex-direction: column;
                            width: 100%;
                            height: 100%;
                        }
                        .back-image-box {
                            align-items: flex-end;
                            justify-content: flex-end;
                            width: 100%;
                            height: 328px;
                            .back-image-wrap {
                                align-items: center;
                                justify-content: center;
                                width: 100%;
                                height: 328px;
                                background-color: #EAEAEA;
                                .back-image-icon {
                                    width: 328px;
                                    height: 328px;
                                }
                            }
                            .back-image {
                                width: 100%;
                                height: 328px;
                                object-fit: fill;
                            }
                            .back-img-vertical {
                                object-fit: contain;
                            }
                            .back-image-contain {
                                object-fit: contain;
                            }
                            .back-icon {
                                .back-ad-logo, .back-ad-text {
                                    height: 28px;
                                }
                            }
                        }
                        .back-video-wrap {
                            width: 582px; 
                            height: 328px;
                            border-radius: 8px;
                            .back-video {
                                width: 582px; 
                                height: 328px;
                                object-fit: contain;
                                background-color: #444444; 
                                border-radius: 8px;
                            }
                            .back-finish-cover {
                                width: 100%;
                                height: 100%;
                                flex-direction: column;
                                justify-content: center;
                                align-items: center;
                                background-color: rgba(0, 0, 0, .6);
                                .back-finish-image {
                                    width: 90px;
                                    height: 90px;
                                }
                                .back-finish-title {
                                    font-size: 24px;
                                    margin: 16px 32px;
                                    color: rgba(255,255,255, .8);
                                }
                                .back-finish-btn {
                                    width: 176px;
                                    height: 56px;
                                    background-color: #6D28F4;
                                    border-radius: 32px;
                                    text-align: center;
                                    align-items: center;
                                    color: #FFFFFF;
                                    font-size: 24px;
                                }
                            }
                            .back-pop {
                                width: 100%;
                                height: 100%;
                                background-color: rgba(255,255,255,0);
                            }
                        }
                        .back-desc {
                            width: 100%;
                            height: 45px;
                            line-height: 45px;
                            margin-top: 16px;
                            color: #222;
                            font-size: 32px;
                            text-align: center;
                            text-overflow: ellipsis;
                            lines: 1;
                        }
                    }
                    /* 百度SDK */
                    .back-box-baidu-sdk {
                        flex-direction: column;
                        align-items: center;
                        justify-content: space-between; 
                        width: 100%;
                        flex: 1;
                        margin-top: 32px;
                        padding: 0px 32px 32px;
                        .baidu-container {
                            flex: 1;
                        }
                        .exit-btn {
                            flex-shrink: 0;
                            width: 426px;
                            height: 80px;
                            line-height: 80px;
                            margin-top: 20px;
                            color: #6D28F4;
                            font-size: 32px;
                            text-align: center;
                            border-radius: 45px;
                            background-color: rgba(120, 90, 246, 0.08);
                        }
                    }
                    /* 横板按钮 */
                    .back-btn-wrap {
                        align-items: center;
                        justify-content: space-between;
                        width: 100%;
                        height: 90px; 
                        margin-top: 42px;
                        margin-bottom: 40px;
                        padding: 0 53px;
                        .back-btn-mixin();
                    }
                    /* 竖版按钮 */
                    .back-btn-wrap-vertical {
                        flex-direction: column;
                        align-items: center;
                        width: 100%;
                        height: 160px;
                        margin-top: 24px;
                        margin-bottom: 32px;
                        .back-btn-exit,
                        .back-btn-action {
                            align-items: center;
                            width: 502px;
                            height: 80px;
                            text-align: center;
                        }
                        .back-btn-exit {
                            color: #8E8E98;
                            font-size: 26px;
                        }
                        .back-btn-action {
                            color: #fff;
                            font-size: 32px;
                            border-radius: 45px;
                            background-color: #785AF6;
                        }
                    }
                }
                .close-wrap {
                    justify-content: flex-end;
                    width: 100%;
                    height: 54px;
                    margin-top: 8px;
                    margin-right: 8px;
                    .back-close {
                        width: 54px;
                        height: 54px;
                    }
                }
            } /* back-wrap -- end */
            .back-wrap-vertical {
                height: 796px;
            }
            /* 厂商2.0 */
            .back-ad-brand,
            .back-ad-stack {
                flex-direction: column;
                align-items: center;
                justify-content: center;
                width: 100%;
                height: 100%;
            }
            .back-ad-brand {
                height: 752px;
                .back-stack-outer {
                    width: 646px;
                    height: 752px;
                    .back-stack-outer-blank {
                        width: 100%;
                        height: 100%;
                    }
                    .back-close-outer {
                        width: 54px;
                        height: 54px;
                        margin-top: 8px;
                        margin-left: 584px;
                    }
                    .back-btn-wrap-outer {
                        width: 260px;
                        height: 90px; 
                        margin-top: 622px;
                        margin-left: 53px;
                        align-items: center;
                        .back-btn-exit {
                            width: 260px;
                            height: 90px;
                            line-height: 90px;
                            color: #817272;
                            font-size: 32px;
                            text-align: center;
                            border-radius: 45px;
                            background-color: #E7E7E7;
                        }
                        .back-btn-exit-small {
                            width: 170px;
                        }
                    }
                    .back-btn-wrap-outer-small {
                        width: 170px;
                    }
                }
            }
            /* 厂商2.0竖版 */
            .back-ad-brand-vertical {
                height: 796px;
                .back-stack-outer {
                    height: 796px;
                    .back-btn-wrap-outer {
                        justify-content: center;
                        width: 100%;
                        height: 80px;
                        margin-top: 604px;
                        margin-left: 0;
                        .back-btn-exit {
                            width: 502px;
                            height: 80px;
                            text-align: center;
                            align-items: center;
                            color: #8E8E98;
                            font-size: 26px;
                            background-color: transparent;
                        }
                    }
                }
            }
            /* 厂商2.0扩展区域 */
            .back-ad-brand-extend {
                height: 100%;
            }
            .back-ad-blank {
                width: 100%;
                height: 100%;
                flex: 1;
            }
        } /* back-container -- end */
    }
    .ad-wrap-flex {
        margin: 0px 20px;
        flex: 1;
        border-radius: 24px;
    }
    .ad-wrap-back {
        width: 100%;
        height: 100%;
        flex: 1;
    }
    .ad-new-wrap {
        width: 100%;
        height: 100%;
        align-items: center;
        justify-content: center;
    }
    .video-mask {
        position: fixed;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 1);
        .video-full {
            width: 100%;
            height: 100%;
            object-fit: fill;
        }
        .video-wrap {
            align-items: center;
            justify-content: center;
            width: 100%;
            height: 100%;  
            .video-block {
                width: 750px;
                height: 422px;      
            } 
        }
        .video-bg {
            width: 750px;
            height: 120px;
        }
        .video-time-wrap {
            position: fixed;
            align-items: center;
            justify-content: center;
            right: 40px;
            top: 110px;
            width: 60px;
            height: 60px;
            .video-time-stack {
                align-items: center;
                justify-content: center;
                width: 60px;
                height: 60px;     
            }
            .video-time-text {
                font-size: 24px;
                font-weight: 400;
                color: #FFFFFF;
                line-height: 60px;
            }
            .video-time-image {
                width: 60px;
                height: 60px;
            }
        }
        .video-award-wrap {
            position: fixed;
            align-items: center;
            justify-content: center;
            left: 116px;
            top: 110px;
            width: 202px;
            height: 60px;
            .video-award-stack {
                align-items: center;
                justify-content: center;
                width: 202px;
                height: 60px;
            }
            .video-award-image {
                width: 202px;
                height: 60px;  
            }
            .video-award-text {
                font-size: 24px;
                color: #FFFFFF;
                line-height: 60px;
            }
        }
        .video-close-wrap {
            position: fixed;
            align-items: center;
            justify-content: center;
            left: 40px;
            top: 110px;
            width: 278px;
            height: 60px;
            .video-close-stack {
                align-items: center;
                justify-content: center;
                width: 278px;
                height: 60px;       
            }
            .video-close-image {
                width: 278px;
                height: 60px;         
            }
            .video-close-text {
                font-size: 24px;
                color: #FFFFFF;
                line-height: 60px;
            }
        }
        .video-close {
            position: fixed;
            left: 40px;
            top: 110px;
            width: 60px;
            height: 60px;
        }
        .video-audio-open, .video-audio-close {
            position: fixed;
            right: 130px;
            top: 110px;
            width: 60px;
            height: 60px;
        }
        .video-box {
            position: fixed;
            left: 40px;
            bottom: 40px;  
            width: 670px;
            height: 160px;
            background-color: rgba(255,255,255,.9);
            border-radius: 24px;
            .video-box-stack {
                align-items: flex-end;
                justify-content: flex-end;  
                width: 670px;
                height: 160px; 
            }
            .video-box-info {
                align-items: center;
                padding: 24px;
                width: 670px;
                height: 160px;
            }
            .video-ad-img {
                width: 112px;
                height: 112px;
                border-radius: 20px;
                margin-right: 16px;
            }
            .video-ad-info {
                flex: 1;
                flex-direction: column;
                .video-ad-title {
                    margin-top: 10px;
                    margin-bottom: 8px;
                    height: 45px;
                    font-size: 32px;
                    font-weight: bold;
                    color: #333333;
                    line-height: 45px;
                    lines: 1;
                    text-overflow: ellipsis;
                }
                .video-ad-desc {
                    height: 40px;
                    font-size: 28px;
                    color: #666666;
                    line-height: 40px;
                    lines: 1;
                    text-overflow: ellipsis;
                }
            }
            .video-ad-btn {
                margin-left: 24px;
                width: 150px;
                height: 64px;
                background-color: #FF5F3E;
                border-radius: 32px;
                font-size: 28px;
                color: #FFFFFF;
                line-height: 64px;
                text-align: center;
            }
            .video-box-ad-wrap {
                height: 25px;
                margin-right: 24px;
                margin-bottom: 8px;
                justify-content: center;
            }
            .video-box-ad-icon {
                height: 25px;
            }
            .video-box-ad-text {
                height: 25px;
            }
        }
        .video-box-animation {
            animation-name: boxFadeIn;
            animation-duration: 2000ms;
            animation-timing-function: ease-out;
        }
    }
    .video-ad-mask {
        position: fixed;
        width: 100%;
        height: 100%;
        align-items: center;
        justify-content: center;
        background-color: #000000;
        .video-ad-stack {
            width: 100%;
            height: 100%; 
            align-items: center;
            justify-content: center;
        }
        .video-ad-bg {
            width: 750px;
        }
        .video-ad-info {
            width: 100%;
            height: 100%;
            padding: 0px 56px;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: rgba(0, 0, 0, .7);
            .video-ad-img {
                margin-bottom: 32px;
                width: 152px;
                height: 152px;
                border-radius: 20px;
                background-color: rgba(242,242,242,1);
            }
            .video-ad-title {
                margin-bottom: 8px;
                height: 56px;
                font-size: 40px;
                font-weight: bold;
                color: #FFFFFF;
                line-height: 56px;
                text-align: center;
                lines: 1;
                text-overflow: ellipsis;
            }
            .video-ad-desc {
                margin-bottom: 40px;
                height: 90px;
                font-size: 28px;
                color: #CCCCCC;
                line-height: 45px;
                text-align: center;
                lines: 2;
                text-overflow: ellipsis;
            }
            .video-ad-rating-wrap {
                margin-bottom: 56px;
                height: 60px;
            }
            .video-ad-rating {
                width: 300px;
            }
            .video-ad-btn-wrap {
                width: 420px;
                height: 106px;
                border-radius: 53px;
                justify-content: center;
                align-items: center;
                .video-ad-btn {
                    font-size: 36px;
                    color: #FFFFFF;
                    line-height: 106px;
                    width: 420px;
                    height: 106px;
                    border-radius: 53px;
                    background-color: rgba(249,112,83,1);
                    text-align: center;
                }
                .video-ad-btn-animation {
                    animation-name: videoBtn;
                    animation-duration: 1000ms;
                    animation-timing-function: linear;
                    animation-iteration-count: infinite;
                }
            }
        }
        .video-ad-close {
            position: fixed;
            left: 40px;
            top: 110px;
            width: 60px;
            height: 60px;
        }
    }
    .click-open-wrap {
        position: fixed;
        left: 40px;
        bottom: 240px;
        width: 670px;
        height: 120px;
        background-color: rgba(0, 0, 0, .6);
        border-radius: 60px;
        align-items: center;
        justify-content: center;
        .click-open-text {
            text-align: center;
            font-size: 32px;
            color: #FFFFFF;
            line-height: 120px;
        }
    }
    .click-open-brand-wrap {
        height: 100px;
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 60px;
        align-items: center;
        justify-content: center;
        align-self: center;
        margin-bottom: 48px;
        width: 484px;
        .click-open-text {
            text-align: right;
            font-size: 32px;
            color: #FFFFFF;
            line-height: 120px;
        }
    }
    .shake-brand-wrap{
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;
        margin-bottom: 20px;
        width: 100%;
        .shake-image-wrap{
            width:128px;
            height:128px;
            justify-content:center;
            border-radius: 64px;
            align-items:center;
            background-color:rgba(0, 0, 0, 0.3);
            margin-bottom:16px;
            .shake-image {
                animation-name: shake;
                animation-duration: 1000ms;
                animation-timing-function: linear;
                animation-iteration-count: infinite;
                margin-bottom: 16px;
                width: 94px;
                height: 90px;
            }   
        }
        .shake-go-page{
            height: 33px;
            line-height: 33px;
            font-size: 24px;
            color: rgba(51, 51, 51, 1);
        }
        .shake-text {
            text-align: center;
            height: 45px;
            font-size: 32px;
            color: rgba(51, 51, 51, 1);
            font-weight: bold;
            line-height: 45px;
            margin-bottom: 4px;
        }
    }
    .shake-wrap {
        position: fixed;
        bottom: 404px;
        left: 0px;
        flex-direction: column;
        align-items: center;
        width: 100%;
        .shake-straight-text{
            text-align: center;
            height: 45px;
            font-size: 32px;
            color: #FFFFFF;
            line-height: 45px;
        }
        .shake-text-wrap {
            flex-direction: column;
            align-items: center;
            justify-content: center;
            width: 482px;
            height: 130px;
            border-radius: 65px;
            background-color: rgba(0, 0, 0, 0.6);
            text {
                text-align: center;
                height: 45px;
                font-size: 32px;
                color: #fff;
                font-weight: bold;
                line-height: 45px;
                margin-bottom: 4px;
            }
            .shake-go-page {
                height: 33px;
                line-height: 33px;
                margin-top: 4px;
                font-size: 24px;
            }
        }
    }
    .shake-image {
        animation-name: shake;
        animation-duration: 1000ms;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
        margin-bottom: 16px;
        width: 94px;
        height: 90px;    
    }
    .click-pop-wrap {
        position: fixed;
        top: 0px;
        left: 0px;
        width: 750px;
        flex: 1;
        height: 100%;
        flex-direction: column;
        align-items: flex-end;
        justify-content: center;
        background-color: rgba(0, 0, 0, .6);
        .click-pop-close {
            margin-right: 106px;
            margin-bottom: 24px;
            width: 54px;
            height: 54px;
            object-fit: fill;
        }
        .click-pop-box {
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin-right: 106px;
            width: 538px;
            background-color: #FFFFFF;
            border-radius: 8px;
            .click-pop-content {
                margin-top: 108px;
                margin-bottom: 96px;
                width: 445px;
                font-size: 34px;
                font-weight: 400;
                color: #444444;
                line-height: 48px;
            }
            .click-pop-btn {
                width: 490px;
                height: 88px;
                margin-bottom: 40px;
                justify-content: space-around;
                .click-pop-cancel {
                    width: 236px;
                    height: 88px;
                    background-color: #F2F2F2;
                    border-radius: 8px;
                    text-align: center;
                    line-height: 88px;
                    font-size: 32px;
                    font-weight: 500;
                    color: #888888;
                }
                .click-pop-confirm {
                    width: 236px;
                    height: 88px;
                    background-color: #FB761F;
                    border-radius: 8px;
                    text-align: center;
                    line-height: 88px;
                    font-size: 32px;
                    font-weight: 500;
                    color: #FFFFFF;
                }
            }
        }
    }
    .download-pop-wrap {
        position: fixed;
        top: 0px;
        left: 0px;
        width: 750px;
        flex: 1;
        height: 100%;
        flex-direction: column;
        align-items: flex-end;
        justify-content: center;
        background-color: rgba(0, 0, 0, .6);
        .download-pop-close {
            margin-right: 106px;
            margin-bottom: 24px;
            width: 54px;
            height: 54px;
            object-fit: fill;
        }
        .download-pop-box {
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin-right: 106px;
            width: 538px;
            background-color: #FFFFFF;
            border-radius: 8px;
            padding: 0px 32px;
            .download-pop-title {
                margin-top: 40px;
                margin-bottom: 40px;
                height: 50px;
                font-size: 36px;
                font-weight: 500;
                color: #444444;
                line-height: 50px;
            }
            .download-pop-item {
                margin-bottom: 24px;
                width: 100%;
                /* height: 37px; */
                align-items: center;
                justify-content: space-between;
                .download-pop-item-title {
                    flex-shrink: 0;
                    margin-right: 24px;
                    height: 37px;
                    font-size: 26px;
                    color: #888888;
                    line-height: 37px;
                }
                .download-pop-item-content {
                    /* height: 37px; */
                    font-size: 26px;
                    font-weight: 500;
                    color: #444444;
                    line-height: 37px;
                    /* lines: 1;
                    text-overflow: ellipsis; */
                }
                .download-pop-arrow {
                    width: 26px;
                    height: 12px;
                    object-fit: fill;
                }
                .download-pop-arrow-default {
                    transform: rotate(0deg);
                }
                .download-pop-arrow-turn {
                    transform: rotate(180deg);
                }
            }
            .download-pop-web {
                width: 474px;
                height: 266px;
                border: 1px solid #C7C7C7;
                background-color: #ffffff;
            }
            .download-pop-confirm {
                margin-top: 40px;
                margin-bottom: 16px;
                width: 454px;
                height: 88px;
                background-color: #FB761F;
                border-radius: 8px;
                font-size: 32px;
                font-weight: 500;
                color: #FFFFFF;
                line-height: 88px;
                text-align: center;
            }
            .download-pop-cancle {
                margin-bottom: 40px;
                height: 37px;
                font-size: 26px;
                font-weight: 400;
                color: #888888;
                line-height: 37px;  
            }
        }
    }
    .ad-message-close-wrap {
        align-self: flex-start;
        width: 100%;
        height: 40px;
        align-items: center;
        justify-content: flex-end;
    }
    .ad-message-close-wrap-extra {
        margin-left: 540px;
        width: 40px;
        height: 40px;
    }
    .ad-message-close {
        align-self: flex-start;
        width: 40px;
        height: 40px;
        object-fit: fill;   
    }
    .ad-message-close-banner{
        margin-left:204px;
        margin-bottom:95px;
        width: 40px;
        height: 40px;
        object-fit: fill;
    }
    .wall-ad {
        width: 718px;
    }
    .wall-ad-one-style {
        height: 529px;
    }
    .wall-ad-two-style {
        height: 214px;
    }
    .wall-ad-three-style {
        height: 272px; 
    }
    /* 激励墙样式 */
    .wall-ad-stack{
        width: 100%;
        height: 100%;
        .wall-ad-blank{
            width: 100%;
            height: 100%;
        }
    }
    .wall-ad-wrap {
        width: 100%;
        border-bottom-width: 1px;
        border-style: solid;
        border-bottom-color: rgba(0,0,0,0.07);
        .ad-item {
            flex-direction: column;
            width: 100%;
            margin-top: 32px;
            padding-bottom: 32px;
            .img-box {
                justify-content: flex-end;
                align-items: flex-end;
                .img-brand-new {
                    width: 690px;
                    border-radius: 8px;
                }
                .img-brand {
                    width: 100%;
                    height: 395px;
                    border-radius: 8px;
                }
                .img {
                    width: 100%;
                    border-radius: 8px;
                }
                .ad-logo-box {
                    align-items: center;
                    margin-right: 6px;
                    margin-bottom: 6px;
                    .ad-logo {
                        height: 22px;
                    }
                    .ad-text {
                        height: 22px;
                    }
                    .color-night-extra {
                        color: #ccc;
                    }
                }
            }
            .title-box {
                align-items: center;
                justify-content: space-between;
                width: 100%;
                margin-top: 16px;
                .title {
                    flex-shrink: 1;
                    lines: 1;
                    text-overflow: ellipsis;
                    color: #000;
                    font-size: 32px;
                }
                .btn-box {
                    flex-shrink: 0;
                    align-items: center;
                    height: 48px;
                    margin-left: 13px;
                    padding: 0 14px;
                    color: #EE6506;
                    font-size: 24px;
                    lines: 1;
                    border-radius: 8px;
                    border: 1px solid #EE6506;
                    background-color: transparent;
                }
            }
            .left-img-box {
                flex-shrink: 0;
                width: 224px;
                height: 150px;
                margin-right: 13px;
                .img-brand {
                    height: 150px;
                }
                .img {
                    height: 100%;
                }
            }
            .right-title-box {
                flex-direction: column;
                align-items: flex-end;
                justify-content: space-between;
                flex-grow: 1;
                height: 100%;
                margin-top: 0;
                .title {
                    width: 100%;
                    line-height: 48px;
                    lines: 2;
                    text-overflow: ellipsis;
                    text-align: left;
                }
                .color-night-extra {
                    color: #ccc;
                }
                .btn-box {
                    margin-left: 0;
                }
            }
        }
        .top-img-bottom-title {
            .img-box {
                .img {
                    height: 395px;
                }
            }
        }
        .left-img-right-word {
            flex-direction: row;
            align-items: center;
        }
        .left-word-right-img {
            flex-direction: row-reverse;
            .img-box {
                margin-left: 13px;
                margin-right: 0;
            }
        }
        .three-img {
            .imgs-box {
                justify-content: space-between;
                width: 100%;
                .img-box {
                    width: 224px;
                    height: 150px;
                    .img-brand {
                        height: 150px;
                    }
                    .img {
                        height: 100%;
                    }
                }
            }
        }
    }
    .night-wall-ad-wrap {
        border-bottom-color: rgba(255, 255, 255, 0.14);
        .ad-item {
            .title-box {
                .title {
                    color: rgba(255, 255, 255, 0.5);
                }
            }
        }
    }
    .pre-progress{
        position: fixed;
        width: 100%;
        height: 100%;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, .7);
        .pre-progress-con{
            width: 90px;
            height: 90px;
            color: #87ceeb;
        }
    }
    .no-ad-close {
        align-self: flex-start;
        width: 102px;
        height: 32px;
    }
    .no-ad-close-banner{
        margin-left:142px;
        margin-bottom:103px;
        width: 102px;
        height: 32px;
    }
    .no-ad-close-normal {
        width: 102px;
        height: 32px;
    }
    .no-ad-close-end {
        align-self: flex-end;
    }
    .pre-container {
        flex-direction: column;
        width: 100%;
        height: 100%;
        flex: 1;
        justify-content: flex-end;
        align-items: center;
        .pre-box-container {
            height: 696px;
        }
        .pre-box-container-pro {
            height: 781px;
        }
        .pre-block {
            width: 100%;
            height: 100%;
            flex: 1;
        }
        .pre-tip-title {
            margin-bottom: 24px;
            width: 654px;
            height: 40px;
            font-size: 40px;
            font-weight: bold;
            text-align: center;
            line-height: 40px;
            lines: 1;
            text-overflow: ellipsis;
        }
        .pre-tip-title-pro {
            height: 80px;
            font-size: 48px;
            line-height: 80px;
        }
        .pre-tip-desc {
            margin-bottom: 42px;
            width: 654px;
            font-size: 30px;
            height: 108px;
            line-height: 36px;
            lines: 4;
            text-overflow: ellipsis;
        }
        .pre-tip-desc-pro {
            height: 208px;
            font-size: 40px;
            line-height: 52px;
        }
    }
    .insert-container {
        flex-direction: column;
        width: 100%;
        height: 100%;
        flex: 1;
        align-items: center;
        justify-content: center;
    }
    .ad-button-optimize-container {
        position: absolute;
        .ad-button-list {
            flex-direction: column;
            width: 100%;
            height: 100%;
        }
        .ad-close-btn {
            width: 100%;
            height: 100%;
        }
    }
    .ad-button-optimize-container-fixed {
        position: fixed;
    }

    .ad-full-screen-cover {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
    }
    .ad-full-screen-cover-hide {
        height: 0;
    }
</style>
<script>
    import router from '@system.router'
    import fetch from '@system.fetch'
    import network from '@system.network'
    import prompt from '@system.prompt'
    import pkg from '@system.package'
    import request from '@system.request'
    import storage from '@system.storage'
    import app from '@system.app'
    import device from '@system.device'
    import sensor from '@system.sensor'
    import common from '../Common/js/common.js';
    
    const AD_TOKEN = 'ut22402g'                             // 广告APP标识
    const AD_URL = 'https://ad-union.ssread.cn/api/ad'      // 广告请求地址
    const SCENE_ENUM = {                                    // 广告缓存场景值枚举
        openMessage: 2,                                     // 冷热启动开屏
        readOpen: 2,                                        // 阅读页开屏
        readPre: 3,                                         // 章首
        readTop: 4,                                         // 阅读页顶部
        readMiddle: 5,                                      // 阅读页中部
        readBanner: 6,                                      // 阅读页底部
        readInsert: 7,                                      // 阅读页插页
        readBack: 8,                                        // 阅读页退出
        rewardMessage: 9,                                   // 阅读奖励信息流
        infoMessage: 10,                                    // 任务提示信息流
        adWallLocal: 11,                                    // 激励墙
        popMessage: 12,                                     // 首页弹窗
        indexBack: 13,                                      // 首页退出
    }
    const CLICK_TYPE_AD = {                                 // 广告上报点击类型对应的值
        isReal: 0,
        isTouch: 1,
        isClose: 2,
        isExtendArea: 3,
        isShake: 4,
        isAddBtn: 5,
        isAutoClick: 6,
        isAdButton: 7,
        isExitButton: 8,
        isFullScreenCover: 9,
    }
    let pageName = '';                                      // $page页面对象的name属性
    
    export default {
        props: {
            // 应用token
            adToken: {
                type: String,
                required: false,
                default: ''
            },
            // 广告ID
            adUnitId: {
                type: String,
                required: false,
                default: ''
            },
            // 广告IDS
            adUnitIds: {
                type: Array,
                required: false,
            },
            // 广告类型 message/banner/tip/video/open/pop/reward
            adType: {
                type: String,
                required: true,
            },
            // 广告别名 readTop/readMiddle/readBanner/readVideo/readOpen/signVideo/taskVideo/infoVideo/infoMessage/popMessage/openMessage/webVideo/webMessage/rewardMessage/insertVideo/readAwardVideo/preVideo/preNextVideo
            adAlias: {
                type: String,
                required: false,
                default: ''
            },
            // 视频展示
            videoShow: {
                type: Boolean,
                required: false,
                default: false
            },
            // 视频尾帧展示
            videoAdShow: {
                type: Boolean,
                required: false,
                default: false
            },
            // 广告样式设置
            adSetup: {
                type: Object,
                required: false,
                default: {}
            },
            // banner广告展示控制
            bannerAdShow: {
                type: Boolean,
                required: false,
                default: true      
            },
            // 书籍id
            bookId: {
                type: String,
                required: false,
                default: ''            
            },
            // 书籍名称
            bookName: {
                type: String,
                required: false,
                default: ''            
            },
            // 章节id
            chapterId: {
                type: String,
                required: false,
                default: ''            
            },
            // 章节名称
            chapterName: {
                type: String,
                required: false,
                default: ''            
            },
            // 章节序号
            chapterIndex: {
                type: String | Number,
                required: false,
                default: ''            
            },
            // 初始化视频绑定事件
            adInitFunction: {
                type: String,
                required: false,
                default: ''            
            },
            // 关闭视频绑定事件
            videoCloseFunction: {
                type: String,
                required: false,
                default: ''            
            },
            // 关闭广告绑定事件
            adCloseFunction: {
                type: String,
                required: false,
                default: ''            
            },
            // 是否热启动
            isWarm: {
                type: String,
                required: false,
                default: 'normal'        
            },
            // 其他信息
            otherInfo: {
                type: Object | String | Boolean,
                required: false,
            },
            // 无请求模式
            isLocalInfo: {
                type: Boolean,
                required: false,    
                default: false
            },
            // 缓存模式
            isCacheInfo: {
                type: Boolean,
                required: false,
                default: false
            },
            // 广告墙信息
            adWallInfo: {
                type: Object,
                required: false
            },
            // 广告序列
            adIndex: {
                type: String | Number,
                required: false
            },
            // 开屏来源页面
            fromPage: {
                type: String,
                required: false,
                default: '/Index'
            },
            // 广告加载时间
            requestTime: {
                type: String | Number,
                required: false,
                default: 0 
            },
            // 广告高度
            adHeight: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 底部广告是否按时间加载
            isRepeat: {
                type: Boolean,
                required: false,
                default: false
            },
            // 底部广告展示间隔
            repeatTime: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 底部广告预加载时间
            preTime: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 曝光展示次数
            showTimes: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 广告墙id
            adWallToken: {
                type: String,
                required: false,
                default: 'hmxswall01'
            },
            // 预加载页数
            preNum: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 退出广告是否加载
            backLoading: {
                type: Boolean,
                required: false,
                default: false
            },
            // 阅读时长
            readTimes: {
                type: String | Number,
                required: false,
                default: 0
            },
            // 免广告开关
            noAdVipSwitch: {
                type: Boolean,
                required: false,
                default: false 
            },
            // 支持新版厂商广告开关
            brandAdSwitch: {
                type: Boolean,
                required: false,
                default: false 
            },
            // 开屏渲染为弹窗形式
            isNewOpenStyle: {
                type: Boolean,
                required: false,
                default: false    
            },
            // 开屏关闭按钮展示
            hasShowTime: {
                type: Boolean,
                required: false,
                default: false
            },
            // 一键加桌组件支持
            cutSupport: {
                type: Object,
                required: false,
            },
            // 加桌配置
            adShortcutConfig: {
                type: Object,
                required: false,
            },
            // 是否加桌
            isShortcut: {
                type: Boolean,
                required: false,
                default: true
            },
            // 是否系统开屏样式
            isSystemOpenStyle: {
                type: Boolean,
                required: false,
                default: false
            },
            // 是否双开屏
            isDoubleOpen: {
                type: Boolean,
                required: false,
                default: false
            },
            exitApp: {
                type: Boolean,
                required: false,
                default: false
            },
            // 开屏跳过时间（百度SDK）
            skipTime: {
                type: Number,
                required: false,
                default: 5
            },
            // 当前页页码
            currentPage: {
                type: Number,
                required: false,
                default: -1   
            },
            // 广告页页码
            adPage: {
                type: Number,
                required: false,
                default: -1   
            },
            // 开屏展示
            isOpenShow: {
                type: Boolean,
                required: false,
                default: false
            },
            // 底部广告轮播开关
            bannerAdRepeatSwitch: {
                type: Boolean,
                required: false,
                default: false
            },
            // 开屏跳过时间 (2.0)
            countTime: {
                type: Number | String,
                required: false,
                default: 5
            },
            // 按钮是否纵向排列
            isVerticalButton: {
                type: Boolean,
                required: false,
                default: false
            },
            isAdShow: {
                type: Boolean,
                required: false,
                default: true
            }
        },
        data () {
            return {
                adRequestToken: AD_TOKEN, // token
                adRequestUrl: AD_URL, // 请求地址
                adRequestData: {}, // 请求信息
                appName: '', // 应用名称
                imei: '', // 设备imei
                oaid: '', // 设备oaid
                networkType: '', // 网络状态
                deviceInfo: {}, // 设备信息
                androidId: '', // androidid
                isHasDeviceInfo: false,
                isHasAndroidId: false,
                isSupportBrandAd: false, // 是否支持厂商广告
                serviceAdBrand: '', // 厂商品牌
                serviceAdToken: '', // 厂商广告token
                isVideoLoading: false, // 广告请求中
                sid: '', // 广告唯一请求标识
                adsCacheInfo: [], // 原始信息
                currentAdInfo: {}, // 当前广告信息
                canShowAd: false, // 是否获取到广告
                videoTotalTime: 0, // 视频总时长
                videoTime: 0, // 视频倒计时
                videoCloseTime: -1, // 视频关闭倒计时
                isVideoMuted: true, // 视频音量
                videoTimeout: null, // 视频播放倒计时
                isClick: false, // 防止多次点击
                clickX: 0, // 点击坐标clientX
                clickY: 0, // 点击坐标clientY
                isDownloadApp: false, // 是否在下载中
                downloadLink: '', // 下载的地址
                clickId: '', // 上报的点击id
                needSetTimes: false, // 激励视频时间记录
                isEnded: 'false', // 视频是否给奖励
                needReportDeeplink: false, // 是否需要上报deeplink
                deeplinkReportTimeout: null, // deeplink上报开关
                isBrandAd: false, // 是否是厂商广告
                serviceAd: null, // 广告实例
                isLoadComplete: false, // 厂商广告是否加载
                adStartTime: 0, // 广告开始时间
                adEndTime: 0, // 广告结束时间
                adLength: 0, // 广告长度
                adLoadOrder: '', // 广告加载排序
                isOpenClick: false, // 防止开屏多次点击
                isExtraClose: false, // 额外关闭
                extraCloseTimeout: null, // 关闭展示倒计时
                isExtraShow: true, // 额外展示开关
                hasFakeClick: false, // 播放结束误点击
                isClickShow: false, // 跳转拦截
                isDownloadShow: false, // 下载拦截
                isWebShow: false, // 是否显示协议
                isAppShow: false, // 是否显示权限
                isPreClose: false, // 提前关闭
                needClickShow: false, // 是否需要再次确认
                isOpenFloat: false, // 开屏再次确认
                chnType: '', // 广告源类型
                SDK_BAIDU: {
                    canLoad: false, // 是否可以加载
                    isError: false, // 是否错误
                    isLoaded: false, // 是否加载成功
                    isClosed: false, // 是否已经关闭
                    isClicking: false, // 是否正在点击
                    feedStyle: { // 信息流自定义样式
                        containerStyle: {
                            backgroundColor: 'rgba(255,255,255,0.3)',
                        },
                        titleStyle: {
                            color: '#444'
                        },
                        descStyle: {
                            color: '#444'
                        },
                        brandStyle: {
                            color: '#444'
                        },
                        buttonStyle: {
                            color: '#fff',
                            borderColor: '#f97053',
                            backgroundColor: '#f97053'
                        },
                        downloadStyle: {
                            backgroundColor: 'rgba(255,255,255,0.3)',
                            color: '#444'
                        },
                        downloadTextStyle: {
                            color: '#444'
                        },
                        downloadButtonStyle: {
                            color: '#fff',
                            borderColor: '#f97053',
                            backgroundColor: '#f97053'
                        }
                    },
                    downloadPanel: false, // 是否启用下载面板弹窗
                },
                nightColor: 'rgba(29,29,31,1)', // 夜间模式背景色
                adStyle: { // 广告样式
                    bgColor: 'transparent',
                    textColor: '#444'
                },
                currentPlayTime: 0, // 当前播放时间
                offsetX: 0, // 距离元素X坐标
                offsetY: 0, // 距离元素Y坐标
                leaveClickX: 0, // 离开点击X坐标
                leaveClickY: 0, // 离开点击Y坐标
                leaveOffsetX: 0, // 离开元素X坐标
                leaveOffsetY: 0, // 离开元素Y坐标
                adTimeoutTimer: null, // 广告超时定时器
                hasCloseClick: false, // 是否点击误点击
                hasTouchClick: false, //  是否触碰误点击
                hasClick: false, // 是否有过点击
                isPreLoad: false, // 是否为预加载
                isPreLoading: false, // 是否正在预加载广告请求
                hasShowReport: false, // 是否上报过曝光
                canVideoPreShow: true, // 视频加载显示
                isNeedRefresh: false, // 是否需要刷新
                isSupportNewBrandAd: false, // 是否支持新版厂商组件
                isNewBrandAdError: false, // 新版厂商组件加载错误
                isSupportShake: false, // 支持摇一摇功能
                isFirstRecordShake: true, // 首次记录加速度
                isShakeShow: false, // 摇一摇展示
                hasShakeClick: false, // 摇一摇模拟点击
                hasReportBrandAdShow: false, // 厂商上报曝光
                speedX: 0, // X加速度
                speedY: 0, // Y加速度
                speedZ: 0, // Z加速度
                positionLimit: {
                    open: {
                        x: {
                            min: 40,
                            max: 710,
                        },
                        y: {
                            min: 1060,
                            max: 1180,
                        }
                    } 
                },
                adHasClick: false, // 广告是否点击过
                brandAdVersion: 1, // 厂商广告版本
                uaInfo: false, // UA信息替换
                currentAdIndex: -1, // 当前广告的索引
                feedAd: {}, // 组件所有厂商信息流广告实例
                isExit: false, // 是否点击退出
                isShowClickBlock: false,  //是否展示关闭按钮误触区域
                hasShortcut: false, // 是否已加桌
                isSupportInsertEyeAd: false, // 引擎是否支持点睛插屏广告
                isInsertEyeAd: false, // 点睛插屏
                clickType: {
                    isClose: false,                                             // 是否关闭误触
                    isTouch: false,                                             // 是否滑动误触
                    isExtendArea: false,                                        // 扩展区域误触
                    isReal: false,                                              // 是否真实点击
                    isShake: false,                                             // 是否摇一摇
                    isAddBtn: false,                                            // 是否加桌误点击
                    isBtnClick: false,                                          // 是否按钮点击
                    isAdButton: false,                                          // 是否ad-button组件触发的点击（华为）
                    isExitButton: false,                                        // 是否退出按钮误点击
                    isAutoClick: false,                                         // 自动触发
                    isFullScreenCover: false,                                   // 是否全屏覆盖
                    clickCount: 0,                                              // 点击次数
                    clickType: 'isReal',                                        // 默认点击类型
                    priority: ['isFullScreenCover', 'isAdButton', 'isAutoClick', 'isShake', 'isAddBtn', 'isExitButton', 'isClose', 'isExtendArea', 'isReal', 'isTouch'], // 优先级
                },
                scene: 0,                                                       // 广告缓存场景值
                hasExposureReplace: false,                                      // 是否已经曝光替换
                hasClickReplace: false,                                         // 是否已经点击替换
                replaceAd: null,                                                // 替换后的广告
                isPibbVideoFinish: false,                                       // 章首、插页、底部、退出 4个位置 的 视频是否播放结束
                canVideoFinishReport: true,                                     // 章首、插页、底部、退出 4个位置 的 视频播放结束后 是否能上报
                loadAdStartTime: 0,                                             // 请求时间戳
                brandAdStartTime: 0,                                            // 厂商加载时间戳
                adShowTime: 0,                                                  // 广告展示时间戳
                doubleOpenAdShowTime: 0,
                isSupportAdButton: false,                                       // 是否支持ad-button
                canLoadNewOppoAd: false,                                        // 加载OPPO2.0广告
                adButtonOptimize: {
                    isShowContainer: false,                                     // 是否显示华为按钮点击优化容器
                    isShowCloseBtn: false,                                      // 是否显示华为按钮点击优化容器内的关闭按钮（未开启关闭误触时）
                    adButtonCounts: 0,                                          // 华为按钮点击优化，需要的按钮数
                    containerStyle: {},                                         // 华为按钮点击优化容器样式
                    adButtonStyle: {},                                          // 华为按钮点击优化容器内，每个ad-button的样式
                    closeBtnStyle: {},                                          // 华为按钮点击优化容器内，关闭按钮样式
                },
                adPosition: '',                                                 // 广告位置
                isCancelMisclick: false,                                        // 是否取消误触
                hasReportAdClose: false,                                        // 是否上报过广告关闭
                oppoAdHasClick: false,                                          // oppo2.0广告是否点击
                needRecordPageStartTime: false,
                pageStartTime: 0,
                pageEndTime: 0,
                brandAdBackInfo: '',                                            // 厂商返回数据
                supportApiCache: false,                                         // API缓存支持
                busContext: {},                                                 // busContent参数
                needHandleAds: false,                                           // 是否需要处理广告策略，底部广告点击刷新使用
                isAdRefresh: false,                                             // 是否广告刷新
                adLoadTypeMap: {},                                              // 存储当前广告加载类型（预加载、实时加载、广告刷新），key为loadAdStartTime
                isPageHideTimeout: true,                                        // 页面隐藏是否超时
                pageHasHide: false,                                             // 页面是否发生过隐藏
                requestCount: 0,                                                // 请求次数
                canAutoClick: false,                                            // 满足自动触发条件
                backButtonStyle: {                                              // 退出按钮样式
                    base: {
                        width: '502px',
                        height: '80px',
                        borderRadius: '45px',
                    },
                    top: {
                        color: '#8E8E98',
                        fontSize: '26px',
                        backgroundColor: '#fff',
                    },
                    bottom: {
                        color: '#fff',
                        fontSize: '32px',
                        backgroundColor: '#785AF6',
                    }
                },
                isNoFilling: false,                                             // 是否没有广告填充
                insertWidth: 0,                                                 // 插页宽度计算值
                insertHeight: 0,                                                // 插页高度计算值
                insertCloseTop: 0,                                              // 插页关闭位置
                isVivoClick: false,                                             // swiper内vivo2.0广告点击
                brandAdShowTime: 0,                                             // 厂商广告曝光时间
                isShowAdFullScreenCover: false,                                 // 是否展示广告全屏覆盖
                adFullScreenCoverPosition: {},                                  // 广告全屏覆盖位置
                adFullScreenCover: {},
                isSupportMockClick: false,                                      // 是否支持模拟点击
                isRealClick: false,                                             // 是否是真实点击
                oppoBrandAdPreload: false,                                      // OPPO预加载
                adCount: 1,                                                     // 广告预加载数量
            }
        },
        onInit() {
            pageName = this.$page.name || 'Read';
            this.scene = SCENE_ENUM[this.adAlias] || 0;                         // 广告缓存场景值
            this.adRequestToken = this.adToken && this.adToken != '' ? this.adToken : AD_TOKEN
            // 切换地址
            this.fnChangeAdUrl()
            this.fnGetAdPostion();                                              // 获取广告位置
            // 本地模式判断
            if(this.adType == 'open' && this.isLocalInfo) {
                if(!this.$app.openAdLocalInfo) {
                    return
                }
                this.clickX = this.$app.openAdLocalInfo.clickX
                this.clickY = this.$app.openAdLocalInfo.clickY
                this.offsetX = this.$app.openAdLocalInfo.offsetX
                this.offsetY = this.$app.openAdLocalInfo.offsetY
                this.leaveClickX = this.$app.openAdLocalInfo.leaveClickX
                this.leaveClickY = this.$app.openAdLocalInfo.leaveClickY
                this.leaveOffsetX = this.$app.openAdLocalInfo.leaveOffsetX
                this.leaveOffsetY = this.$app.openAdLocalInfo.leaveOffsetY
                this.currentAdInfo = this.$app.openAdLocalInfo.currentAdInfo
                this.fnAdClick()
                this.$app.openAdLocalInfo = false
                return
            }
            if(this.adType == 'video' && this.isLocalInfo) {
                if(!this.$app.videoAdLocalInfo) {
                    return
                }
                this.clickX = this.$app.videoAdLocalInfo.clickX
                this.clickY = this.$app.videoAdLocalInfo.clickY
                this.offsetX = this.$app.videoAdLocalInfo.offsetX
                this.offsetY = this.$app.videoAdLocalInfo.offsetY
                this.leaveClickX = this.$app.videoAdLocalInfo.leaveClickX
                this.leaveClickY = this.$app.videoAdLocalInfo.leaveClickY
                this.leaveOffsetX = this.$app.videoAdLocalInfo.leaveOffsetX
                this.leaveOffsetY = this.$app.videoAdLocalInfo.leaveOffsetY
                this.currentAdInfo = this.$app.videoAdLocalInfo.currentAdInfo
                this.fnAdClick()
                this.$app.videoAdLocalInfo = false
                return
            }
            this.supportApiCache = this.fnSupportApiCache()
            this.canAutoClick = this.fnSupportAutoClick()
            this.fnSupportShake()
            this.fnGetImei()
            this.fnGetOaid()
            this.fnGetNetworkType()
            this.fnGetAndroidId()
            this.fnGetDeviceInfo()
            let appInfo = app.getInfo();
            this.appName = appInfo.name;
            // 绑定视频初始事件
            if(this.adInitFunction) {
                this.$off(this.adInitFunction)
                this.$on(this.adInitFunction, this.fnAdInit)
            }
            // 绑定视频关闭事件
            if(this.videoCloseFunction) {
                this.$off(this.videoCloseFunction)
                this.$on(this.videoCloseFunction, this.fnCloseVideo)
            }
            // 绑定视频尾帧事件
            if(this.adCloseFunction) {
                this.$off(this.adCloseFunction)
                this.$on(this.adCloseFunction, this.fnCloseVideoAd)
            }
            // 绑定deeplink事件
            this.$off('fnReportDeepLink')
            this.$on('fnReportDeepLink', this.fnReportDeepLink);
            // 额外关闭
            this.$off('closeExtra')
            this.$on('closeExtra', this.fnCloseExtra)
            // 确认点击
            this.$off('confirmClick')
            this.$on('confirmClick', this.fnConfirmClick)
            // 确认下载
            this.$off('confirmDownload')
            this.$on('confirmDownload', this.fnConfirmDownload)
            // 确认关闭
            this.$off('confirmClose')
            this.$on('confirmClose', this.fnConfirmClose)
            // 页面展示状态
            this.$off('pageShowChange')
            this.$on('pageShowChange', this.fnPageShowChanged)
            // 动态计算默认广告样式
            this.computeAdStyle();
            // 动态计算百度广告样式
            this.computeBaiduAdStyle();
            // 监听阅读页主题变化，修改百度SDK广告样式
            this.$watch('adSetup.bNight', 'adSetupChanged');
            this.$watch('adSetup.bgColor', 'adSetupChanged');
            this.$watch('adSetup.memberBg', 'adSetupChanged');
            this.$watch('adSetup.isMember', 'adSetupChanged');
            if(this.adType === 'open') {
                this.$watch('hasShowTime', 'fnClickBlockShowChanged');
                if (this.isDoubleOpen) {
                    this.$off('doubleOpenAdHasShow')
                    this.$on('doubleOpenAdHasShow', this.fnDoubleOpenAdHasShow)
                }
            }
            // 广告墙缓存
            if(this.adType == 'wall' && this.adAlias == 'adWallCache') {
                this.$off('cacheAdWall')
                this.$on('cacheAdWall', this.fnCacheAdWall)   
            }
            if(this.adType == 'banner' && this.bannerAdRepeatSwitch) {
                this.$watch('showTimes', 'fnShowTimesChange');
            }
            if(this.adType === 'banner') {
                this.$watch('bannerAdShow', 'fnBannerAdShowChange');        // 监听底部banner遮挡
                this.$watch('isRepeat', 'fnBannerAdRepeatHandle')
            }
            if(this.adType === 'pre' || this.adType === 'insert') {
                this.$watch('currentPage', 'fnCurrentPageChange')
            }
            if(this.adType === 'pre') {
                this.$watch('isOpenShow', 'fnOpenShowChange');  
                this.fnRecordPageStartTimeHandle();
            }
        },
        onDestroy () {
            // 取消网络监控
            if(network.unsubscribe) {
                network.unsubscribe()
            }
            // 非华为手机广告组件销毁上报广告关闭
            if (!((this.serviceAdBrand === 'huawei' || this.serviceAdBrand === 'honor') && this.adType === 'pop')) {
                this.fnReportAdClose();
            }
            // 销毁厂商广告
            if(this.serviceAd && this.serviceAd.destroy && this.serviceAdBrand !== 'vivo') {
                this.serviceAd.destroy()
            }
            this.serviceAd = null
            // 解除绑定事件
            if(this.adInitFunction) {
                this.$off(this.adInitFunction)
            }
            if(this.videoCloseFunction) {
                this.$off(this.videoCloseFunction)
            }
            if(this.adCloseFunction) {
                this.$off(this.adCloseFunction)
            }
            try {
                sensor && sensor.unsubscribeAccelerometer && sensor.unsubscribeAccelerometer()
            } catch(e) {
                console.log(e)
            }
            if(this.adType === 'video') {
                try {
                    this.$element('video') && this.$element('video').pause()
                } catch(e) {
                    console.log(e)
                }
            }
            if(this.currentAdInfo.isApiVideo || this.currentAdInfo.isVideoStyle) {
                this.fnVideoAdControl('pause')
            }
            
            this.$off('fnReportDeepLink')
            this.$off('closeExtra')
            this.$off('confirmClick')
            this.$off('confirmDownload')
            this.$off('pageShowChange')
            this.$off('doubleOpenAdHasShow')
            clearTimeout(this.bannerAdTimeout)
            clearTimeout(this.bannerAdPreTimeout)
            clearTimeout(this.adTimeoutTimer)
            this.fnDeleteSlotId();                                  // 删除在全局存储的该位置的厂商广告id
            this.fnDestroyVivoInstance()
            this.fnStopListenAccelerometer()
            this.fnCloseAdFullScreenCover();                        // 关闭广告全屏覆盖误触
        },
        fnDestroyVivoInstance() {
            if(this.isSupportNewBrandAd && this.isBrandAd && this.brandAdVersion === 2 && this.isLoadComplete && this.serviceAdBrand === 'vivo') {
                try {
                    const creativeType = this.currentAdInfo.creativeType
                    if(creativeType === 4 || creativeType === 5) {
                        return
                    }
                    const ad = require('@service.ad')
                    if(!ad) {
                        return
                    }
                    const adInstance = ad.createFeedAd && ad.createFeedAd({
                        adUnitId: this.serviceAdToken
                    })
                    if(!adInstance || !adInstance.destroy) {
                        return
                    }
                    const adId = this.currentAdInfo && this.currentAdInfo.adId
                    adInstance.destroy({ adId: adId })
                } catch (e) {}
            }
        },
        // 广告请求环境
        fnChangeAdUrl() {
            try {
                if(this.$app.adRequestUrl && this.$app.adRequestUrl.indexOf('http') > -1) {
                    this.adRequestUrl = this.$app.adRequestUrl
                }
            } catch (err) {
                this.adRequestUrl = 'https://ad-union.ssread.cn/api/ad'
            }
        },
        // 获取广告位宽高
        fnGetAdSize(type) {
            let that = this
            let width = that.deviceInfo.screenWidth
            let height = that.deviceInfo.screenHeight
            if(that.adType === 'banner') {
                height = parseInt(width / 750 * 126)
            }
            if(that.adType === 'message') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 690)
                if(that.adAlias == 'readMiddle') {
                    height = parseInt(width / 690 * 563)
                }else {
                    height = parseInt(width / 690 * 202)
                }
            }
            if(that.adType === 'video' && that.currentAdInfo && that.currentAdInfo.style_type == 50002) {
                height = parseInt(width / 750 * 422)
            }
            if(that.adType === 'pop') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 524)
                height = parseInt(width / 524 * 932)
            }
            if(that.adType === 'tip') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 640)
                height = parseInt(width / 640 * 360)
            }
            if(that.adType === 'reward') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 580)
                height = parseInt(width / 640 * 326)
            }
            if(that.adType === 'back') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 646)
                height = parseInt(width / 646 * 752)
            }
            if(that.adType === 'pre') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 670)
                height = parseInt(width / 646 * 713)
            }
            if(that.adType === 'insert') {
                width = parseInt(that.deviceInfo.screenWidth / 750 * 580)
                height = parseInt(width / 646 * 1040)
            }
            if(type == 'height') {
                return height
            }else {
                return width
            }
        },
        // 监控网络状态
        fnGetNetworkType() {
            let that = this
            network.getType({
                success: function(data) {
                    that.networkType = data.type
                },
            })   
        },
        // 获取Imei
        fnGetImei() {
            let that = this
            if(that.$app.imei) {
                that.imei = that.$app.imei
                return
            }
            storage.get({
                key: 'imei',
                success: function(data) {
                    if(data) {
                        that.imei = data
                        that.$app.imei = data
                    }
                },
            }) 
        },
        // 获取oaid
        fnGetOaid() {
            let that = this
            if(that.$app.isGetOaid) {
                that.oaid = that.$app.oaid
            } else {
                that.$app.$def.getOaid().then(oaid => {
                    that.$app.isGetOaid = true
                    that.$app.oaid = oaid
                    that.oaid = oaid
                }).catch(() => {})
            }            
        },
        // 获取设备信息 
        fnGetDeviceInfo() {
            let that = this
            if(that.$app.isGetDeviceInfo) {
                that.deviceInfo = that.$app.deviceInfo
                that.fnCanUseAd()
            } else {
                that.$app.$def.getDeviceInfo().then(deviceInfo => {
                    that.$app.isGetDeviceInfo = true
                    that.$app.deviceInfo = deviceInfo
                    that.deviceInfo = deviceInfo
                    that.fnCanUseAd()
                }).catch(() => {})
            } 
        },
        // 判断是否支持厂商广告
        fnCanUseAd() {
            if (this.fnGetSupport()) {
                this.isSupportBrandAd = true
                this.fnNewBrandAd()
            } else {
                this.isSupportBrandAd = false
            }
            this.fnGetAdButtonSupport();
            this.fnCanUseInsertEyeAd();
            this.fnSupportMockClick();
            this.isHasDeviceInfo = true
            this.fnNeedInitAd()
        },
        // 获取ad-button支持性
        fnGetAdButtonSupport() {
            let {
                brand,
                platformVersionCode
            } = this.deviceInfo;
            if (['huawei', 'honor'].indexOf(brand.toLowerCase()) > -1 && platformVersionCode >= 1100) {
                this.isSupportAdButton = true;
            }
        },
        // 判断是否支持厂商广告
        fnGetSupport() {
            let brand = this.deviceInfo.brand.toLowerCase()
            let code = this.deviceInfo.platformVersionCode
            this.serviceAdBrand = brand
            this.serviceAdCode = code
            if(this.adType == 'video') {
                if(brand === 'vivo' && code >= 1061) {
                    return true
                }
                if((brand === 'oppo' || brand === 'realme' || brand === 'oneplus') && code >= 1060) {
                    return true
                }
                if((brand === 'huawei' || brand === 'honor') && code >= 1070) {
                    return true
                }
                if (['xiaomi', 'redmi'].indexOf(brand) > -1 && code >= 1070) {
                    return true;
                }
            }
            if(this.fnSupportBrandAd()) {
                if(brand === 'vivo' && code >= 1061) {
                    return true
                }
                if((brand === 'oppo' || brand === 'realme' || brand === 'oneplus') && code >= 1060) {
                    return true
                }
                if((brand === 'huawei' || brand === 'honor') && code >= 1070) {
                    return true
                }
                if (['xiaomi', 'redmi'].indexOf(brand) > -1 && code >= 1070) {
                    return true;
                }
            }
            return false
        },
        // 是否需要初始化广告数据
        fnNeedInitAd() {
            let needLoad = this.adType != 'video' && !(this.adType == 'wall' && this.adAlias == 'adWallCache');
            return needLoad && this.fnAdInit();                                     // 初始化广告数据
        },
        // 获取androidid
        fnGetAndroidId() {
            let that = this
            if(that.$app.isGetAndroidId) {
                that.androidId = that.$app.androidId
                that.isHasAndroidId = true
                that.fnNeedInitAd()
            } else {
                that.$app.$def.getAndroidId().then(androidId => {
                    that.androidId = androidId
                    that.$app.isGetAndroidId = true
                    that.$app.androidId = androidId
                    that.isHasAndroidId = true
                    that.fnNeedInitAd()
                }).catch(() => {})
            } 
        },
        // 广告初始化
        fnAdInit(evt = '') {
            let that = this
            if(!that.adToken && !AD_TOKEN) {
                console.log('-----AdUnion-----adToken-----不存在-----')
                return
            }
            if(!that.adUnitId) {
                console.log('-----AdUnion-----adUnitId-----不存在-----')
                return
            }
            if(!that.isHasDeviceInfo || !that.isHasAndroidId) {
                console.log('-----AdUnion-----fnAdInit-----信息未获取完成-----')
                if(that.adType == 'video' && that.adAlias != 'readVideo') {
                    prompt.showToast({
                        message: '任务视频获取失败，请稍后重试！'
                    })
                }
                return
            }
            console.log('-----AdUnion-----fnAdInit-----' + that.adUnitId + ':' + that.adAlias)
            // 判断是否需要记录激励视频时间
            if(evt && evt.detail && evt.detail.single === 0) {
                that.needSetTimes = true
            }else {
                that.needSetTimes = false
            }
            // 判断是否需要授权
            if(that.adType == 'video' && !that.oaid && !that.imei) {
                device.getDeviceId({
                    success: function(data) {
                        if(data && data.deviceId) {
                            that.imei = data.deviceId
                            that.$app.imei = data.deviceId
                            storage.set({
                                key: 'imei',
                                value: data.deviceId
                            })
                            that.fnSetRequestData()
                            that.fnGetAd(false)
                        } else {
                            that.fnSetRequestData()
                            that.fnGetAd(false)
                        }
                    },
                    fail: function() {
                        that.fnSetRequestData()
                        that.fnGetAd(false)
                    }
                })
                return
            }
            that.fnSetRequestData()
            if(that.adType == 'wall' && that.adAlias == 'adWallLocal') {
                that.fnGetAdWall()
            }else {
                that.fnGetAd(false)
            }
        },
        // 广告墙预加载
        fnCacheAdWall() {
            let that = this
            if(!that.adToken && !AD_TOKEN) {
                console.log('-----AdUnion-----adToken-----不存在-----')
                return
            }
            if(!that.adUnitIds || !that.adUnitIds.length) {
                console.log('-----AdUnion-----adUnitIds-----不存在-----')
                return
            }
            that.fnSetRequestData()
            that.fnGetAdWallCache()
        },
        // 设置请求数据
        fnSetRequestData() {
            let that = this
            let support_chns = []
            if (that.isSupportBrandAd) {
                if(that.serviceAdBrand == 'vivo') {
                    support_chns = ['QAPP_VIVO']
                }
                if(that.serviceAdBrand == 'oppo' || that.serviceAdBrand == 'realme' || that.serviceAdBrand == 'oneplus') {
                    support_chns = ['QAPP_OPPO']
                }
                if(that.serviceAdBrand == 'huawei' || that.serviceAdBrand == 'honor') {
                    support_chns = ['QAPP_HUAWEI']
                }
                if(that.serviceAdBrand == 'xiaomi' || that.serviceAdBrand == 'redmi') {
                    support_chns = ['QAPP_XIAOMI']
                }
            }
            // if(that.$app.isBaiduSDKCreated && (that.imei || that.oaid) && that.fnSupportBaidu() && !that.isNewOpenStyle) {
            //     support_chns.unshift('SDK_BAIDU')
            // }
            let requestData = {
                app_key: that.adRequestToken,
                adslot_width: that.fnGetAdSize('width'),
                adslot_height: that.fnGetAdSize('height'),
                app_version: app.getInfo().versionName,
                app_version_code: app.getInfo().versionCode,
                app_package: that.$app.$data.pname,
                os_type: 'android',
                os_version: that.deviceInfo.osVersionName,
                platform_version: that.deviceInfo.platformVersionCode,
                imei: that.imei,
                android_id: that.androidId,
                oaid: that.oaid ? that.oaid : '',
                connection_type: that.networkType,
                carrier: '',
                screen_width: that.deviceInfo.screenWidth,
                screen_height: that.deviceInfo.screenHeight,
                brand: that.deviceInfo.brand,
                vendor: that.deviceInfo.manufacturer,
                model: that.deviceInfo.model,
                tms: new Date().getTime(),
                // 是否是测试环境
                debug: that.$app.api == 'https://xsmfdq.kkyd.cn' ? false : true,
                protocol_version: '2.0.0',
                user_id: that.$app.headerJson && that.$app.headerJson.userId ? that.$app.headerJson.userId : '',
                gender: that.$app.headerJson && that.$app.headerJson.readPref ? parseInt(that.$app.headerJson.readPref) : 0,
                lang: 'zh-CN',
                book_id: that.bookId ? that.bookId : 0,
                chapter_id: that.chapterId ? that.chapterId : 0,
                allow_qapp_ad: that.isSupportBrandAd ? 1 : 0,
                support_chns,
                channel_source: that.$app.headerJson && that.$app.headerJson.channelCode,
                realtime_channel_source: that.$app.sourceInfo && that.$app.sourceInfo.sourceCid,
            }
            if(that.adType == 'wall' && that.adAlias == 'adWallCache') {
                let arr = [];
                that.adUnitIds.forEach(item => arr.push(item.slot_id));
                requestData.adslot_ids = arr
            } else {
                requestData.adslot_id = that.adUnitId
            }
            that.adRequestData = requestData
            that.busContext = {
                bsver: that.adType !== 'video' && that.isSupportNewBrandAd ? '2' : '1',                // 厂商广告1.0和2.0支持性
                mult_vendor: '1',                                                                      // 是否支持多厂商串行，'1': 支持，'0'：不支持 
            }
        },
        // 初始化广告配置
        fnInitAdParams() {
            // 显示配置
            this.hasReportBrandAdShow = false
            this.canVideoPreShow = true
            this.hasShowReport = false
            this.canShowAd = false
            this.hasCloseClick = false
            this.hasTouchClick = false
            this.currentAdIndex = -1
            this.isNoFilling = false;                                               // 是否无填充
            // this.needSetTimes = false
            this.isClick = false;
            this.adHasClick = false
            this.hasReportAdClose = false;
            // 下载配置
            this.isDownloadApp = false
            this.downloadLink = ''
            this.clickId = ''
            // 视频配置
            this.isEnded = 'false'
            this.videoTotalTime = 0
            this.videoTime = 0
            this.videoCloseTime = -1
            clearTimeout(this.videoTimeout)
            this.randomTime = this.adRequestData.tms
            // 重置点击类型
            this.fnResetClickType();
            // 重置点击次数
            this.clickType.clickCount = 0;
            // 是否已经点击替换
            this.hasClickReplace = false;
            // 是否已经曝光替换
            this.hasExposureReplace = false;
            // 重置替换后的广告
            this.replaceAd = null;
            if(this.adType === 'video') {                
                try {
                    this.$element('video') && this.$element('video').pause()
                } catch(e) {
                    console.log(e)
                }
            }
            // 厂商数据
            this.brandAdBackInfo = ''
            this.fnCloseAdFullScreenCover();                        // 关闭广告全屏覆盖误触
        },
        // 重新设置 currentAdInfo
        fnResetCurrentAdInfo () {
            let currentAdInfo = this.adsCacheInfo[this.currentAdIndex];
            currentAdInfo.ext = currentAdInfo.ext || {};                                                    // 扩展字段
            currentAdInfo.ifcb = currentAdInfo.ifcb || [];                                                  // 误触开关集合
            currentAdInfo.btn_style_types = currentAdInfo.btn_style_types || [];                            // 按钮样式
            if (currentAdInfo.ext.predict_cpm) {
                try {
                    let cpmStr = this.$app.$def._base64.decode(currentAdInfo.ext.predict_cpm);
                    cpmStr = cpmStr.slice(5, -5);
                    currentAdInfo.cpm = Number(this.$app.$def._base64.decode(cpmStr)) || 0;
                } catch(e) {
                    currentAdInfo.cpm = 0;
                }
            }
            if (currentAdInfo.ext.predict_cpc) {
                try {
                    let cpcStr = this.$app.$def._base64.decode(currentAdInfo.ext.predict_cpc);
                    cpcStr = cpcStr.slice(5, -5);
                    currentAdInfo.cpc = Number(this.$app.$def._base64.decode(cpcStr)) || 0;
                } catch(e) {
                    currentAdInfo.cpc = 0;
                }
            }
            if (!currentAdInfo.ext.eo_scenes) {
                currentAdInfo.ext.eo_scenes = [];                                                           // 场景值
            }
            try {
                let eo_scenes = JSON.parse(currentAdInfo.ext.eo_scenes);
                if (Object.prototype.toString.call(eo_scenes).slice(8, -1) !== 'Array') {
                    eo_scenes = [];
                }
                if (eo_scenes.length && eo_scenes.indexOf(this.scene) === -1) {                             // 如果场景值里没有包含本场景，手动添加本场景值到场景值列表中
                    eo_scenes.push(this.scene);
                }
                currentAdInfo.ext.eo_scenes = eo_scenes;
            } catch (err) {
                currentAdInfo.ext.eo_scenes = [];                                                           // 场景值
            }
            currentAdInfo.expires = Date.now() + (parseInt(currentAdInfo.ext.eo_cache_ms) || 1500000);      // 过期时间，默认25分钟后过期
            let images = [];
            (currentAdInfo.images || []).map(item => item.url && images.push(item));                        // 过滤掉没有url的图片（filter可能会有兼容问题）
            /**
             * ifcb: [1, 2, 3]
             * 1: 关闭按钮误触
             * 2：滑动误触
             * 3：底部菜单误触（扩展区域误触）
             * 5: ad-button点击优化（全区域覆盖ad-button）
            */
            currentAdInfo.images                    =   images;
            currentAdInfo.pageName                  =   pageName;
            currentAdInfo.custom_id                 =   Date.now();                                                       // 自定义id，用作广告缓存唯一标识
            currentAdInfo.click_behive              =   currentAdInfo.ifcb.indexOf(1) > -1;                               // 关闭按钮误触
            currentAdInfo.invisible_click_behive    =   currentAdInfo.ifcb.indexOf(2) > -1;                               // 滑动误触
            currentAdInfo.menu_click_behive         =   currentAdInfo.ifcb.indexOf(3) > -1;                               // 底部菜单误触（扩展区域误触）
            currentAdInfo.ad_button_optimize_switch =   currentAdInfo.ifcb.indexOf(5) > -1;                               // 是否华为ad-button点击优化
            currentAdInfo.exit_button_behive        =   currentAdInfo.ifcb.indexOf(6) > -1;                               // 退出按钮误触
            currentAdInfo.isAutoClick               =   currentAdInfo.ifcb.indexOf(7) > -1;                               // 是否自动触发
            currentAdInfo.isFullScreenCover         =   currentAdInfo.ifcb.indexOf(8) > -1;                               // 是否全屏覆盖误触
            currentAdInfo.isBtnBreath               =   currentAdInfo.btn_style_types.indexOf(1) > -1;                    // 呼吸按钮样式开关
            currentAdInfo.isBtnSize                 =   currentAdInfo.btn_style_types.indexOf(2) > -1;
            currentAdInfo.isInsertInduceClick       =   currentAdInfo.btn_style_types.indexOf(3) > -1;                    // 插页诱导点击
            currentAdInfo.isBottomCloseBtn          =   currentAdInfo.btn_style_types.indexOf(4) > -1                     // 是否开屏跳过按钮在底部
            currentAdInfo.isCache                   =   currentAdInfo.ext.eo_reject_cache === '1';                        // 是否开启缓存
            currentAdInfo.isExposureReplace         =   currentAdInfo.ext.eo_imp_replace === '1';                         // 是否开启曝光替换
            currentAdInfo.isClickReplace            =   currentAdInfo.ext.eo_clk_replace === '1';                         // 是否开启点击替换
            currentAdInfo.autoDownloadType          =   currentAdInfo.ext.autodl;                                         // 是否自动下载（0：不自动下载，1：广告全区域自动下载，2：广告按钮区域自动下载）
            currentAdInfo.isApiVideo                =   [10008, 10009].indexOf(currentAdInfo.style_type) > -1;            // 是否是API信息流视频
            currentAdInfo.isVerticalVideo           =   currentAdInfo.style_type === 10009;                               // style_type：10009  API竖版视频     style_type：10008  API横板视频
            currentAdInfo.isVerticalImage           =   currentAdInfo.style_type === 10007;                               // style_type：10007  竖版图片

            if (pageName !== 'Read' || this.adType === 'video') {                                                         // 缓存、曝光替换和点击替换，目前只有阅读页开放；只有信息流开放；
                currentAdInfo.isCache = false;
                currentAdInfo.isExposureReplace = false;
                currentAdInfo.isClickReplace = false;
            }
            
            if (currentAdInfo.isApiVideo || currentAdInfo.isVerticalImage) {                                              // 竖版图片、api信息流横、竖视频 不支持缓存
                currentAdInfo.isCache = false;
            }

            currentAdInfo.btnContent = this.fnGetBtnContent(currentAdInfo.btn_text);

            this.currentAdInfo = Object.assign({}, {
                    title: '',
                    description: '',
                    adtext: '',
                    icon_url: '',
                    interaction_type: '',
                    isIconStyle: false,
                    isVideoStyle: false,
                    isVerticalStyle: false
                }, currentAdInfo
            );
        },
        // 重置广告参数和组件开关
        fnResetAdParams () {
            let currentAdInfo = this.currentAdInfo;
            this.chnType = currentAdInfo.chn_type;                                                          // 广告源类型，联盟为API_XXX；厂商为QAPP_XXX；SDK为SDK_XXX；
            this.serviceAdToken = currentAdInfo.chn_slot_id;                                                // 广告源slot_id
            this.SDK_BAIDU.canLoad = false;
            this.SDK_BAIDU.isError = false;
            this.SDK_BAIDU.isClosed = false;
            this.SDK_BAIDU.isLoaded = false;
            this.canLoadNewOppoAd = false;
            this.isInsertEyeAd = false;
            this.isBrandAd = false;                                                                         // 非厂商
            this.isLoadComplete = false                                                                     // 厂商加载完成
            this.isNewBrandAdError = false                                                                  // 2.0厂商加载错误
            //  开关配置
            this.isExtraClose = false;
            clearTimeout(this.extraCloseTimeout);
            this.isExtraShow = true;
            this.hasFakeClick = false;
            this.isClickShow = false;
            this.isDownloadShow = false;
            this.isWebShow = false;
            this.isAppShow = false;
            this.isPreClose = false;
            this.needClickShow = false;
            this.isOpenFloat = false;
            this.isPibbVideoFinish = false
            this.canVideoFinishReport = true
            this.isCancelMisclick = false;                                                                  // 重置是否取消误触
            this.brandAdVersion = currentAdInfo.ext.bsver === '2' && this.isSupportNewBrandAd ? 2 : 1;      // 厂商广告版本，本地参数和服务端返回参数都支持2.0
            this.uaInfo = currentAdInfo.ext.ua || false;
            if (currentAdInfo.close_btn_timing === 0 || (currentAdInfo.close_btn_timing && currentAdInfo.close_btn_timing > -1)) {
                this.extraCloseTimeout = setTimeout(() => {
                    this.isExtraClose = true;
                }, currentAdInfo.close_btn_timing * 1000);
            }
            if (currentAdInfo.interaction_style && currentAdInfo.interaction_style != 0) {
                this.needClickShow = true;
                if (this.adType == 'open') {
                    switch (currentAdInfo.interaction_style) {
                        case 1:                                             // 1: 弹窗
                            break ;
                        case 2:                                             // 2: 浮层
                            this.needClickShow = false;
                            this.isOpenFloat = true;
                            break ;
                        case 3:                                             // 3: 弹窗 + 浮层
                            this.isOpenFloat = true;
                            break ;
                    }
                }
            }
            if(!this.isDoubleOpen) {
                this.fnAccelerometerSupport(currentAdInfo)
            }
            this.fnResetAdButtonOptimize();                                 // 重置ad-button点击优化参数
        },
        // 设置广告配置
        fnSetAdParams() {
            this.fnResetCurrentAdInfo();                                    // 重新设置 currentAdInfo
            this.fnResetAdParams();                                         // 重置广告参数和开关
        },
        // 请求广告墙(广告位)
        fnGetAdWall() {
            let that = this
            let adSoltId = that.adUnitId
            let adsCacheInfo = []
            let adWallCaches = that.$app.adWallCaches
            if(!adSoltId) {
                return
            }
            if(adWallCaches && adWallCaches.length) {
                for(let i = 0; i < adWallCaches.length; i++) {
                    if(adWallCaches[i].adslot_id == adSoltId) {
                        adsCacheInfo.push(adWallCaches[i])
                        adWallCaches.splice(i, 1)
                        i--
                    }
                }
                if(adsCacheInfo && adsCacheInfo.length) {
                    // 初始化广告配置
                    that.isPreLoad = true 
                    that.fnInitAdParams()
                    that.adsCacheInfo = JSON.parse(JSON.stringify(adsCacheInfo))
                    that.fnChoiceChnAd();
                    return
                }else {
                    that.fnGetAd(false)
                }
            } else {
                that.fnGetAd(false)
            }
        },
        // 百度组件模板id
        templateid () {
            if (this.adType === 'insert') {
                return '3002';
            }
            let templateid = '';
            switch (this.adAlias) {
                case 'readTop':
                    templateid = '3302';
                    break ;
                case 'readBanner':
                    templateid = '3303';
                    break ;
                case 'readMiddle':
                    templateid = '3002';
                    break ;
                default:
                    templateid = '';
            }
            return templateid;
        },
        // 动态计算默认广告样式
        computeAdStyle () {
            let bgColor = this.adSetup.bNight ? this.nightColor : (this.adSetup.isMember ? (this.adSetup.memberBg == 'parchment' ? '#F3E3BE' : '#dfedd6') : this.adSetup.bgColor);
            let textColor = this.adSetup.bNight ? '#ccc' : '#333';
            this.adStyle = {
                bgColor: this.adType !== 'banner' ? 'rgba(255,255,255,.3)' : bgColor,   // 和api样式保持一致
                textColor
            }
        },
        // adSetup props变化时
        adSetupChanged () {
            this.computeAdStyle();                                                      // 动态计算背景颜色
            this.resetBaiduAdStyle();                                                   // 修改百度广告样式，触发重新渲染
        },
        // 动态计算百度SDK广告样式
        computeBaiduAdStyle () {
            if (this.adType === 'open') {                                               // 开屏没有样式修改
                return false;
            }
            let styles = this.SDK_BAIDU.feedStyle;
            let { bgColor, textColor } = this.adStyle;
            if (['insert', 'pre', 'back'].indexOf(this.adType) !== -1) {                // 直接和API广告写一起的位置，不需要设置背景色，容器已经设置了背景色
                bgColor = 'transparent';
            }
            styles.containerStyle.backgroundColor   = styles.downloadStyle.backgroundColor
                                                    = bgColor;
                                                    
            styles.titleStyle.color                 = styles.descStyle.color
                                                    = styles.brandStyle.color
                                                    = styles.downloadStyle.color
                                                    = styles.downloadTextStyle.color
                                                    = textColor;
            if (this.adType === 'message') {
                /*
                styles.imgStyle = {
                    width: this.adAlias == 'readMiddle' ? '100%' : '336px',
                    height: '168px',
                }
                if (this.adAlias === 'readMiddle') {
                    delete styles.imgStyle.height;                                      // 中部是大图，只用设置图片宽度100%，高度自适应
                }
                styles.containerStyle.borderRadius = '6px';
                */
            }
            if (this.adType === 'banner') {                                             // 新版底部样式
                styles.containerStyle.height = '146px';
                /*
                styles.buttonStyle = {
                    ...styles.buttonStyle,
                    width: '168px',
                    height: '64px',
                    fontSize: '30px',
                    borderRadius: '32px'
                }
                styles.imgStyle = {
                    width: '224px',
                    height: '126px',
                    marginRight: '16px'
                }
                styles.titleStyle = {
                    ...styles.titleStyle,
                    height: '42px',
                    lineHeight: '42px',
                    marginBottom: '8px',
                    fontSize: '30px'
                }
                styles.descStyle = {
                    ...styles.descStyle,
                    height: '33px',
                    lineHeight: '33px',
                    fontSize: '24px'
                }
                */
            }
        },
        // 修改百度广告样式，触发重新渲染
        resetBaiduAdStyle () {
            if (['banner', 'message', 'insert'].indexOf(this.adType) > -1 && this.currentAdInfo.chn_type === 'SDK_BAIDU') {
                this.SDK_BAIDU.canLoad = false;
                this.computeBaiduAdStyle();                                             // 重新计算百度SDK广告样式
                setTimeout(() => this.SDK_BAIDU.canLoad = true);
            }
        },
        /**
         * 广告上报
         * @param   {String}    tracker_type    [tracker类型，取对应的trackers]
         * @param   {String}    tracker_name    [上报名称]
         * @param   {String}    chnType         [广告源标识，SDK、QAPP、API]
         * @param   {Object}    currentAdInfo   [广告信息]
        */
        adReport (tracker_type, tracker_name, chnType, currentAdInfo) {
            currentAdInfo = currentAdInfo || this.currentAdInfo;
            if (chnType && chnType !== currentAdInfo.chn_type.split('_')[0]) {          //  如果由于超时或者错误，导致策略往下漏，当前currentAdInfo发生了变化，上一个策略后续的上报不再处理
                return false;
            }
            console.log('---上报了---', tracker_type, chnType, this.adType);
            if (['imp_trackers', 'click_trackers'].indexOf(tracker_type) > -1 && this.adType !== 'wall') {
                this.fnSmReport(tracker_type, currentAdInfo);                           // 数美上报
            }
            let trackers = currentAdInfo[tracker_type];
            trackers && trackers.length && trackers.forEach(item => this.fnReportLog(item, tracker_name));
        },
        /**
         * 广告加载超时处理
         * @param   {Number}    timeout     [超时时间，毫秒]
        */
        fnLoadTimeout (timeout) {
            if (!timeout || timeout < 0) {
                return false;
            }
            clearTimeout(this.adTimeoutTimer);
            this.adTimeoutTimer = setTimeout(() => {
                console.log('---当前广告源超时了---', this.chnType);
                this.fnTimeoutReport();                                                 // 超时上报
                this.fnChoiceChnAd();                                                   // 如果超时未加载到广告，则选择下个广告源
            }, timeout);
        },
        // 超时上报
        fnTimeoutReport () {
            if (this.chnType.split('_')[0] !== 'API') {
                this.shenceLog('PAdLSState', true, 550002, '加载超时');
            }
        },
        // 根据广告源顺序选择广告数据
        fnChoiceChnAd () {
            if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                return false;
            }
            this.currentAdIndex ++;                                                     // 广告列表数据当前索引
            clearTimeout(this.adTimeoutTimer);
            this.fnDeleteSlotId();                                                      // 每层策略处理前，需要删除在全局存储的该位置的厂商广告id
            if (this.currentAdIndex > 0 && this.chnType.indexOf('API_') === -1) {       // 非首层，且当前广告不是API，说明厂商或者百度无填充，需要进行曝光替换查询
                if (this.fnExposureReplaceHandle()) {                                   // 曝光替换处理
                    return false;
                }
            }
            if (this.currentAdIndex >= this.adsCacheInfo.length) {
                if (this.adType === 'banner') {
                    this.fnBannerAdRepeat();
                }
                console.log('---所有广告源均无广告数据返回---', this.adUnitId);
                this.SDK_BAIDU.canLoad = false;                                         // 如果最后一层是百度SDK，超时后，需要销毁百度。防止超时后填充，不进行数据上报，且可能和广告替换样式重叠。（厂商我们自己控制超时后不渲染，因此不存在此问题）
                this.canLoadNewOppoAd = false;
                this.isNoFilling = true;                                                // 是否无填充
                return false;
            }
            this.fnDestroyVivoInstance()                                                // 销毁VIVO2.0实例
            this.fnSetAdParams();
            if (this.chnType.indexOf('API_') === 0) {                                   // 当前层广告如果是API，需要曝光替换处理。有则进行曝光替换，无则展示当前层的API广告
                if (this.fnExposureReplaceHandle()) {                                   // 曝光替换处理
                    return false;
                }
            }
            this.fnLoadTimeout(this.currentAdInfo.timeout);                             // 超时处理
            switch (this.adType) {
                case 'video':
                    this.fnVideoAdHandle();                                             // 激励视频处理
                    break;
                default:
                    this.fnFeedAdHandle();                                              // 信息流处理
            }
        },
        // 信息流处理
        fnFeedAdHandle () {
            if (['banner'].indexOf(this.adType) > -1 && (this.chnType.split('_')[0] !== 'QAPP' || this.chnType.split('_')[0] === 'QAPP' && !this.fnIsBanner())) {
                this.fnHideBannerAd();                                                  // 当前广告源不是厂商，或者是厂商，但是不是banner广告时，需要隐藏掉之前创建的banner广告
            }
            switch (this.chnType.split('_')[0]) {
                case 'QAPP':
                    this.fnBrandFeedHandle();                                           // 处理厂商广告数据
                    break ;
                case 'API':
                    this.fnApiFeedHandle();                                             // 处理api广告数据
                    break ;
                case 'SDK':
                    if (this.chnType === 'SDK_BAIDU') {
                        this.fnBaiduSDKHandle();                                        // 处理百度SDK广告数据
                    }
                    break ;
                default :
                    this.fnChoiceChnAd();                                               // 下层广告策略处理
                    break ;
            }
        },
        // 厂商信息流处理
        fnBrandFeedHandle () {
            let currentAdIndex = this.currentAdIndex,                                   // 当前策略的索引
                currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_type, chn_slot_id } = currentAdInfo;
            if (!this.isSupportBrandAd || !chn_slot_id) {
                this.fnChoiceChnAd();                                                   // 处理下层广告策略
                return false;
            }
            this.isBrandAd = true;
            if (this.fnIsBanner()) {
                this.fnInitBannerAd(currentAdIndex);                                    // 初始化厂商banner广告
                return false;
            }
            if(this.fnIsInsertEyeAd()) {
                if(!this.isSupportInsertEyeAd || chn_type !== 'QAPP_VIVO' || this.$app.hasInsertEyeAdShow) {
                    this.fnChoiceChnAd()
                    return false;
                }
                this.isInsertEyeAd = true
                this.fnInitInsertEyeAd(currentAdIndex)
                return false
            }
            if (this.brandAdVersion === 2 && chn_type === 'QAPP_VIVO' ) {                                            // 厂商2.0 vivo
                this.fnInitNewBrandAd(currentAdIndex);
                return false;
            }
            if (this.brandAdVersion === 2 && chn_type === 'QAPP_OPPO') {                                             // 厂商2.0 oppo
                if (this.oppoBrandAdPreload) {
                    this.fnInitNewBrandAd(currentAdIndex);
                } else {
                    this.fnOppoAdInit(currentAdIndex);
                    setTimeout(() => this.canLoadNewOppoAd = true , 0);                           
                }
                return false;
            }
            if (chn_type === 'QAPP_OPPO') {                                             // oppo机型，一个页面同一个广告位id只能创建一只广告
                if (this.adType === 'wall') {                                           // 激励墙
                    if (this.$app.brandSlotIds.indexOf(chn_slot_id) > -1) {
                        console.log('------该厂商广告实例已存在------', this.adUnitId);
                        this.fnChoiceChnAd();                                           // 处理下层广告策略
                        return false;
                    }
                    this.$app.brandSlotIds.push(chn_slot_id);
                }
                if (this.adType !== 'wall') {                                           // 非激励墙
                    let slotIdIsUsed = this.fnSlotIdIsUsed(chn_slot_id);                // 该广告位id是否已经被使用
                    console.log('---该广告位是否创建过实例---', slotIdIsUsed, this.adType);
                    if (slotIdIsUsed) {                                                 // 该广告位已经被其他位置使用（每层策略处理前，已经删除了该位置在全局的存储，如果还有，一定是其他位置），处理下层广告策略
                        this.fnChoiceChnAd();
                        return false;
                    }
                    this.fnSaveSlotId(chn_slot_id);                                     // 页面维度存储当前广告实例的位置
                }
            }
            
            let serviceAd = this.feedAd['ad_' + chn_slot_id];                           // 当前广告位id是否有存储的广告实例
            if (serviceAd) {                                                            // 有广告实例，部分厂商需要先销毁实例
                if (['QAPP_OPPO', 'QAPP_XIAOMI', 'QAPP_HUAWEI'].indexOf(chn_type) > -1) {
                    serviceAd.destroy && serviceAd.destroy();
                    this.feedAd['ad_' + chn_slot_id] = null;
                    delete this.feedAd['ad_' + chn_slot_id];
                } else {
                    /** 该位置缓存的广告如果在其他位置正在被使用，如果不重新创建广告实例，会影响到其他位置，造成点击行为串了，或者error之后点击失效等
                    this.fnBrandFeedInit(currentAdIndex);                               // 厂商广告回调初始化
                    this.fnBrandFeedLoad(chn_slot_id);                                  // 加载厂商广告
                    return false;
                    **/
                }
            }
            const ad = require('@service.ad');
            if (!ad) {
                this.fnChoiceChnAd();                                                   // 处理下层广告策略
                return false;
            }
            let params = {
                adUnitId: chn_slot_id
            }
            if(this.serviceAdBrand === 'vivo') {
                params.channel = this.$app && this.$app.headerJson && this.$app.headerJson.channelCode || ''
            }
            if(this.serviceAdBrand === 'huawei' || this.serviceAdBrand === 'honor') {
                params.channel = this.$app && this.$app.sourceInfo && this.$app.sourceInfo.sourceCid
            }
            this.feedAd['ad_' + chn_slot_id] = ad.createNativeAd(params);

            this.fnBrandFeedInit(currentAdIndex);                                       // 厂商广告回调初始化
            this.fnBrandFeedLoad(chn_slot_id);                                          // 加载厂商广告
        },
        // 存储厂商广告位id
        fnSaveSlotId (chn_slot_id) {
            if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                return false;
            }
            this.$app.feedAd[pageName].push({
                chn_slot_id,
                position: this.adAlias
            });
        },
        /**
         * 厂商广告位id是否已经被使用过
         * @param   {String}    chn_slot_id     [厂商广告位id]
         * @return  {false / Object}            [false表示没有使用过；如果已经被使用，则返回使用的位置和该广告位id]
        */
        fnSlotIdIsUsed (chn_slot_id) {
            if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                return false;
            }
            let ids = this.$app.feedAd[pageName] || [];
            if (!ids.length) {
                return false;
            }
            let length = ids.length;
            for (let i = 0; i < ids.length; i++) {
                let item = ids[i];
                if (item && item.chn_slot_id === chn_slot_id) {
                    return item;
                }
            }
            return false;
        },
        // 删除全局存储的该位置的厂商广告位id
        fnDeleteSlotId () {
            if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                return false;
            }
            let position = this.adAlias;
            let ids = this.$app.feedAd[pageName] || [];
            if (!ids || !ids.length) {
                return false;
            }
            for (let i = 0; i < ids.length; i++) {
                let item = ids[i];
                if (item && position && item.position === position) {
                    ids.splice(i, 1);
                    return true;
                }
            }
            return false;
        },
        // 厂商信息流回调初始化
        fnBrandFeedInit (currentAdIndex) {
            let currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_slot_id } = currentAdInfo;
            this.feedAd['status_' + chn_slot_id] = -1;
            let serviceAd = this.serviceAd = this.feedAd['ad_' + chn_slot_id];

            serviceAd.offLoad();
            serviceAd.onLoad(data => {
                console.log('---厂商信息流onLoad---', this.adType, chn_slot_id);
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                           // 超时
                    return false;
                }
                if ([0, 1].indexOf(this.feedAd['status_' + chn_slot_id]) > -1) {        // 已经onLoad 、onError
                    return false;
                }
                let adInfoList = data.adList;
                if (!(adInfoList && adInfoList.length && adInfoList[0] && (adInfoList[0].imgUrlList && adInfoList[0].imgUrlList.length && adInfoList[0].imgUrlList[0] || adInfoList[0].videoUrlList && adInfoList[0].videoUrlList.length && adInfoList[0].videoUrlList[0] || adInfoList[0].icon))) {
                    this.shenceLog('PAdLSState', true, 550003, '1.0数据错误');
                    // this.fnChoiceChnAd();                                               // 处理下层广告策略
                    // return false;
                }
                clearTimeout(this.adTimeoutTimer);
                this.feedAd['status_' + chn_slot_id] = 1;
                this.brandAdBackInfo = adInfoList[0]
                this.fnReportBrandAd();                                                 // send、win、load上报
                let adInfo = adInfoList[0];
                let images = [];
                if(adInfo.imgUrlList && adInfo.imgUrlList.length && adInfo.imgUrlList[0]) {
                    images = adInfo.imgUrlList.map(item => ({ url: item }));
                } else if(adInfo.icon) {
                    images = [{ url: adInfo.icon }];
                    currentAdInfo.isIconStyle = true;                                   // icon样式
                    // currentAdInfo.isVerticalImage = false;                           // 非竖版样式
                }
                currentAdInfo.btn_text = adInfo.clickBtnTxt
                currentAdInfo.btnContent = this.fnGetBtnContent(adInfo.clickBtnTxt)
                this.currentAdInfo = Object.assign({}, currentAdInfo, {
                    images,
                    videos: adInfo.videoUrlList,
                    adId: adInfo.adId,
                    title: adInfo.title,
                    description: adInfo.desc,
                    adtext: adInfo.logoUrl || currentAdInfo.adtext || '',
                    icon_url: adInfo.icon || '',
                    interaction_type: 0,
                    creativeType: adInfo.creativeType,
                    interactionType: adInfo.interactionType,
                });
                if (this.currentAdInfo.chn_type === 'QAPP_HUAWEI') {
                    let {
                        btn_text,
                        creativeType,
                        autoDownloadType,
                        ad_button_optimize_switch,                                             // 是否开启ad-button点击优化
                    } = this.currentAdInfo;
                    this.currentAdInfo.isImageContain = true
                    this.currentAdInfo.isVideoStyle = !!~[6, 9, 106].indexOf(creativeType);
                    this.currentAdInfo.videoUrl = this.currentAdInfo.videos && this.currentAdInfo.videos.length && this.currentAdInfo.videos[0];
                    this.currentAdInfo.isHuaweiDownLoadAd = creativeType && creativeType >= 100 || (btn_text || '').search(/安装|下载/g) > -1;                  // 是否下载类广告（华为定义100以上是下载类广告，或者按钮文案中包含安装、下载字符）
                    this.currentAdInfo.isShowHuaweiAdButton = ['3', '4'].indexOf(autoDownloadType) > -1 && this.currentAdInfo.isHuaweiDownLoadAd && this.isSupportAdButton;    // 是否显示华为自动下载按钮
                    this.currentAdInfo.ad_button_optimize = ad_button_optimize_switch && this.currentAdInfo.isShowHuaweiAdButton;                               // 开启ad-button点击优化的条件，autodl配置了显示ad-button按钮

                    if (this.currentAdInfo.ad_button_optimize && !this.isExtraClose) {                                                                          // 开启ad-button点击优化时，需要显示关闭按钮，位置计算是关闭按钮appear事件触发
                        this.isExtraClose = true;
                        clearTimeout(this.extraCloseTimeout);
                    }
                    if (!this.currentAdInfo.title && adInfo.source && adInfo.source !== '广告') {
                        this.currentAdInfo.title = adInfo.source;                       // source：广告来源（1077+）
                    }
                }
                if(this.currentAdInfo.isCache) {
                    let { custom_id } = currentAdInfo;
                    this.$app.adInstances[pageName]['ad_' + custom_id] = serviceAd;     // 页面维度存储广告实例
                    this.$app.fnAddAdToNotClickCache(this.currentAdInfo);               // 添加该广告至未点击缓存池
                }
                this.fnLoadSuccessHandle();                                             // 广告加载成功后曝光前置处理方法
                this.isLoadComplete = true;
                if(~['open', 'pre'].indexOf(this.adType)) {
                    this.fnAdShow()
                }
                if(this.adType === 'open') {
                    this.$emit('fnGetAd', {
                        isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn
                    });
                }
                if (~['tip', 'pop'].indexOf(this.adType)) {
                    this.$emit('fnGetAd');
                }
                setTimeout(() => {        
                    if(this.currentAdInfo.isVideoStyle && !(this.adType === 'open' && this.isDoubleOpen)) {
                        this.fnVideoAdControl('start')
                    }
                }, 500)
            });

            serviceAd.offError();
            serviceAd.onError(err => {
                console.log('---厂商信息流onError---', this.adType, chn_slot_id, err);
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                           // 超时
                    return false;
                }
                if ([0, 1].indexOf(this.feedAd['status_' + chn_slot_id]) > -1) {        // 已经onLoad 、onError
                    return false;
                }
                this.feedAd['status_' + chn_slot_id] = 0;                               // 存储该广告位的状态为 0：error
                let errCode = err && err.errCode || 550004;
                let errMsg = err && err.errMsg || '1.0加载失败';
                this.shenceLog('PAdLSState', true, errCode, errMsg);
                this.fnChoiceChnAd();                                                   // 处理下层广告策略
            });
        },
        // 厂商信息流加载
        fnBrandFeedLoad (chn_slot_id) {
            let serviceAd = this.feedAd['ad_' + chn_slot_id];                           // 当前chn_slot_id的广告实例
            if (!serviceAd || !serviceAd.load) {
                this.fnChoiceChnAd();                                                   // 处理下层策略数据
                return false;
            }
            this.shenceLog('PAdLoad', false, 550000, '加载');
            this.adReport('req2_trackers', 'req2', 'QAPP');                             // req2事件上报
            serviceAd.load();                                                           // 加载厂商广告
        },
        // 百度sdk处理
        fnBaiduSDKHandle () {
            if (!this.fnSupportBaidu() || !this.currentAdInfo.chn_slot_id || !this.currentAdInfo.chn_app_id || !this.$app.isBaiduSDKCreated || !this.fnBaiduSDKInitComlete()) {
                this.fnChoiceChnAd();                                                   // 选择下一个广告源数据
                return false;
            }
            this.adReport('req2_trackers', 'req2', 'SDK');                              // req2事件上报
            this.shenceLog('PAdLoad', false, 550000, '加载');                             // 神策打点
            this.fnLoadSuccessHandle();                                                 // 广告加载成功后曝光前置处理方法
            this.fnBaiduSDKInit(this.currentAdIndex);                                   // 初始化百度sdk回调
            this.SDK_BAIDU.downloadPanel = ['banner', 'back'].indexOf(this.adType) > -1;// 下载弹窗（底部和返回，高度固定，采用下载弹窗；其余位置，采用下载面板）
            setTimeout(() => this.SDK_BAIDU.canLoad = true);                            // 加载百度SDK
            if (this.adType === 'open') {
                return false;
            }
            this.computeAdStyle();
            this.computeBaiduAdStyle();
        },
        /**
         * 初始化百度sdk回调
         * @param   {Number}    currentAdIndex      [当前策略索引]
        */
        fnBaiduSDKInit (currentAdIndex) {
            // 百度SDK回调 - adLoad
            this.fnBaiduAdLoad = () => {
                if (!this.fnVmIsValid()) {                                                      // 当前组件是否可用
                    return false;
                }
                if (this.currentAdIndex !== currentAdIndex) {                                   // 超时
                    return false;
                }
                if (this.SDK_BAIDU.isLoaded || this.SDK_BAIDU.isError || this.SDK_BAIDU.isClosed) { // 已经load、error、close
                    return false;
                }
                this.SDK_BAIDU.isLoaded = true;
                clearTimeout(this.adTimeoutTimer);
                if (this.$valid) {
                    this.$emit('fnGetAd', { chn_type: 'SDK_BAIDU' });
                }
                this.shenceLog('PAdLSState', false, 550001, '加载成功');
                this.adReport('send2_trackers', 'send2', 'SDK');                                // send2事件上报
                this.adReport('win_trackers', 'win', 'SDK');                                    // win事件上报
                this.adReport('load_trackers', 'load', 'SDK');                                  // load事件上报
            }
            // 百度SDK回调 - adError
            this.fnBaiduAdError = () => {
                if (!this.fnVmIsValid()) {                                                      // 当前组件是否可用
                    return false;
                }
                if (this.currentAdIndex !== currentAdIndex) {                                   // 超时
                    return false;
                }
                if (this.SDK_BAIDU.isError || this.SDK_BAIDU.isClosed || this.SDK_BAIDU.isLoaded) { // 百度sdk的bug，会触发2次error事件
                    return false;
                }
                this.SDK_BAIDU.isError = true;
                this.shenceLog('PAdLSState', true, 550006, '百度加载失败');
                this.fnChoiceChnAd();                                                           // 选择下一个广告源
            }
            // 百度SDK回调 - adShow
            this.fnBaiduAdShow = () => {
                if (this.currentAdIndex !== currentAdIndex) {                                   // 超时
                    return false;
                }
                if (!this.SDK_BAIDU.isLoaded) {
                    return false;
                }
                this.fnAdShow(); 
            }
            // 百度SDK回调 - adClick
            this.fnBaiduAdClick = () => {
                if (!this.SDK_BAIDU.isLoaded) {                                                 // 加载成功判断
                    return false;
                }
                this.adHasClick = true;
                if (this.adType === 'open') {
                    this.$emit('fnAdClick');
                }
                this.SDK_BAIDU.isClicking = true;
                setTimeout(() => {
                    this.SDK_BAIDU.isClicking = false;
                }, 500);
                this.adReport('click_trackers', 'click', 'SDK');                                // click事件上报
                this.shenceLog('ADClick');
                this.fnPageHideTimer();                                                         // 广告点击页面跳转超时判断
            }
            // 百度SDK回调 - adClose
            this.fnBaiduAdClosed = () => {
                if (this.SDK_BAIDU.isError || this.SDK_BAIDU.isClosed || !this.SDK_BAIDU.isLoaded) { // 防止百度触发2次close事件
                    return false;
                }
                this.SDK_BAIDU.isClosed = true;
                if (this.adType === 'open') {
                    // this.fnGoOpenEntry();                                                    // 跳转开屏入口页面
                    if (!this.adHasClick || this.$visible) {                                    // 没有点击过，或者点击了没有跳转（下载类 或 dp类），需要手动进行开屏结束
                        this.$emit('fnAdClose');
                    }
                    return false;
                }
            }
        },
        // api信息流处理
        fnApiFeedHandle () {
            if(this.adType === 'open' && this.$valid) {
                this.$emit('fnGetAd',{
                   isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn
                });
            }
            if (['tip', 'pop'].indexOf(this.adType) > -1 && this.$valid) {
                this.$emit('fnGetAd');
            }
            this.fnLoadSuccessHandle();                                                 // 广告加载成功后曝光前置处理方法
            this.adStartTime = new Date().getTime();
            clearTimeout(this.adTimeoutTimer);
            if(this.currentAdInfo.isCache) {
                this.$app.fnAddAdToNotClickCache(this.currentAdInfo);                   // 添加该广告至未点击缓存池
            }
            this.adReport('win_trackers', 'win', 'API');                                // 素材获取上报
            this.adReport('load_trackers', 'load', 'API');                              // 素材获取上报
            this.canShowAd = true;                                                      // 展示API广告
            
            // 兼容小米手机同一个位置不能播放第二个视频的问题，手动播放
            setTimeout(() => {        
                if(this.currentAdInfo.isApiVideo) {
                    this.fnVideoAdControl('start')
                }
            }, 500)
        },
        // 激励视频处理
        fnVideoAdHandle () {
            switch (this.chnType.split('_')[0]) {
                case 'QAPP':
                    this.fnBrandVideoHandle();                                          // 处理厂商广告数据
                    break ;
                case 'API':
                    this.fnApiVideoHandle();                                            // 处理api广告数据
                    break ;
                default :
                    this.fnChoiceChnAd();                                               // 下层广告策略处理
                    break ;
            }
        },
        // 厂商激励视频处理
        fnBrandVideoHandle () {
            console.log('---厂商激励视频处理---');
            let currentAdIndex = this.currentAdIndex,                                   // 当前策略的索引
                currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_slot_id, chn_type } = currentAdInfo;
            if(!this.isSupportBrandAd || !chn_slot_id) {
                this.fnChoiceChnAd();                                                   // 漏到下一个广告源
                return false;
            }
            this.isBrandAd = true;
            let ads = this.$app.videoAd[pageName],                                      // 当前页面所有的广告实例
                serviceAd = ads['ad_' + chn_slot_id];                                   // 当前广告源的广告实例
            
            /**
             * -- 视频广告实例存储格式 --
             * this.$app.videoAd = {
             *     Read: {
             *         ad_12345: Object,                                                // chn_slot_id为12345的广告实例
             *         status_12345: 1,                                                 // chn_slot_id为12345的广告实例的加载状态；-2：首次,  -1：初始状态init,  0: error,  1: load,  2：已缓存,  3：已关闭
             *         chn_slot_id: 12345,                                              // 当前视频的chn_slot_id
             *     }
             * }
            */

            if (serviceAd) {                                                            // 该广告源id有缓存的实例
                console.log('---有激励视频实例---', chn_slot_id);
                if (['QAPP_HUAWEI'].indexOf(chn_type) > -1) {
                    try {
                        serviceAd.destroy();                                            // 华为机型需要进行实例销毁
                        delete ads['status_' + chn_slot_id];
                        delete ads['ad_' + chn_slot_id];
                    } catch(err) {
                        console.log('---华为机型激励视频销毁错误---', err);
                    }
                } else {
                    if (ads['status_' + chn_slot_id] !== 2) {
                        ads['status_' + chn_slot_id] = -1;                              // 重置状态为初始状态 -1
                    }
                    this.fnBrandVideoInit(currentAdIndex);                              // 初始化厂商广告回调
                    this.fnBrandVideoLoad(chn_slot_id);                                 // 加载厂商视频
                    return false;
                }
            }
            
            const ad = require('@service.ad');
            if (!ad) {
                this.fnChoiceChnAd();
                return false;
            }
            let params = {
                adUnitId: chn_slot_id
            }
            if(this.serviceAdBrand === 'vivo') {
                params.channel = this.$app && this.$app.headerJson && this.$app.headerJson.channelCode || ''
            }
            if(this.serviceAdBrand === 'huawei' || this.serviceAdBrand === 'honor') {
                params.channel = this.$app && this.$app.sourceInfo && this.$app.sourceInfo.sourceCid
            }
            serviceAd = ads['ad_' + chn_slot_id] = ad.createRewardedVideoAd(params);
            console.log('---没有激励视频实例---', chn_slot_id);
            ads['status_' + chn_slot_id] = -2;                                          // 重置状态为首次-2
            this.fnBrandVideoInit(currentAdIndex);                                      // 初始化厂商广告回调
            this.fnBrandVideoLoad(chn_slot_id);                                         // 加载厂商视频
        },
        /**
         * 厂商激励视频回调初始化
         * @param   {Number}    currentAdIndex     [当前策略的索引]
        */
        fnBrandVideoInit (currentAdIndex) {
            let currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_slot_id } = currentAdInfo;
            let ads = this.$app.videoAd[pageName];                                      // 当前页面所有的广告实例
            const last_chn_slot_id = ads.chn_slot_id;                                   // 上一次视频实例的chn_slot_id，用来关闭上次视频实例的所有回调
            if (last_chn_slot_id && last_chn_slot_id !== chn_slot_id && ads['ad_' + last_chn_slot_id]) {
                let lastServiceAd = ads['ad_' + last_chn_slot_id];
                lastServiceAd.offLoad();
                lastServiceAd.offError();
                lastServiceAd.offClose();
            }
            let serviceAd = ads['ad_' + chn_slot_id];                                   // 当前广告源的广告实例

            serviceAd.offLoad();
            serviceAd.onLoad(data => {
                console.log('---厂商激励视频onLoad---', data, chn_slot_id);
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                           // 超时，设为2：已缓存状态，下次直接调用show()进行播放
                    ads['status_' + chn_slot_id] = 2;
                    return false;
                }
                let status = ads['status_' + chn_slot_id];
                if ([0, 1].indexOf(status) > -1) {                                      // 如果已经onLoad已经onError
                    return false;
                }
                if (status === 3) {                                                     // 关闭后触发onLoad，为缓存
                    ads['status_' + chn_slot_id] = 2;
                    return false;
                }
                clearTimeout(this.adTimeoutTimer);                                      // 清除超时定时器
                serviceAd.show();                                                       // 播放视频
                ads['status_' + chn_slot_id] = 1;
                this.fnBrandVideoLoadReport();                                          // 上报load事件
                this.fnVideoPlayReport();                                               // 上报播放事件等
            });

            serviceAd.offError();
            serviceAd.onError(err => {
                console.log('---厂商激励视频onError---', err, chn_slot_id);
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                           // 超时
                    return false;
                }
                if ([0, 1].indexOf(ads['status_' + chn_slot_id]) > -1) {                // 已经error或者已经load了
                    return false;
                }
                ads['status_' + chn_slot_id] = 0;
                let errCode = err && err.errCode || 550005;
                let errMsg = err && err.errMsg || '激励视频加载失败';
                this.shenceLog('PAdLSState', true, errCode, errMsg);
                this.fnChoiceChnAd();                                                   // 处理下层广告策略
            });

            serviceAd.offClose();
            serviceAd.onClose(res => {
                console.log('---厂商激励视频onClose---', res, chn_slot_id);
                ads['status_' + chn_slot_id] = 3;
                let isEnded =  res && res.isEnded;
                if (isEnded) {
                    this.adReport('play_finish_trackers', 'playFinish', 'QAPP');        // playFinish事件上报
                    this.fnSetVideoPlayStorage()
                }
                this.$app.lastOpenPage = '';
                this.isEnded = isEnded ? 'true' : 'false';
                this.adEndTime = new Date().getTime();
                this.shenceLog('ADClose');
                this.$emit('videoEnd', {
                    isEnded: isEnded ? 'true' : 'false',
                    adAlias: this.adAlias,
                    ecpm: this.currentAdInfo.cpm
                });
            });
        },
        // 厂商激励视频加载
        fnBrandVideoLoad (chn_slot_id) {
            this.adReport('req2_trackers', 'req2', 'QAPP');                             // req2事件上报
            this.shenceLog('PAdLoad', false, 550000, '加载');                             // 神策打点
            let ads = this.$app.videoAd[pageName],                                      // 当前页面所有的广告实例
                serviceAd = ads['ad_' + chn_slot_id],                                   // 当前广告源的广告实例
                status = ads['status_' + chn_slot_id];
            ads.chn_slot_id = chn_slot_id;                                              // 存储当前视频的chn_slot_id

            console.log('---加载厂商视频了---', status);
            if (status === -2) {                                                        // 首次加载
                if (['vivo', 'xiaomi', 'redmi'].indexOf(this.serviceAdBrand) > -1) {
                    return false;
                }
            }
            if (status === 2) {
                serviceAd.show();
                ads['status_' + chn_slot_id] = -1;                                      // 重置状态为-1，避免缓存超时,show()无回调，下次无法播放
                clearTimeout(this.adTimeoutTimer);
                this.fnBrandVideoLoadReport();                                          // 上报load事件
                this.fnVideoPlayReport();                                               // 上报播放事件等
                return false;
            }
            serviceAd.load();
        },
        // 厂商load事件上报
        fnBrandVideoLoadReport () {
            this.adReport('win_trackers', 'win', 'QAPP');                               // win事件上报
            this.adReport('load_trackers', 'load', 'QAPP');                             // load事件上报
            this.shenceLog('PAdLSState', false, 550001, '加载成功');
        },
        // api 激励视频处理
        fnApiVideoHandle () {
            console.log('---api激励视频处理---');
            clearTimeout(this.adTimeoutTimer);
            this.fnInitVideo();                                                         // api视频初始化
            this.canShowAd = true;                                                      // 展示API广告
        },
        // 请求广告数据
        fnGetAd(isBannerPre = false) {
            let that = this
            console.log('-----AdUnion-----fnGetAd-----')
            if(that.isVideoLoading && that.adType == 'video' && that.adAlias != 'readVideo') {
                prompt.showToast({
                    message: '视频加载中，请稍后重试！'
                }) 
                console.log('-----AdUnion-----isVideoLoading-----')
                return
            }
            that.requestCount ++
            // 底部预加载不进行间隔请求及参数初始化
            if(!isBannerPre) {
                // 初始化广告配置
                that.fnInitAdParams()
            }
            // 请求前置
            that.isVideoLoading = true
            that.shenceLog('ADRequest')
            // 请求参数增加超时时间
            if(that.requestTime !== 0 && that.requestTime !== '0') {
                that.adRequestData.requestTime = that.requestTime
            }
            that.fnCheckBaiduSupport();                                                 // 检查百度SDK支持性
            that.fnCheckApiCache()                                                      // API缓存查找
            that.adRequestData.bus_context = JSON.stringify(that.busContext)            // bbus_context参数配置
            let headerJson = Object.assign({}, that.$app.headerJson, {
                sourceChannel: that.$app.sourceInfo.sourceCid,
            })
            fetch.fetch({
                url: that.adRequestUrl,
                data: JSON.stringify(that.adRequestData),
                header: headerJson,
                method: 'POST',
                success: function(res) {
                    that.isVideoLoading = false
                    that.isPreLoading = false;                                          // 是否正在预加载广告请求
                    if (!that.fnVmIsValid()) {                                          // 当前组件是否可用
                        return false;
                    }
                    if(!res || !res.data) {
                        console.log('-----AdUnion-----无广告数据返回-----') 
                        that.shenceLog('ADResponse', true, '-9999')
                        that.fnExceptionReport(1, '接口返回错误')
                        that.isNoFilling = true;                                        // 是否无填充
                        if(that.requestCount === 1 && that.adType === 'banner' && that.isRepeat) {
                            that.fnBannerAdRepeat();
                        }
                        return
                    } 
                    try {
                        let responseData = JSON.parse(res.data)
                        let hasApiLocal = false
                        if (that.supportApiCache) {
                            if (responseData.data && responseData.data.length) {
                                let hasApi = responseData.data.some(item => { return item.chn_type && item.chn_type.indexOf('API_') > -1 })
                                if (!hasApi) {
                                    let cacheApi = that.$app.fnSearchApiCacheBySlotId(that.adUnitId)
                                    if (cacheApi) {
                                        responseData.data.push(cacheApi)
                                    }
                                }
                            } else {
                                let cacheApi = that.$app.fnSearchApiCacheBySlotId(that.adUnitId)
                                if (cacheApi) {
                                    hasApiLocal = true
                                    responseData.data = [cacheApi]
                                }
                            }
                        }
                        // 判断广告有数据且未过期
                        if((responseData.code == 0 || hasApiLocal) && responseData.data && responseData.data.length > 0) {
                            that.sid = responseData.sid
                            that.adsCacheInfo = JSON.parse(JSON.stringify(responseData.data))
                            // 底部预加载赋值全局变量
                            if(isBannerPre) {
                                that.$app.bannerAdInfo = JSON.parse(JSON.stringify(responseData.data))
                            }
                            that.shenceLog('ADResponse')
                            // 底部预加载退出程序执行
                            if(isBannerPre) {
                                if(that.needHandleAds) {                                // 如果底部点击后，该请求正处于请求中，需要直接处理广告策略
                                    that.needHandleAds = false;                         // 是否需要处理广告策略
                                    that.fnBannerAdReload();
                                }
                                return
                            }
                            that.fnChoiceChnAd();
                            return false;
                        }else {
                            console.log('-----AdUnion-----无广告数据返回-----')
                            if(that.adType === 'video' && that.adAlias != 'readVideo') {
                                if(responseData && responseData.code == 20010) {
                                    prompt.showToast({
                                        message: '视频任务需授权方可完成，请通过授权。'
                                    }) 
                                }else {
                                    prompt.showToast({
                                        message: '任务视频获取失败，请稍后重试！'
                                    }) 
                                }
                            }
                            that.shenceLog('ADResponse', true , responseData.code)
                            if(that.adType !== 'video' && that.isSupportBrandAd) {
                                that.fnExceptionReport(1, '无广告数据返回')
                            }
                        }
                    } catch(err) {
                        that.fnExceptionReport(1, '数据处理错误')
                        console.log('-----AdUnion-----广告数据获取错误-----')
                        console.log(err)
                    }
                    that.isNoFilling = true;                                            // 是否无填充，有填充会提前return
                    if(that.requestCount === 1 && that.adType === 'banner' && that.isRepeat) {
                        that.fnBannerAdRepeat();
                    }
                },
                fail: function(data, code) {
                    that.isVideoLoading = false
                    that.isPreLoading = false;                                          // 是否正在预加载广告请求
                    that.isNoFilling = true;                                            // 是否无填充
                    if(that.needHandleAds) {
                        that.needHandleAds = false;                                     // 是否需要处理广告策略
                    }
                    if(that.requestCount === 1 && that.adType === 'banner' && that.isRepeat) {
                        that.fnBannerAdRepeat();
                    }
                }
            }) 
        },
        // 请求广告墙(缓存)
        fnGetAdWallCache() {
            let that = this
            that.shenceLog('ADRequest')
            let header = Object.assign({}, that.$app.headerJson, {
                sourceChannel: that.$app.sourceInfo.sourceCid,
            });
            fetch.fetch({
                url: that.adRequestUrl,
                data: JSON.stringify(that.adRequestData),
                header,
                method: 'POST',
                success: function(res) {
                    console.log(res)
                    if(!res || !res.data) {
                        console.log('-----AdWall-----无广告墙数据返回-----') 
                        that.shenceLog('ADResponse', true, '-9999')
                        return
                    }   
                    try {
                        let resData = JSON.parse(res.data)
                        if(resData.code == 0 && resData.data && resData.data.length > 0 && resData.data != 'null' && typeof resData.data === 'object') {
                            that.$app.adWallCaches = that.$app.adWallCaches.concat(resData.data)
                            that.adsCacheInfo = JSON.parse(JSON.stringify(resData.data))
                            that.shenceLog('ADResponse')
                        }else {
                            that.shenceLog('ADResponse', true , resData.code)
                        }
                    }catch(err) {
                        console.log('-----AdUnion-----广告墙数据获取错误-----')
                        console.log(err)
                    }
                },
                fail: function(data, code) {}
            })
        },
        // 视频初始化
        fnInitVideo() {
            let that = this
            let currentAdInfo = that.currentAdInfo
            if(!currentAdInfo.video_duration || !currentAdInfo.video_url) {
                console.log('-----AdUnion-----视频读取配置失败video_duration/video_url-----')
                if(that.adAlias != 'readVideo') {
                    prompt.showToast({
                        message: '任务视频获取失败，请稍后重试！'
                    })
                }
                return
            }
            that.adStartTime = new Date().getTime()
            that.videoTotalTime = currentAdInfo.video_duration
            that.videoTime = currentAdInfo.video_duration
            if(currentAdInfo.skip_btn_timing === 0 || currentAdInfo.skip_btn_timing && currentAdInfo.skip_btn_timing > 0 && currentAdInfo.video_duration > currentAdInfo.skip_btn_timing) {
                that.videoCloseTime = currentAdInfo.skip_btn_timing
            }
            that.isVideoMuted = currentAdInfo.play_voice ? false : true
            that.$emit('videoShow', {
                adAlias: that.adAlias
            })
            that.videoTimeout = setTimeout(() => {
                that.$emit('videoClose', {
                    adAlias: that.adAlias
                })
                if(currentAdInfo.chn_type === 'API_GDT') {
                    that.adReport('play_finish_trackers', 'playReportError');       // playReportError事件上报
                }
                that.$emit('videoAdShow', {
                    adAlias: that.adAlias
                })
                if(that.adAlias != 'readVideo') {                    
                    prompt.showToast({
                        message: '任务视频获取失败，请稍后重试！'
                    })
                }
            }, 5000)
            // 非WIFI提示
            network.subscribe({
                callback: function(data) {
                    if(data && data.type != 'wifi') {
                        prompt.showToast({
                            message: '当前非WIFI环境，请注意流量消耗'
                        })
                    }
                }
            })
            // 避免播放一直加载
            if(that.adType === 'video') {
                setTimeout(() => {
                    try {
                        that.$element('video') && that.$element('video').start()
                    } catch(e) {
                        console.log(e)
                    }
                }, 0)
            }
        },
        fnClickPopShow() {
            this.isClickShow = true;
            this.$emit('stopCount');
            this.adReport('click_trackers', 'click');                           // click事件上报
        },
        fnDownloadPopShow() {
            let that = this
            that.isDownloadShow = true
            that.$emit('stopCount')
            this.adReport('click_trackers', 'click');                           // click事件上报
        },
        fnOpenClick() {
            let that = this
            if(that.isOpenClick) {
                return
            }
            that.isOpenClick = true
            this.clickType.isReal = true;                                       // 真实点击
            setTimeout(() => {
                that.isOpenClick = false
            }, 3000)
            if(that.isOpenFloat) {
                return
            }
            that.adHasClick = true;                                             // 广告是否点击过
            let currentAdInfo = that.currentAdInfo
            if(that.needClickShow && !that.isBrandAd && !that.currentAdInfo.isClickReplace) {
                if(currentAdInfo.interaction_type == 2) {
                    that.fnDownloadPopShow()
                }else {
                    that.fnClickPopShow()
                }
            }else {
                that.fnAdClick()
            }
        },
        fnCancleClick() {
            let that = this
            that.isClickShow = false
            if(that.adType == 'video') {
                that.$element('video') && that.$element('video').start()
            }
            that.$emit('startCount')
            if(that.isPreClose) {
                that.isEnded = 'true'
                that.adEndTime = new Date().getTime()
                that.shenceLog('ADClose')
                that.$emit('videoEnd', {
                    isEnded: 'true',
                    adAlias: that.adAlias,
                    ecpm: that.currentAdInfo.cpm
                })
                that.$emit('videoClose', {
                    adAlias: that.adAlias,
                    // back: 'true'
                })
                that.fnSetVideoPlayStorage()
            }
        },
        fnConfirmClick(evt) {
            let that = this
            if(evt == 'isClick' || (evt && evt.detail && evt.detail.adAlias == that.adAlias && evt.detail.randomTime == that.randomTime && that.adType != 'wall') || (evt && evt.detail && evt.detail.adAlias == that.adAlias && evt.detail.randomTime == that.randomTime && evt.detail.adIndex == that.adIndex && that.adType == 'wall')) {
                that.isClickShow = false
                if(that.adType == 'video') {
                    try {
                        setTimeout(() => {
                            that.$element('video') && that.$element('video').start()
                        }, 0)
                    } catch(e) {
                        console.log(e)
                    }
                }
                that.$emit('startCount')
                that.fnAdClick()
                if(that.isPreClose) {
                    that.isEnded = 'true'
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoEnd', {
                        isEnded: 'true',
                        adAlias: that.adAlias,
                        ecpm: that.currentAdInfo.cpm
                    })
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                        // back: 'true'
                    })
                    that.fnSetVideoPlayStorage()
                }
            }
        },
        fnCancleDownload() {
            let that = this
            that.isDownloadShow = false
            if(that.adType == 'video') {
                that.$element('video') && that.$element('video').start()
            }
            that.$emit('startCount')
            if(that.isPreClose) {
                that.isEnded = 'true'
                that.adEndTime = new Date().getTime()
                that.shenceLog('ADClose')
                that.$emit('videoEnd', {
                    isEnded: 'true',
                    adAlias: that.adAlias,
                    ecpm: that.currentAdInfo.cpm
                })
                that.$emit('videoClose', {
                    adAlias: that.adAlias,
                    // back: 'true'
                })
                that.fnSetVideoPlayStorage()
            }
        },
        fnConfirmDownload(evt) {
            let that = this
            if(evt == 'isClick' || (evt && evt.detail && evt.detail.adAlias == that.adAlias && evt.detail.randomTime == that.randomTime && that.adType != 'wall') || (evt && evt.detail && evt.detail.adAlias == that.adAlias && evt.detail.randomTime == that.randomTime && evt.detail.adIndex == that.adIndex && that.adType == 'wall')) {
                that.isDownloadShow = false
                if(that.adType == 'video') {
                    try {
                        setTimeout(() => {
                            that.$element('video') && that.$element('video').start()
                        }, 0)
                    } catch(e) {
                        console.log(e)
                    }
                }
                that.$emit('startCount')
                that.fnAdClick()
                if(that.isPreClose) {
                    that.isEnded = 'true'
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoEnd', {
                        isEnded: 'true',
                        adAlias: that.adAlias,
                        ecpm: that.currentAdInfo.cpm
                    })
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                    })
                    that.fnSetVideoPlayStorage()
                }
            }
        },
        fnClickExit(e) {
            this.fnStopPropagation(e)
            if(this.exitApp && this.adAlias === 'readBack') {
               this.$app.exit()
            }
            this.isExit = true
            this.$emit('adBack', {
                type: 'exit'
            })
        },
        fnExtraClose(evt) {
            this.fnStopPropagation(evt)
            if (this.currentAdInfo.click_behive) {
                this.clickType.isClose = true;                              // 点击了关闭
            }
            let that = this
            if(this.hasClick) {
                return
            }
            if(this.currentAdInfo.click_behive && !this.adHasClick && !this.hasCloseClick && !this.hasTouchClick && (this.isBrandAd && this.brandAdVersion === 1 && this.isLoadComplete || !this.isBrandAd && this.canShowAd)) {
                this.hasCloseClick = true
                this.fnClickSwitch()
                return
            }
            if(this.adType === 'back') {
                this.fnReportAdClose();
                this.isExit = true
                this.$emit('adBack', {
                    type: 'close'
                })
                return
            }
            if(that.noAdVipSwitch && (that.adType === 'message' || that.adType === 'banner' || that.adType === 'pre' || that.adType === 'insert')) {
                let adTypeText = that.fnGetAdPosition()
                that.$emit('closePopShow', {
                    adType: that.adType,
                    randomTime: that.randomTime,
                    adTypeText,
                    adSoltId : that.currentAdInfo.chn_slot_id
                })
                return
            }
            this.fnReportAdClose();
            this.isExtraClose = false
            this.isExtraShow = false
        },
        fnCloseExtra() {
            this.isClickShow = false
            this.isDownloadShow = false
        },
        fnChangeWebShow() {
            this.isWebShow = !this.isWebShow
            if(this.isWebShow) {
                this.isAppShow = false
            }
            if(this.adType == 'message') {
                this.$emit('changeWebShow')
            }
        },
        fnChangeAppShow() {
            this.isAppShow = !this.isAppShow
            if(this.isAppShow) {
                this.isWebShow = false
            }
            if(this.adType == 'message') {
                this.$emit('changeAppShow')
            }  
        },
        // 广告展示
        fnAdShow() {
            let that = this
            if(that.adType !== 'video') {
                if(that.hasShowReport) {
                    console.log('-----已经上报过曝光-----')
                    return
                }
                that.hasShowReport = true
                if(that.adType === 'pre' || that.adType === 'insert') {
                    that.fnRecordPageStartTime()
                }
                if(that.adType === 'insert' && that.currentAdInfo.isInsertInduceClick && that.currentAdInfo.insertInduceClickIndex) {
                    let insertInduceClickIndex = that.$app.getAppData('insertInduceClickIndex')
                    insertInduceClickIndex++
                    that.$app.setAppData('insertInduceClickIndex', insertInduceClickIndex)
                }
            }
            let currentAdInfo = that.currentAdInfo
            console.log('-----AdUnion-----fnAdShow-----')
            if(!currentAdInfo) {
                return
            }
            let isBrandAd = that.currentAdInfo.chn_type.indexOf('QAPP') > -1;   // 厂商
            if(isBrandAd && that.brandAdVersion === 1) {
                that.fnReportAdShow()
            }
            that.adReport('imp_trackers', 'show');                              // imp事件上报
            that.shenceLog('ADShow')
            if(that.currentAdInfo.isApiVideo){
                that.adReport('play_start_trackers', 'playStart');  
            }
            if(that.adType === 'wall' && that.adAlias === 'adWallLocal') {
                that.fnAdWallReport('ad_imp')
            }
            // 自动触发判断
            if(!that.isDoubleOpen && that.adType != 'pre' && that.adType != 'insert') {
                that.fnAutoClickSwitch()
            }
        },
        // 点击坐标获取
        fnTouchStart(e) {
            let that = this
            let touchInfo = {}
            if(e && e.clientX && e.clientY) {
                touchInfo = e
            }else if(e && e.touches && e.touches[0]) {
                touchInfo = e.touches[0]
            }
            if(touchInfo && JSON.stringify(touchInfo) !== '{}') {
                if(touchInfo.clientX) {
                    that.clickX = parseInt(touchInfo.clientX)    
                }
                if(touchInfo.clientY) {
                    that.clickY = parseInt(touchInfo.clientY)
                }
                if(touchInfo.offsetX) {
                    that.offsetX = parseInt(touchInfo.offsetX)
                }
                if(touchInfo.offsetY) {
                    that.offsetY = parseInt(touchInfo.offsetY)    
                }
            }
            // console.log('----------当前坐标触碰----------')
            // console.log(touchInfo.clientX, touchInfo.clientY)
            if(that.currentAdInfo && that.currentAdInfo.invisible_click_behive && !that.hasTouchClick && !that.adHasClick && that.adType !== 'back') {
                that.hasTouchClick = true
                that.clickType.isTouch = true;                                  // 滑动误触
                that.fnClickSwitch(true)
            }
            if(that.currentAdInfo && that.currentAdInfo.invisible_click_behive && !that.hasTouchClick && !that.adHasClick && that.adType === 'back') {
                setTimeout(() => {
                    if(that.$valid && !that.isExit) {
                        that.hasTouchClick = true
                        that.clickType.isTouch = true;                          // 滑动误触
                        that.fnClickSwitch(true)
                    }
                }, 300)
            }
        },
        fnTouchEnd(e) {
            if(this.hasClick) {
                this.fnStopPropagation(e)
            }
            let that = this
            let touchInfo = {}
            if(e && e.clientX && e.clientY) {
                touchInfo = e
            }else if(e && e.changedTouches && e.changedTouches[0]) {
                touchInfo = e.changedTouches[0]
            }
            if(touchInfo && JSON.stringify(touchInfo) !== '{}') {
                if(touchInfo.clientX) {
                    that.leaveClickX = parseInt(touchInfo.clientX)    
                }
                if(touchInfo.clientY) {
                    that.leaveClickY = parseInt(touchInfo.clientY)
                }
                if(touchInfo.offsetX) {
                    that.leaveOffsetX = parseInt(touchInfo.offsetX)
                }
                if(touchInfo.offsetY) {
                    that.leaveOffsetY = parseInt(touchInfo.offsetY)    
                }
            }
        },
        fnClickSwitch(isTouch) {
            let that = this
            if (isTouch !== true) {
                this.clickType.isReal = true;                                           // 真实点击
            }
            if(that.hasClick) {
                return
            }
            that.hasClick = true
            setTimeout(() => {
                that.hasClick = false
            }, 300)
            that.adHasClick = true;                                                     // 广告是否点击过
            let isBrandAd = that.currentAdInfo.chn_type.split('_')[0] === 'QAPP';       // 是否厂商
            if(that.needClickShow && !isBrandAd && !that.currentAdInfo.isClickReplace) {
                let currentAdInfo = that.currentAdInfo
                that.fnClickReport()
                if(that.adType == 'video') {
                    that.$element('video') && that.$element('video').pause()
                }
                if(currentAdInfo.interaction_type == 2) {
                    that.isDownloadShow = true
                    that.$emit('stopCount', {
                        adType: that.adType,
                        type: 'download',
                        adInfo: {
                            brand_name: currentAdInfo.brand_name,
                            app_size: currentAdInfo.app_size,
                            app_version: currentAdInfo.app_version,
                            publisher: currentAdInfo.publisher,
                            app_info_url: currentAdInfo.app_info_url,
                            privacy_link: currentAdInfo.privacy_link,
                            permission_link: currentAdInfo.permission_link,
                            adAlias: that.adAlias,
                            randomTime: that.randomTime,
                            adIndex: that.adIndex,
                        }
                    })
                }else {
                    that.isClickShow = true
                    that.$emit('stopCount', {
                        adType: that.adType,
                        type: 'click',
                        adInfo: {
                            brand_name: currentAdInfo.brand_name,
                            app_size: currentAdInfo.app_size,
                            app_version: currentAdInfo.app_version,
                            publisher: currentAdInfo.publisher,
                            app_info_url: currentAdInfo.app_info_url,
                            privacy_link: currentAdInfo.privacy_link,
                            permission_link: currentAdInfo.permission_link,
                            adAlias: that.adAlias,
                            randomTime: that.randomTime,
                            adIndex: that.adIndex,
                        }
                    })
                }
            }else {
                that.fnAdClick()
                if(that.adType == 'video' && that.isPreClose) {
                    that.isEnded = 'true'
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoEnd', {
                        isEnded: 'true',
                        adAlias: that.adAlias,
                        ecpm: that.currentAdInfo.cpm
                    })
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                        // back: 'true'
                    })
                    that.fnSetVideoPlayStorage()
                }
            }
        },
        // 广告点击 
        fnAdClick() {
            let that = this
            if(that.adType !== 'video' && !that.hasShowReport && that.adType !== 'banner') {
                return
            }
            console.log('-----AdUnion-----fnAdClick-----')
            if(that.isClick) {
                console.log('-----AdUnion-----fnAdClick-----3s点击')
                return
            }
            that.$app.lastOpenPage = ''
            that.adHasClick = true;
            that.isClick = true
            setTimeout(() => {
                that.isClick = false
                that.fnResetClickType();                                                                            // 重置点击类型
            }, 3000)
            if(!that.currentAdInfo) {
                return
            }
            that.fnAdButtonOptimizeHide();                                                                          // 隐藏点击优化区域
            setTimeout(() => {
                if (that.clickType.clickCount || that.clickType.isBtnClick) {                                   // 按钮点击 和 非首次点击，均为真实点击（误触是一次性行为）
                    that.clickType.clickType = 'isReal';
                } else {
                    for (let i = 0; i < that.clickType.priority.length; i++) {                                  // 按优先级，区分点击类型
                        let key = that.clickType.priority[i];
                        if (that.clickType[key]) {
                            that.clickType.clickType = key;
                            break ;
                        }
                    }
                }
                that.isRealClick = that.clickType.clickType === 'isReal';
                if(that.isRealClick) {
                    let adClickInfo = {offsetX: that.offsetX, offsetY: that.offsetY, leaveOffsetX: that.leaveOffsetX, leaveOffsetY: that.leaveOffsetY};
                    that.$app.setAppData('adClickOffsetLocalInfo', adClickInfo);
                }
                that.clickType.clickCount++;                                                                        // 点击次数
                console.log('------点击类型------', that.clickType.clickType);
                let isBrandAd = that.currentAdInfo.chn_type.split('_')[0] === 'QAPP';                               // 是否厂商
                let replaceAd = null;                                                                               // 替换后的广告
                let canReplace = false;                                                                             // 是否可以替换
                if (this.currentAdInfo.isClickReplace && this.scene && !this.hasClickReplace && !this.hasExposureReplace && that.clickType.clickCount === 1) {
                    let clickType = that.clickType.clickType === 'isReal' ? 0 : 1;                                  // 传入点击替换方法的点击类型参数，0：真实点击，1：误点击
                    replaceAd = that.$app.fnGetClickReplaceAd(that.scene, clickType, that.currentAdInfo);           // 点击替换
                    console.log('---点击替换结果---', replaceAd);
                    if (replaceAd) {
                        let {
                            chn_slot_id,
                            custom_id,
                        } = replaceAd;
                        let chnType = replaceAd.chn_type.split('_')[0];
                        if (chnType === 'QAPP') {
                            let serviceAd = this.$app.adInstances[pageName]['ad_' + custom_id];                     // 广告实例
                            console.log('---点击替换，页面是否有厂商实例---', !!serviceAd);
                            if (serviceAd) {
                                isBrandAd = true;
                                canReplace = true;                                                                  // 是否可以替换
                                this.serviceAd = serviceAd;
                            }
                        }
                        if (chnType === 'API') {
                            isBrandAd = false;
                            canReplace = true;                                                                      // 是否可以替换
                        }
                        if (canReplace) {
                            let replaceAttrs = {                                                                    // 要替换的属性
                                adId: replaceAd.adId,
                                chn_type: replaceAd.chn_type,
                                chn_slot_id: replaceAd.chn_slot_id,
                                // creativeType: replaceAd.creativeType,
                                // isAutoDownload: replaceAd.isAutoDownload,
                                click_trackers: replaceAd.click_trackers,
                                event_tracker: replaceAd.event_tracker,
                                tracker: replaceAd.tracker,
                                app_installed_trackers: replaceAd.app_installed_trackers,
                                wakeup_start_trackers: replaceAd.wakeup_start_trackers,
                                wakeup_finish_trackers: replaceAd.wakeup_finish_trackers,
                                wakeup_failed_trackers: replaceAd.wakeup_failed_trackers,
                                app_no_installed_trackers: replaceAd.app_no_installed_trackers,
                                download_start_trackers: replaceAd.download_start_trackers,
                                download_finish_trackers: replaceAd.download_finish_trackers,
                                install_start_trackers: replaceAd.install_start_trackers,
                                install_finish_trackers: replaceAd.install_finish_trackers,
                                interaction_type: replaceAd.interaction_type,
                                action_url: replaceAd.action_url,
                                app_package: replaceAd.app_package,
                                fallback_type: replaceAd.fallback_type,
                                fallback_url: replaceAd.fallback_url,
                                down_type: replaceAd.down_type,
                            }
                            this.replaceAd = replaceAd;
                            this.currentAdInfo = Object.assign({}, this.currentAdInfo, replaceAttrs);
                            this.hasClickReplace = true;
                        }
                    }
                }
                if (this.adType !== 'video') {
                    let clickAd = this.hasClickReplace && this.replaceAd ? this.replaceAd : this.currentAdInfo;     // 点击次数+1的广告
                    that.$app.fnAdClickHandle(clickAd);                                                             // 缓存池广告点击处理

                    let isMisclick = ['isReal'].indexOf(that.clickType.clickType) === -1;                           // 是否误触
                    that.$app.fnSaveClickedAd(that.currentAdInfo, isMisclick, that.adPosition);                     // 存储已点击广告的素材，用来误触频次控制
                }

                let currentAdInfo = that.currentAdInfo
                let isAdButton = that.clickType.isAdButton;                                                         // 是否华为ad-button
                let needReportClick = true
                if(isBrandAd) {
                    if(!isAdButton) {
                        that.fnReportAdClick();                                                                     // ad-button组件触发的点击，不需要上报厂商点击事件
                        needReportClick = false
                    }
                    if(that.adType == 'open') {
                        that.$emit('fnAdClick')
                    }
                }
                if(needReportClick && !that.isLocalInfo && !(that.needClickShow && !isBrandAd && !that.currentAdInfo.isClickReplace)) {
                    that.fnClickReport()
                }
                let canRefreshAd = true;                                                        // 是否可以刷新广告，API下载类不可以
                // 点击
                if(currentAdInfo.interaction_type == 1) {
                    let clickUrl = that.fnReplaceUrl(currentAdInfo.action_url)
                    if(clickUrl) {
                        setTimeout(() => {
                            if(that.uaInfo) {
                                router.push({
                                    uri: '/WebView',
                                    params: {
                                        webSrc: clickUrl,
                                        userAgent: that.uaInfo
                                    }
                                })
                            } else {
                                router.push({
                                    uri: clickUrl
                                })
                            }
                        }, 200)
                    }
                    if((that.adType == 'open' || that.adType == 'pop') && that.$valid) {
                        that.$emit('fnAdClick')
                    }
                }
                // 下载
                if(currentAdInfo.interaction_type == 2) {
                    canRefreshAd = false;                                                       // API下载类不可以刷新广告
                    // 缓存模式判断
                    if(that.adType == 'open' && that.isCacheInfo) {
                        if(that.isDownloadApp) {
                            prompt.showToast({
                                message: '应用下载中...'
                            })
                            return
                        }else {
                            prompt.showToast({
                                message: '开始下载应用...'
                            })
                            that.isDownloadApp = true
                            that.$app.openAdLocalInfo = {
                                currentAdInfo: currentAdInfo,
                                clickX: that.clickX,
                                clickY: that.clickY,
                                offsetX: that.offsetX,
                                offsetY: that.offsetY,
                                leaveClickX: that.leaveClickX,
                                leaveClickY: that.leaveClickY,
                                leaveOffsetX: that.leaveOffsetX,
                                leaveOffsetY: that.leaveOffsetY,
                            }
                            return
                        }
                    }
                    if(that.adType == 'video' && that.isCacheInfo) {
                        if(that.isDownloadApp) {
                            prompt.showToast({
                                message: '应用下载中...'
                            })
                            return
                        }else {
                            prompt.showToast({
                                message: '开始下载应用...'
                            })
                            that.isDownloadApp = true
                            that.$app.videoAdLocalInfo = {
                                currentAdInfo: currentAdInfo,
                                clickX: that.clickX,
                                clickY: that.clickY,
                                offsetX: that.offsetX,
                                offsetY: that.offsetY,
                                leaveClickX: that.leaveClickX,
                                leaveClickY: that.leaveClickY,
                                leaveOffsetX: that.leaveOffsetX,
                                leaveOffsetY: that.leaveOffsetY,
                            }
                            return
                        }
                    }
                    that.fnHasInstalled(currentAdInfo.app_package).then(res => {
                        if(res) {
                            if(currentAdInfo.down_type == 1) {
                                that.fnGetDownloadUrl(currentAdInfo.action_url, 2)
                            }else {
                                that.fnInstallPackage(currentAdInfo.action_url, 2)
                            }
                        }else {
                            if(currentAdInfo.down_type == 1) {
                                that.fnGetDownloadUrl(currentAdInfo.action_url, 2)
                            }else {
                                that.fnInstallPackage(currentAdInfo.action_url, 2)
                            }
                        }
                    })
                }
                // deeplink
                if(currentAdInfo.interaction_type == 3) {
                    canRefreshAd = false;                                                       // API DP类不可以刷新广告
                    that.fnHasInstalled(currentAdInfo.app_package).then(res => {
                        if(res) {
                            if(currentAdInfo.chn_type === 'API_GDT') {
                                let click_trackers = currentAdInfo.fallback_url
                                if(click_trackers) {
                                    that.fnReportLog(click_trackers, 'click')
                                }
                            }
                            that.adReport('app_installed_trackers', 'app_install');                             // app_install事件上报
                            if(!currentAdInfo.action_url) {
                                return
                            }
                            that.adReport('wakeup_start_trackers', 'wakeup_start');                             // wakeup_start事件上报
                            that.needReportDeeplink = true
                            clearTimeout(that.deeplinkReportTimeout)
                            that.deeplinkReportTimeout = setTimeout(() => {
                                that.needReportDeeplink = false
                                that.adReport('wakeup_failed_trackers', 'wakeup_failed'); 
                            }, 3000)
                            let deeplinkUrl = that.fnReplaceUrl(currentAdInfo.action_url)
                            if(deeplinkUrl) {
                                setTimeout(() => {
                                    router.push({
                                        uri: deeplinkUrl
                                    })
                                    that.fnPageHideTimer();                                                     // 广告点击页面跳转超时判断
                                }, 200)
                            }
                            if((that.adType == 'open' || that.adType == 'pop') && that.$valid) {
                                that.$emit('fnAdClick')
                            }
                        }else {
                            that.adReport('app_no_installed_trackers', 'no_app');                               // no_app事件上报
                            if(currentAdInfo.fallback_type == 1) {
                                let clickUrl = that.fnReplaceUrl(currentAdInfo.fallback_url)
                                if(clickUrl) {
                                    setTimeout(() => {
                                        if(that.uaInfo) {
                                            router.push({
                                                uri: '/WebView',
                                                params: {
                                                    webSrc: clickUrl,
                                                    userAgent: that.uaInfo
                                                }
                                            })
                                        } else {
                                            router.push({
                                                uri: clickUrl
                                            })
                                        }
                                        that.fnPageHideTimer();                                                 // 广告点击页面跳转超时判断
                                    }, 200)
                                }
                                if((that.adType == 'open' || that.adType == 'pop') && that.$valid) {
                                    that.$emit('fnAdClick')
                                }
                            } 
                            if(currentAdInfo.fallback_type == 2) {
                                // 缓存模式判断
                                if(that.adType == 'open' && that.isCacheInfo) {
                                    if(that.isDownloadApp) {
                                        prompt.showToast({
                                            message: '应用下载中...'
                                        })
                                        return
                                    }else {
                                        prompt.showToast({
                                            message: '开始下载应用...'
                                        })
                                        that.isDownloadApp = true
                                        that.$app.openAdLocalInfo = {
                                            currentAdInfo: currentAdInfo,
                                            clickX: that.clickX,
                                            clickY: that.clickY,
                                            offsetX: that.offsetX,
                                            offsetY: that.offsetY,
                                            leaveClickX: that.leaveClickX,
                                            leaveClickY: that.leaveClickY,
                                            leaveOffsetX: that.leaveOffsetX,
                                            leaveOffsetY: that.leaveOffsetY,
                                        }
                                        return
                                    }
                                }
                                if(that.adType == 'video' && that.isCacheInfo) {
                                    if(that.isDownloadApp) {
                                        prompt.showToast({
                                            message: '应用下载中...'
                                        })
                                        return
                                    }else {
                                        prompt.showToast({
                                            message: '开始下载应用...'
                                        })
                                        that.isDownloadApp = true
                                        that.$app.videoAdLocalInfo = {
                                            currentAdInfo: currentAdInfo,
                                            clickX: that.clickX,
                                            clickY: that.clickY,
                                            offsetX: that.offsetX,
                                            offsetY: that.offsetY,
                                            leaveClickX: that.leaveClickX,
                                            leaveClickY: that.leaveClickY,
                                            leaveOffsetX: that.leaveOffsetX,
                                            leaveOffsetY: that.leaveOffsetY,
                                        }
                                        return
                                    }
                                }
                                if(currentAdInfo.down_type == 1) {
                                    that.fnGetDownloadUrl(currentAdInfo.fallback_url, 3)
                                }else {
                                    that.fnInstallPackage(currentAdInfo.fallback_url, 3)
                                }
                            }
                        }
                    })
                }
                if(!this.fnAdRefreshSwitch()) {                                                 // 广告刷新开关，开关关闭时，不用设置下面的定时器
                    return false;
                }
                if(isAdButton) {                                                                // 华为ad-button点击后，立即执行广告刷新
                    setTimeout(() => {
                        this.fnAdRefresh();
                    }, 500);
                    return false;
                }
                if(canRefreshAd) {
                    this.fnPageHideTimer();                                                     // 广告点击页面跳转超时判断
                }
            }, 200);
        },
        // 获取下载地址
        fnGetDownloadUrl(url, type) {
            if(!url) {
                return
            }
            let that = this
            let requestUrl = that.fnReplaceUrl(url)
            fetch.fetch({
                url: requestUrl,
                method: 'GET',
                success: function(res) {
                    try {
                        let responseData = res && res.data ? JSON.parse(res.data) : ''
                        if(responseData && responseData.ret === 0 && responseData.data) {
                            that.downloadLink = responseData.data.dstlink
                            that.clickId = responseData.data.clickid
                            that.fnInstallPackage(that.downloadLink, type)
                        }
                    } catch (err) {
                        console.log('获取下载地址失败')
                    }
                },
            })    
        },
        // 判断应用是否安装
        fnHasInstalled(packageName) {
            console.log('-----AdUnion-----fnHasInstalled-----')
            return new Promise((resolve, reject) => {
                console.log(packageName)
                if(!packageName) {
                    console.log('-----AdUnion-----fnHasInstalled-----包名不存在')
                    resolve(0)
                }
                if(!packageName) {
                    return
                }
                console.log('-----AdUnion-----fnHasInstalled-----校验包名')
                pkg.hasInstalled({
                    package: packageName,
                    success: function(data) {
                        if(data.result) {
                            console.log('-----AdUnion-----fnHasInstalled-----软件已安装')
                            resolve(1)
                        }else {
                            console.log('-----AdUnion-----fnHasInstalled-----软件未安装')
                            resolve(0)
                        }
                    },
                    fail: function(data, code) {
                        console.log('-----AdUnion-----fnHasInstalled-----获取包信息失败')
                        resolve(0)
                    }
                })
            })
        },
        // 安装应用
        fnInstallPackage(downloadLink, clickType = 0) {
            let that = this
            let currentAdInfo = JSON.parse(JSON.stringify(that.currentAdInfo));
            console.log('-----AdUnion-----fnInstallPackage-----')
            if(!currentAdInfo || !downloadLink) {
                return
            }
            if(that.isDownloadApp) {
                prompt.showToast({
                    message: '应用下载中...'
                })
                return
            }
            let downloadUrl = that.fnReplaceUrl(downloadLink)
            request.download({
                url: downloadUrl,
                description: currentAdInfo.brand_name ? currentAdInfo.brand_name : '软件包',
                filename: (currentAdInfo.app_package ? currentAdInfo.app_package : '软件包')  + '.apk',
                success: function(ret) {
                    if(!that.isLocalInfo) {
                        prompt.showToast({
                            message: '开始下载应用...'
                        })
                    }
                    network.getType({
                        success: function(data) {
                            if(data && data.type && data.type != 'wifi') {
                                prompt.showToast({
                                    message: '当前处在非WiFi环境，注意流量消耗'
                                })    
                            }
                        }
                    }) 
                    that.isDownloadApp = true
                    that.adReport('download_start_trackers', 'startDownload', '', currentAdInfo);               // startDownload事件上报
                    request.onDownloadComplete({
                        token: ret.token,
                        success: function(data) {
                            prompt.showToast({
                                message: '下载完成，开始安装...'
                            })
                            that.isDownloadApp = false
                            that.adReport('download_finish_trackers', 'finishDownload', '', currentAdInfo);     // 事件上报
                            router.push({
                                uri: data.uri
                            })
                            that.adReport('install_start_trackers', 'startInstall', '', currentAdInfo);         // 事件上报
                            // 检验安装是否完成
                            let checkCount = 0
                            let checkInstalled = setInterval(function() {
                                that.fnHasInstalled(currentAdInfo.app_package).then(res => {
                                    if(res) {
                                        prompt.showToast({
                                            message: '安装已完成'
                                        })
                                        clearInterval(checkInstalled)
                                        that.adReport('install_finish_trackers', 'finishInstall', '', currentAdInfo);   // 事件上报
                                    }else {
                                        checkCount++
                                        if(checkCount >= 10) {
                                            clearInterval(checkInstalled)
                                        }
                                    }
                                })
                            }, 6000)
                        },
                        fail: function(data, code) {
                            console.log('-----AdUnion-----下载完成失败-----')
                        }
                    })
                },
                fail: function(data, code) {
                    console.log('-----AdUnion-----启动下载失败-----')
                }
            })
        },
        // 上报deeplink
        fnReportDeepLink() {
            let that = this
            let currentAdInfo = that.currentAdInfo
            if(!that.needReportDeeplink) {
                return
            }
            clearTimeout(that.deeplinkReportTimeout)
            that.needReportDeeplink = false
            that.adReport('wakeup_finish_trackers', 'wakeup_finish');                   // 事件上报
        },
        // 日志上报
        fnReportLog(url, event) {
            // console.log('-----AdUnion-----fnReportLog-----')
            let that = this
            let isVideo = ''
            if(event == 'playFinish' || event == 'playReportError') {
                isVideo = event
            }
            let requestUrl = this.fnReplaceUrl(url, isVideo)
            let fetchInfo = {
                url: requestUrl,
                method: 'GET',
                success: function() {
                    console.log(`-----AdUnion-----上报成功-----${event}-----${that.adType}`)
                },
            }
            if(this.uaInfo) {
                fetchInfo.header = {
                    'User-Agent': this.uaInfo
                }
            }
            fetch.fetch(fetchInfo)            
        },
        // 地址宏替换
        fnReplaceUrl(url, type = '') {
            let that = this
            let currentAdInfo = that.currentAdInfo
            let retUrl = url
            let now = new Date().getTime()
            let videoNow = that.currentPlayTime
            retUrl = retUrl.replace('__EVENT_TRACKER__', currentAdInfo.event_tracker)
            retUrl = retUrl.replace('__TRACKER__', currentAdInfo.tracker)
            retUrl = retUrl.replace('__ITS___', currentAdInfo.imp_time)
            // 视频替换
            if(type == 'playFinish' || type == 'playReportError') {
                retUrl = retUrl.replace('__VIDEO_TIME__', currentAdInfo.video_duration)
                retUrl = retUrl.replace('__BEGIN_TIME__', 0)
                retUrl = retUrl.replace('__END_TIME__', currentAdInfo.video_duration)
                retUrl = retUrl.replace('__PLAY_FIRST_FRAME__', 1)
                retUrl = retUrl.replace('__PLAY_LAST_FRAME__', 1)
                retUrl = retUrl.replace('__SCENE__', 1)
                retUrl = retUrl.replace('__TYPE__', 1)
                retUrl = retUrl.replace('__BEHAVIOR__', 1)
                retUrl = retUrl.replace('__STATUS__', type == 'playReportError' ? 2 : 0)
                // return retUrl
            }
            let replaceType = 0;
            if (that.hasExposureReplace) {                                  // 曝光替换
                replaceType = 1;
            }
            if (that.hasClickReplace) {                                     // 点击替换
                replaceType = 2;
            }
            let clickType = CLICK_TYPE_AD[that.clickType.clickType] || 0;   // 点击类型
            // 点击替换
            retUrl = retUrl.replace('__REQ_WIDTH__', that.adRequestData.adslot_width)
            retUrl = retUrl.replace('__REQ_HEIGHT__', that.adRequestData.adslot_height)
            retUrl = retUrl.replace('__WIDTH__', that.adRequestData.adslot_width)
            retUrl = retUrl.replace('__HEIGHT__', that.adRequestData.adslot_height)
            retUrl = retUrl.replace('__DOWN_X__', that.clickX || '-999')
            retUrl = retUrl.replace('__DOWN_Y__', that.clickY || '-999')
            retUrl = retUrl.replace('__UP_X__', that.leaveClickX || that.clickX || '-999')
            retUrl = retUrl.replace('__UP_Y__', that.leaveClickY || that.clickY || '-999')
            retUrl = retUrl.replace('__RE_DOWN_X__', that.offsetX || that.clickX || '-999')
            retUrl = retUrl.replace('__RE_DOWN_Y__', that.offsetY || that.clickY || '-999')
            retUrl = retUrl.replace('__RE_UP_X__', that.leaveOffsetX || that.offsetX || that.leaveClickX || that.clickX || '-999')
            retUrl = retUrl.replace('__RE_UP_Y__', that.leaveOffsetY || that.offsetY || that.leaveClickY ||that.clickY || '-999')
            retUrl = retUrl.replace('__TS__', now)
            retUrl = retUrl.replace('__SECONDS__', parseInt(now / 1000))
            retUrl = retUrl.replace('__PROGRESS_MS__', parseInt(videoNow * 1000))
            retUrl = retUrl.replace('__PROGRESS__', parseInt(videoNow))
            retUrl = retUrl.replace('__MC__', clickType);                                           // 误点击类型
            retUrl = retUrl.replace('__ETT__', replaceType);                                        // 广告替换类型
            // 效果转化
            retUrl = retUrl.replace('__CLICK_ID__', that.clickId)
            return retUrl
        },
        // 打开视频音量
        fnVideoAudioOpen() {
            this.isVideoMuted = false
        },
        // 关闭视频音量
        fnVideoAudioClose() {
            this.isVideoMuted = true
        },
        // 视频播放上报
        fnVideoPrepared() {
            let that = this
            that.adReport('win_trackers', 'win', 'API');                            // win事件上报
            that.adReport('load_trackers', 'load', 'API');                          // load事件上报
            that.adReport('play_start_trackers', 'playStart');                      // 事件上报
            if(that.needSetTimes) {
                that.$app.$def.setStorageFile(that, {
                    key: 'videoTimes',
                    value: new Date().getTime()
                })
            }
        },
        // 视频开始播放
        fnVideoStart() {
            clearTimeout(this.videoTimeout)
        },
        // 视频播放结束
        fnVideoFinish() {
            let that = this
            that.$app.lastOpenPage = ''
            if(that.isLocalInfo && that.adAlias != 'readVideo') {
                prompt.showToast({
                    message: '观看结束，获得奖励'
                })
            }
            that.isEnded = 'true'
            that.adEndTime = new Date().getTime()
            that.shenceLog('ADClose')
            that.$emit('videoClose', {
                adAlias: that.adAlias,
            })
            that.$emit('videoAdShow', {
                adAlias: that.adAlias,
            })
            that.adReport('play_finish_trackers', 'playFinish');                            // 事件上报
        },
        // 视频播放进度更新
        fnTimeUpdate(data) {
            this.currentPlayTime = data.currenttime
            clearTimeout(this.videoTimeout)
            let currentAdInfo = this.currentAdInfo
            let cur = Math.floor(data.currenttime)
            this.videoTime = currentAdInfo.video_duration - cur
            if(this.videoCloseTime > 0) {
                this.videoCloseTime = currentAdInfo.skip_btn_timing - cur
            }
            if(this.videoTime < 0) {
                this.$element('video') && this.$element('video').pause()
                this.fnVideoFinish()
            }
        },
        // 视频直接关闭，触发事件
        fnCloseEvent() {
            let that = this
            that.$app.lastOpenPage = ''
            let currentAdInfo = that.currentAdInfo
            // 待下发
            if(currentAdInfo.click_behive) {
                that.$element('video') && that.$element('video').pause()
                that.isPreClose = true
                that.clickType.isClose = true;                          // 关闭误触
                that.fnClickSwitch()
            }else {
                that.$element('video') && that.$element('video').pause()
                that.isEnded = 'true'
                that.adEndTime = new Date().getTime()
                that.shenceLog('ADClose')
                that.$emit('videoClose', {
                    adAlias: that.adAlias
                })
                that.$emit('videoAdShow', {
                    adAlias: that.adAlias
                })
            }
        },
        // 关闭视频
        fnCloseVideoAd(flag) {
            let that = this
            let currentAdInfo = that.currentAdInfo
            if(that.isClickShow || that.isDownloadShow) {
                that.isClickShow = false
                that.isDownloadShow = false
                return
            }
            // 待下发
            if(currentAdInfo.click_behive && flag && flag == 'isClick' && !that.hasFakeClick) {
                that.hasFakeClick = true
                that.clickType.isClose = true;                          // 关闭误触
                that.fnClickSwitch()
                return
            }
            that.$app.lastOpenPage = ''
            that.$emit('videoAdClose', {
                adAlias: that.adAlias,
                isEnded: that.isEnded,
                ecpm: that.currentAdInfo.cpm
            })
            if(that.isEnded === 'true') {
                that.fnSetVideoPlayStorage()
            }
        },
        // 视频主动关闭
        fnCloseVideo() {
            let that = this
            if(that.isClickShow || that.isDownloadShow) {
                that.isClickShow = false
                that.isDownloadShow = false
                if(that.isPreClose) {
                    that.isEnded = 'true'
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoEnd', {
                        isEnded: 'true',
                        adAlias: that.adAlias,
                        ecpm: that.currentAdInfo.cpm
                    })
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                        // back: 'true'
                    })
                    that.fnSetVideoPlayStorage()
                    return
                }
                that.$element('video') && that.$element('video').start()
                return
            }
            let currentAdInfo = that.currentAdInfo
            let closeTime = (currentAdInfo.close_btn_timing || currentAdInfo.close_btn_timing === 0) ? currentAdInfo.close_btn_timing : 5
            if(currentAdInfo.video_duration - that.videoTime < closeTime) {
                return
            }
            console.log('-----AdUnion-----fnCloseVideo-----')
            that.$element('video') && that.$element('video').pause()
            prompt.showDialog({
                title: '提醒',
                message: that.adAlias == 'readVideo' ? '视频还未播放完成' : '观看完整视频才能获得奖励',
                buttons: [
                    {
                        text: '继续观看',
                        color: '#ff0000'
                    },
                    {
                        text: that.adAlias == 'readVideo' ? '结束观看' : '放弃奖励',
                        color: '#999999'
                    }
                ],
                autocancel: false,
                success: function(data) {
                    if(data.index !== 1) {
                        that.$element('video') && that.$element('video').start()
                    }else {
                        that.$app.lastOpenPage = ''
                        that.adEndTime = new Date().getTime()
                        that.shenceLog('ADClose')
                        that.$emit('videoClose', {
                            adAlias: that.adAlias,
                            back: 'true'
                        })
                    }
                },
                cancel: function() {
                    that.$app.lastOpenPage = ''
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                        back: 'true'
                    })
                },
                fail: function() {
                    that.$app.lastOpenPage = ''
                    that.adEndTime = new Date().getTime()
                    that.shenceLog('ADClose')
                    that.$emit('videoClose', {
                        adAlias: that.adAlias,
                        back: 'true'
                    })
                }
            })
        },
        // 厂商商业化上报
        fnReportBrandAd() {
            this.adStartTime = new Date().getTime();
            this.adReport('send2_trackers', 'send2', 'QAPP');                           // send2事件上报
            this.adReport('win_trackers', 'win', 'QAPP');                               // win事件上报
            this.adReport('load_trackers', 'load', 'QAPP');                             // load事件上报
            this.shenceLog('PAdLSState', false, 550001, '加载成功');
            console.log('serviceAd onLoad', this.adUnitId);
        },
        // 视频播放事件上报等
        fnVideoPlayReport () {
            let that = this;
            // 兼容热启动
            that.$emit('brandVideoShow');
            that.$emit('videoLoad');
            that.adStartTime = new Date().getTime();
            that.adReport('imp_trackers', 'show', 'QAPP');                                      // imp事件上报
            that.shenceLog('ADShow');
            that.adReport('play_start_trackers', 'playStart', 'QAPP');                          // playStart事件上报
            if (that.needSetTimes) {
                that.$app.$def.setStorageFile(that, {
                    key: 'videoTimes',
                    value: new Date().getTime()
                });
            }
        },
        // 厂商广告展示上报
        fnReportAdShow() {
            console.log('-----adUnion-----fnReportAdShow-----')
            this.hasReportBrandAdShow = true
            this.brandAdShowTime = new Date().getTime()
            let currentAdInfo = this.currentAdInfo
            if(currentAdInfo.adId) {
                this.serviceAd.reportAdShow({ adId: currentAdInfo.adId })
            }
        },
        //厂商广告点击上报
        fnReportAdClick() {
            console.log('-----adUnion-----fnReportAdClick-----');
            if (!this.hasReportBrandAdShow || this.hasClickReplace && this.clickType.clickCount === 1) {                        // 如果还没上报曝光，或者是点击替换，需要先进行曝光上报，再延迟进行点击上报
                this.fnReportAdShow();
                setTimeout(() => {
                    brandReport.call(this);
                }, 200);
                return false;
            }
            brandReport.call(this);

            function brandReport() {                                                                                            // 厂商上报
                let {
                    adId,
                    btn_text,
                    chn_type,
                    autoDownloadType,
                    isHuaweiDownLoadAd,
                    ext
                } = this.currentAdInfo;
                if (adId && this.serviceAd) {
                    let nowTime = new Date().getTime()
                    let adInfo = { adId };
                    if (this.isSupportMockClick) {
                        const adClickInfo = this.fnGetAdClickInfo();
                        adInfo = Object.assign({}, adClickInfo, adInfo);
                    }
                    if (ext && ext.mcdms && nowTime - this.brandAdShowTime < ext.mcdms && this.clickType.clickType != 'isReal') {
                        let remainTime = ext.mcdms - (nowTime - this.brandAdShowTime)
                        setTimeout(() => {
                            this.fnClickReport()
                            this.serviceAd.reportAdClick(adInfo);
                        }, remainTime)
                    } else {
                        this.fnClickReport()
                        this.serviceAd.reportAdClick(adInfo);
                    }
                    let isSupportAutoDownLoad = chn_type === 'QAPP_HUAWEI' && Object.prototype.toString.call(this.serviceAd.startDownload).slice(8, -1) === 'Function';
                    if (isSupportAutoDownLoad) {                                                                                // 是否支持自动下载
                        /**
                         * 支持startDownload自动下载API的场景：
                         * 1. autoDownloadType === '1'，全区域点击API自动下载；
                         * 2. autoDownloadType === '2'，按钮区域点击API自动下载；
                         * 3. autoDownloadType === '3'，高引擎版本（1100+）华为组件自动下载，低引擎版本全区域点击API自动下载；
                         * 4. autoDownloadType === '4'，高引擎版本（1100+）华为组件自动下载，低引擎版本按钮区域点击API自动下载；
                        */
                        let isAutoDownload = autoDownloadType === '1' || autoDownloadType === '2' && this.clickType.isBtnClick || autoDownloadType === '3' && !this.isSupportAdButton || autoDownloadType === '4' && !this.isSupportAdButton && this.clickType.isBtnClick;                         // 全区域自动下载，或者按钮区域自动下载，且为按钮点击，或者下发的是华为按钮组件下载，但是引擎版本不支持
                        if (isHuaweiDownLoadAd && isAutoDownload) {
                            let downloadResult = this.serviceAd.startDownload({                                                 // 自动下载
                                adId
                            });
                            console.log('------自动下载结果------', downloadResult);
                        }
                    }
                }
            }
        },
        // 神策打点
        shenceLog(tag, isError = false, errorCode = -9999, errorMsg = '') {
            let that = this
            let currentAdIndex = that.currentAdIndex
            let currentAdInfo = that.currentAdInfo;
            const ADPosition = that.fnGetAdPosition();

            if (tag === 'ADRequest') {
                that.loadAdStartTime = new Date().getTime();                                            // ADRequest时生成loadAdStartTime，本次广告所有事件的RequestId均以该值生成
            }
            if (currentAdInfo && currentAdInfo.chn_type && !currentAdInfo.loadAdStartTime) {
                currentAdInfo.loadAdStartTime = that.loadAdStartTime;                                   // loadAdStartTime和当前广告做绑定，避免预加载时重置loadAdStartTime对当前广告的后续事件造成干扰
            }
            let adLoadType;                                                                             // 存储当前广告加载类型
            let loadAdStartTime = that.loadAdStartTime;
            if (loadAdStartTime) {
                if (['PAdLoad', 'PAdLSState', 'ADShow', 'ADClick', 'ADClose'].indexOf(tag) > -1 && currentAdInfo.loadAdStartTime) {
                    loadAdStartTime = currentAdInfo.loadAdStartTime;                                    // 非广告请求和广告返回时，loadAdStartTime取当前广告绑定的值
                }
                adLoadType = that.adLoadTypeMap['ad_' + loadAdStartTime];                               // 当前广告加载类型，refresh：刷新，preLoad：预加载，realtime：实时加载
                if (!adLoadType) {
                    adLoadType = 'realtime';                                                            // 加载类型默认为realtime：实时加载
                    if (that.isAdRefresh) {
                        adLoadType = 'refresh';
                        that.isAdRefresh = false;
                    }
                    if (that.isPreLoad) {
                        adLoadType = 'preLoad';
                        that.isPreLoad = false;
                    }
                    that.adLoadTypeMap['ad_' + loadAdStartTime] = adLoadType;
                }
            }

            let loadType = '实时加载';
            if (that.adType === 'wall' && (that.adAlias === 'adWallCache' || that.isPreLoad)) {
                loadType = '广告墙预加载'
            }
            if (that.adType === 'banner') {
                if (adLoadType === 'preLoad') {
                    loadType = '提前' + that.preTime + '秒进行加载';
                }
            }
            if (that.adType === 'insert') {
                if (that.preNum && that.preNum > 0) {
                    loadType = '提前' + that.preNum + '页进行加载';
                }
            }
            if (adLoadType === 'refresh') {
                loadType = '广告刷新';
            }
            
            let logData = {
                RequestId: (that.$app && that.$app.headerJson && that.$app.headerJson.userId) ? (that.$app.headerJson.userId + '_' + loadAdStartTime) : ('user_' + loadAdStartTime),
                ADSotId: that.adRequestData.adslot_id,
                ADPosition: ADPosition, // 阅读页顶部, 阅读页中部, 阅读页底部浮动, 任务完成提示信息流, 签到激励视频, 任务激励视频, 任务完成提示激励视频, 冷启动开屏, 热启动开屏, 首页弹窗，阅读页开屏，阅读页激励视频，阅读页章首，阅读页插页
                Imei: that.adRequestData.imei ? that.adRequestData.imei.toString() : '',
                Oaid: that.adRequestData.oaid ? that.adRequestData.oaid.toString() : '',
                AndroidId: that.adRequestData.android_id,
                ADQuickapp: that.adRequestData.allow_qapp_ad ? '支持' : '不支持',
                BookID: that.bookId ? that.bookId.toString() : '',
                BookName: that.bookName || '',
                ChaptersID: that.chapterId ? that.chapterId.toString() : '',
                ChaptersName: that.chapterName || '',
                ChaptersNum: that.chapterIndex || '',
                TacticsId: that.otherInfo && that.otherInfo.userTacticsVo && that.otherInfo.userTacticsVo.tacticsId || '',
                TacticsName: that.otherInfo && that.otherInfo.userTacticsVo && that.otherInfo.userTacticsVo.tacticsName || '',
                SourceId: that.otherInfo && that.otherInfo.userTacticsVo && that.otherInfo.userTacticsVo.sourceId || '',
                SourceName: that.otherInfo && that.otherInfo.userTacticsVo && that.otherInfo.userTacticsVo.sourceName || '',
                ShuntId: that.otherInfo && that.otherInfo.userTacticsVo && (that.otherInfo.userTacticsVo.ShuntID || that.otherInfo.userTacticsVo.shuntID) || '',
                ShuntName: that.otherInfo && that.otherInfo.userTacticsVo && (that.otherInfo.userTacticsVo.ShuntName || that.otherInfo.userTacticsVo.shuntName) || '',
                LoadType: loadType
            }
     
            if(that.currentPage > -1) {
                logData.PageNumber = that.currentPage
            }

            if (that.adType === 'wall') {
                logData.ADListId = that.adWallToken + '_' + (that.adWallInfo && that.adWallInfo.rwi || '')
            }

            if (tag === 'ADResponse') {
                if (!isError) {
                    const strMap = {
                        QAPP: '厂商',
                        SDK_BAIDU: '百度',
                        API: '联盟',
                        API_LOCAL: '联盟缓存'
                    }
                    let arr = [];
                    if (that.adsCacheInfo && that.adsCacheInfo.length) {
                        that.adLength = that.adsCacheInfo.length
                        that.adsCacheInfo.forEach(item => {
                            let chn_type = item.chn_type || 'API_';
                            if (chn_type === 'SDK_BAIDU') {
                                arr.push(strMap['SDK_BAIDU']);
                            }
                            let key = chn_type.split('_')[0];
                            if (key === 'QAPP') {
                                arr.push(strMap['QAPP']);
                            }
                            if (key === 'API') {
                                let isLocalCache = item.isLocalCache
                                if(isLocalCache) {
                                    arr.push(strMap['API_LOCAL']);
                                } else {
                                    arr.push(strMap['API']);
                                }
                            }
                        });
                        that.adLoadOrder = arr.join('+');
                    }
                }
                const loadAdEndTime = new Date().getTime()
                // 广告请求 -> 广告返回 耗时
                logData.TimeSpent = loadAdEndTime - loadAdStartTime
            }

            if (['ADResponse', 'ADShow', 'ADClick', 'ADClose'].indexOf(tag) > -1) {
                logData.ADErrorCode = isError ? errorCode.toString() : '0'
                logData.AdNumber = isError ? 0 : that.adLength
                logData.ADLoadOrder = isError ? '无' : that.adLoadOrder;
            }

            let isBrandAd = false

            if (['PAdLoad', 'PAdLSState', 'ADShow', 'ADClick', 'ADClose'].indexOf(tag) > -1) {
                isBrandAd = currentAdInfo.chn_type && currentAdInfo.chn_type.split('_')[0] === 'QAPP';
                logData.ADChnType = currentAdInfo.chn_type ? currentAdInfo.chn_type.toString() : ''
                logData.ADEdition = currentAdInfo.chn_type === 'SDK_BAIDU' ? 'SDK_BAIDU' : (isBrandAd ? (that.brandAdVersion === 2 ? '2.0' : '1.0') : 'API');
                logData.CodeID = currentAdInfo && currentAdInfo.chn_slot_id || '';
                logData.CLayered = that.adLength + '-' + that.adLength + '-' + (currentAdIndex + 1)
                logData.Order = (currentAdIndex + 1) + '-' + '1' + '-' + '1';
            }

            if (tag === 'PAdLoad') {
                that.brandAdStartTime = new Date().getTime()
                // 广告请求 -> 厂商请求 耗时
                logData.TimeSpent = that.brandAdStartTime - loadAdStartTime
            }

            if (tag === 'PAdLSState') {
                const brandAdEndTime = new Date().getTime()
                logData.StateCode = errorCode
                logData.StateMsg = errorMsg
                logData.StylesType = currentAdInfo.creativeType ? currentAdInfo.creativeType.toString() : ''
                // 厂商请求 -> 厂商返回 耗时
                logData.TimeSpent = brandAdEndTime - that.brandAdStartTime
                if(errorCode === 550001 && that.brandAdBackInfo) {
                    let adInfo = that.brandAdBackInfo
                    logData.ADTitle = adInfo.title
                    logData.ADDescription = adInfo.desc
                    logData.ADIconUrl = adInfo.icon
                    logData.ADBtnText = adInfo.clickBtnTxt
                    logData.ADImageUrl = adInfo.imgUrlList && adInfo.imgUrlList.length && adInfo.imgUrlList[0] || ''
                    logData.ADStyleType = adInfo.creativeType
                    logData.ADInteractionType = adInfo.interactionType;
                }
            }

            if (tag === 'ADShow') {
                that.adShowTime = new Date().getTime()
                // 广告请求 -> 广告曝光 耗时
                logData.TimeSpent = that.adShowTime - loadAdStartTime
            }

            if (tag === 'ADClick') {
                const adClickTime = new Date().getTime()
                // 广告曝光 -> 广告点击 耗时
                logData.TimeSpent = adClickTime - that.adShowTime;
                if (that.isRealClick) {
                    logData.ADclickdownx = that.offsetX ? that.offsetX : '';
                    logData.ADclickdowny = that.offsetY ? that.offsetY : '';
                    logData.ADclickupx = that.leaveOffsetX ? that.leaveOffsetX : '';
                    logData.ADclickupy = that.leaveOffsetY ? that.leaveOffsetY : '';
                }
            }

            if (tag === 'ADClose') {
                const adCloseTime = new Date().getTime()
                // 广告曝光 -> 广告点击 耗时
                logData.TimeSpent = adCloseTime - that.adShowTime
            }

            if (['ADShow', 'ADClick'].indexOf(tag) > -1) {
                logData.Ecpm = currentAdInfo && currentAdInfo.cpm ? +currentAdInfo.cpm : ''
                logData.Ecpc = currentAdInfo && currentAdInfo.cpc ? +currentAdInfo.cpc : ''
            }

            if (['ADShow', 'ADClick', 'ADClose'].indexOf(tag) > -1) {
                logData.ADTitle = currentAdInfo.title || ''
                logData.ADDescription = currentAdInfo.description || ''
                logData.ADIconUrl = currentAdInfo.icon_url || ''
                logData.ADBtnText = currentAdInfo.btnContent + '_' + currentAdInfo.btn_text 
                logData.ADImageUrl = currentAdInfo.images && currentAdInfo.images[0] && currentAdInfo.images[0].url || ''
                logData.ADBrandName = currentAdInfo.brand_name || ''
                logData.ADVideoUrl = currentAdInfo.video_url || ''
                logData.ADVideoDuration = currentAdInfo.video_duration ? currentAdInfo.video_duration.toString() : ''
                logData.ADPlayVoice = currentAdInfo.play_voice ? 1 : 0
                logData.ADCloseBtnTiming = (currentAdInfo.close_btn_timing || currentAdInfo.close_btn_timing === 0) ? currentAdInfo.close_btn_timing.toString() : ''
                logData.ADAppPackage = currentAdInfo.app_package || ''
                logData.ADText = currentAdInfo.adtext || ''
                logData.ADLogo = currentAdInfo.adlogo || ''
                logData.ADStyleType = isBrandAd ? (currentAdInfo.creativeType ? currentAdInfo.creativeType.toString() : '') : (currentAdInfo.style_type ? currentAdInfo.style_type.toString() : '')
                logData.ADInteractionType = isBrandAd ? (currentAdInfo.interactionType ? currentAdInfo.interactionType.toString() : '') : (currentAdInfo.interaction_type ? currentAdInfo.interaction_type.toString() : '')
                logData.ADActionUrl = currentAdInfo.action_url || ''
                logData.ADFallbackType = currentAdInfo.fallback_type ? currentAdInfo.fallback_type.toString() : ''
                logData.ADFallbackUrl = currentAdInfo.fallback_url || ''
                logData.ADWidth = that.fnGetAdSize('width')
                logData.ADHeight = that.fnGetAdSize('height')
                if (that.hasExposureReplace) {
                    logData.ADChnType += '_LOCAL_CACHE';
                }
                if (that.hasClickReplace) {
                    logData.ADChnType += '_REPLACE_CACHE';
                }
                if (that.currentAdInfo.isLocalCache) {
                    logData.ADChnType += '_LOCAL_API';
                }
            }

            if (['ADClick', 'ADClose'].indexOf(tag) > -1) {
                if (that.adType === 'video') {
                    const videoSpend = that.adEndTime - that.adStartTime
                    let videoPlayTime = ''
                    if (isBrandAd) {
                        videoPlayTime = parseInt(videoSpend / 1000)
                    } else {
                        videoPlayTime = that.isEnded === 'true' ? parseInt(currentAdInfo.video_duration) : parseInt(currentAdInfo.video_duration - that.videoTime)
                    }
                    logData.ADVideoIsEnd = that.isEnded
                    logData.ADVideoplayTime = videoPlayTime
                    logData.ADVideoEndTime = parseInt(videoSpend / 1000)
                }
                let adShowTime = that.fnGetAdShowTime();      // 获取广告展示时长
                logData.ADShowTime =  adShowTime;
            }

            if (tag == 'ADClick') {
                let adClickType = '';
                let isConfirmPopup = false;                                             // 是否API二次确认弹窗
                if (that.needClickShow && currentAdInfo.chn_type.indexOf('API') === 0 && !currentAdInfo.isClickReplace) {
                    isConfirmPopup = true;
                }
                if (that.adType == 'video') {
                    adClickType = that.isEnded === 'true' ? '尾帧点击' : '播放中点击';
                    if (isConfirmPopup) {                                               // API二次确认弹窗
                        adClickType += '-TC点击';
                    }
                } else {
                    if (isConfirmPopup) {                                               // API二次确认弹窗
                        adClickType = 'TC点击';
                    } else {
                        const clickTypeMap = {
                            isAddBtn: 'B点击',
                            isClose: 'C点击',
                            isExtendArea: 'E点击',
                            isReal: '点击',
                            isShake: 'S点击',
                            isTouch: 'T点击',
                            isAutoClick: 'Z点击',
                            isAdButton: 'AB点击',
                            isExitButton: 'EB点击',
                            isFullScreenCover: 'FSC点击',
                        }
                        adClickType = that.clickType && that.clickType.clickType && clickTypeMap[that.clickType.clickType] || '点击';
                    }
                }
                logData.ADClickType = adClickType
            }

            if (tag == 'ADClose') {               
                let adCloseType = ''
                if (that.adType == 'video') {
                    if (isBrandAd) {
                        adCloseType = '厂商关闭'
                    } else {
                        if(that.isEnded == 'true') {
                            adCloseType = '自动关闭'
                        }else {
                            adCloseType = '回退键关闭'
                        }
                    }
                } else {
                    adCloseType = '关闭'
                }
                logData.ADCloseType = adCloseType
            }

            that.$app && that.$app.shenceLog && that.$app.shenceLog.log(that, 'track', tag, logData);
        },
        fnOtherClick() {
            console.log('无用点击')
        },
        // 广告墙打点上报
        fnAdWallReport(event, params = {}) {
            let that = this
            let nowTime = new Date().getTime()
            let logId = 'kyy' + (that.$app.headerJson.userId ? that.$app.headerJson.userId : '')
            logId = logId + (nowTime + '').slice(logId.length - 16)
            fetch.fetch({
                url: that.$app.adWallReportUrl,
                data: encodeURI('json=' + JSON.stringify({
                    log_id: logId,
                    bline: 'hkx_kyy',
                    pline: 'business',
                    pkna: that.$app.headerJson.pname,
                    cts: nowTime,
                    app_version: that.$app.$data.appVer,
                    chid: that.$app.headerJson.channelCode,
                    uid: that.$app.headerJson.userId,
                    imei: that.imei ? that.imei : '',
                    oaid: that.oaid ? that.oaid : '',
                    type: 'wall',
                    event: event, // wall_imp/call_wall/call_wall_fail/call_wall_loaded/ad_imp/ad_clk
                    data: {
                        wall_id: that.adWallToken,	 
                        chapter_num: that.chapterIndex ? that.chapterIndex : '',
                        sdk_version: '1.0.0', 
                        error_msg: params.error ? params.error : '',
                        response_time: params.times ? params.times : '',
                        ad_count: params.count ? params.count : '',
                        rwi: that.adWallInfo && that.adWallInfo.rwi ? that.adWallInfo.rwi : ''
                    }
                })),
                header: Object.assign({}, that.$app.headerJson, {'Content-Type': 'application/x-www-form-urlencoded'}),
                method: 'POST',
                success: function() {
                    console.log(`-----adWall-----上报成功-----${event}-----`)
                },
            })
        },
        // 判断广告位是否支持厂商组件
        fnSupportBrandAd() {
            return (this.adType == 'message' || this.adType == 'banner' || this.adType == 'tip' || this.adType == 'reward' || this.adType == 'open' || this.adType == 'wall' || this.adType === 'pop' || this.adType == 'pre' || this.adType == 'insert' || this.adType == 'back')
        },
        /**
         * 底部广告间隔请求
         */
        fnBannerAdRepeat() {
            if(this.adType === 'banner' && this.isRepeat) {
                console.log('----------fnBannerAdRepeat----------底部广告间隔请求')
                let bannerAdTime = this.currentAdInfo.imp_time ? this.currentAdInfo.imp_time : this.repeatTime * 1000;
                let bannerAdPreTime = bannerAdTime - this.preTime * 1000;
                clearTimeout(this.bannerAdTimeout)
                clearTimeout(this.bannerAdPreTimeout)
                this.bannerAdTimeout = setTimeout(() => {
                    if(this.$app && this.$app.isReadPageShow) {
                        this.fnBannerAdReload()
                    } else {
                        this.isNeedRefresh = true
                    }
                }, bannerAdTime)
                if(this.preTime && this.preTime > 0) {                    
                    this.bannerAdPreTimeout = setTimeout(() => {
                        console.log('----------fnBannerAdRepeat----------底部广告间隔请求预加载')
                        if(this.$app && this.$app.bannerAdInfo) {
                            return
                        }
                        if(this.$app && this.$app.isReadPageShow) {
                            this.isPreLoad = true
                            this.isPreLoading = true;                                   // 是否正在预加载广告请求
                            this.fnGetAd(true)
                        }
                    }, bannerAdPreTime)
                }
            }
        },
        /**
         * 底部广告加载判断
         */
        fnBannerAdReload() {
            console.log('----------fnBannerAdReload----------底部广告加载判断')
            if(this.adType === 'banner' && this.isRepeat && this.$app && this.$app.bannerAdInfo) {
                this.fnReportAdClose();
                let bannerAdInfo = this.$app.bannerAdInfo
                this.fnInitAdParams()
                this.adsCacheInfo = JSON.parse(JSON.stringify(bannerAdInfo))
                this.$app.bannerAdInfo = false
                setTimeout(() => {
                    this.fnChoiceChnAd()
                }, 200)
                return
            }
            this.fnBannerAdRepeat();                                        // 如果加载失败，开始下一轮轮播
        },
        /**
         * 曝光次数判断
         */
        fnShowTimesChange() {
            if(this.isNeedRefresh && this.adType === 'banner') {
                this.isNeedRefresh = false
                this.fnBannerAdReload()
            }
        },
        /**
         * 百度支持
         */
        fnSupportBaidu() {
            if (this.isDoubleOpen) {                        // 双开屏第二个开屏不支持百度SDK
                return false;
            }
            return ['banner', 'message', 'insert', 'pre', 'back', 'open'].indexOf(this.adType) > -1;
        },
        /**
         * 视频loading
         */
        fnPreProgressClose() {
            this.canVideoPreShow = false
        },
        /**
         * 关闭弹窗关闭
         */
        fnConfirmClose(evt) {
            if(evt && evt.detail && (evt.detail.adType === 'message' || evt.detail.adType === 'banner' || evt.detail.adType === 'pre' || evt.detail.adType === 'insert') && evt.detail.randomTime == this.randomTime) {
                this.fnReportAdClose();
                this.isExtraClose = false
                this.isExtraShow = false 
            }
        },
        /**
         * 判断是否支持新版广告组件
         */
        fnNewBrandAd() {
            const serviceAd = require('@service.ad')
            const brand = this.deviceInfo.brand.toLowerCase()
            const code = this.deviceInfo.platformVersionCode
            const isNativeAd = this.fnSupportBrandAd()
            if(!serviceAd) {
                console.log('serviceAd not support')
                return
            }
            if((brand === 'oppo' || brand === 'realme' || brand === 'oneplus') && code >= 1110) {
                if(serviceAd.setKeyWords) {
                    try {
                        serviceAd.setKeyWords({
                            transportData: this.$app && this.$app.headerJson && this.$app.headerJson.channelCode || ''
                        })
                    } catch (e) {
                        console.log('setKeyWords error')
                    }
                }
            }
            try {
                let canUseNewBrandAd = serviceAd.canIUse({ type: 'native' });
                // 测试 待修改
                if (this.brandAdSwitch && canUseNewBrandAd && brand === 'vivo' && code >= 1094 && isNativeAd) {
                    this.isSupportNewBrandAd = true
                }
                if (this.brandAdSwitch && (brand === 'oppo' || brand === 'realme' || brand === 'oneplus') && code >= 1102 && isNativeAd) {
                    this.isSupportNewBrandAd = true
                }
                if (this.brandAdSwitch && (brand === 'oppo' || brand === 'realme' || brand === 'oneplus') && code >= 1114 && isNativeAd && this.$app.brandAdPreloadSwitch) {
                    this.oppoBrandAdPreload = true
                }
            } catch (e) {
                console.log('不支持厂商2.0广告')
            }
        },
        /**
         * 初始化新版广告组件
         * @param {Number} currentAdIndex 当前策略索引
         * @param {Boolean} isPre 是否预加载
         */
        fnInitNewBrandAd(currentAdIndex, isPre = false) {
            let that = this
            const serviceAd = require('@service.ad')
            const token = that.serviceAdToken
            const isVivo = that.serviceAdBrand === 'vivo'
            if(!isPre) {
                that.shenceLog('PAdLoad', false, 550000, '加载');
                that.adReport('req2_trackers', 'req2', 'QAPP'); 
            }
            // 有缓存数据
            if(!isPre && that.$app && that.$app.adLists && that.$app.adLists[token] && that.$app.adLists[token].length > 0) {
                let data = {
                    adList: []
                }
                let adInfo = that.$app.adLists[token].shift()
                data.adList.push(adInfo)
                that.fnNewBrandAdPreload(currentAdIndex, isPre, token, data)
                return
            }else {
                console.log('----------fnInitNewBrandAd----------preload----------')
                try {                
                    serviceAd.preloadAd({
                        adUnitId: token,
                        type: 'native',
                        adCount: that.adCount,
                        channel: that.$app && that.$app.headerJson && that.$app.headerJson.channelCode || '',
                        success: (data) => {
                            that.fnNewBrandAdPreload(currentAdIndex, isPre, token, data)
                        }, fail: (data, code) => {
                            if (isVivo && code === 205) {
                                that.fnNewBrandAdPreload(currentAdIndex, isPre, token, data)
                            } else {
                                if(!isPre) {
                                    if (that.currentAdIndex !== currentAdIndex) {                   // 超时
                                        return false;
                                    }
                                    code = code || 550007
                                    data = data || '2.0预加载fail'
                                    that.shenceLog('PAdLSState', true, code, data);
                                    console.log('----------fnInitNewBrandAd----------blank----------')
                                    that.fnChoiceChnAd();
                                }
                            }
                        }
                    })
                } catch(e) {
                    if(!isPre) {
                        if (that.currentAdIndex !== currentAdIndex) {                               // 超时
                            return false;
                        }
                        that.shenceLog('PAdLSState', true, 550008, e || '2.0预加载错误捕获');
                        console.log('----------fnInitNewBrandAd----------blank----------')
                        that.fnChoiceChnAd();
                    }
                }
            }
        },
        /**
         * 新版广告预加载
         * @param {Number} currentAdIndex 当前策略索引
         * @param {Boolean} isPre 是否预加载
         * @param {String} token 广告id
         * @param {Object} data 广告数据
         */
        fnNewBrandAdPreload(currentAdIndex, isPre, token, data) {
            if(isPre) {
                if(this.$app && this.$app.adLists && data.adList && data.adList[0]) {
                    if(this.$app.adLists[token]) {
                        this.$app.adLists[token].push(data.adList[0])
                    } else {
                        this.$app.adLists[token] = []
                        this.$app.adLists[token].push(data.adList[0])
                    }
                }
            } else {
                // 超时处理
                if (this.currentAdIndex !== currentAdIndex) {
                    console.log('---厂商2.0超时后，加载成功了，存入缓存---', data.adList);
                    if(this.$app && this.$app.adLists && data.adList && data.adList[0]) {
                        if(this.$app.adLists[token]) {
                            this.$app.adLists[token].push(data.adList[0])
                        } else {
                            this.$app.adLists[token] = []
                            this.$app.adLists[token].push(data.adList[0])
                        }
                    }
                    return ;
                }
                clearTimeout(this.adTimeoutTimer);
                let adInfo = data && data.adList && data.adList.length && data.adList[0]
                let isVideoStyle = !!~[4, 5, 13, 16].indexOf(adInfo && adInfo.creativeType)
                if (!adInfo || !isVideoStyle && !(adInfo.imgUrlList && adInfo.imgUrlList.length && adInfo.imgUrlList[0] || adInfo.icon)) {
                    this.shenceLog('PAdLSState', true, 550009, '2.0数据错误');
                    // this.fnChoiceChnAd();
                    // return false;
                }
                this.fnSetAdContent(currentAdIndex, adInfo)
                this.fnLoadSuccessHandle();                                                         // 广告加载成功后曝光前置处理方法
                this.isLoadComplete = true
                if(['tip', 'pop'].indexOf(this.adType) > -1 && this.$valid) {
                    this.$emit('fnGetAd');
                }
                if(this.adType === 'open' && this.$valid) {
                    this.$emit('fnGetAd', {
                        isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn,   
                        hasMisClick: this.currentAdInfo.click_behive                                // 是否有关闭误触
                    });
                }
                this.brandAdBackInfo = adInfo
                this.fnReportBrandAd()
                if(this.currentAdInfo.isVideoStyle) {
                    this.fnAdShow()
                }
            }
        },
        /**
         * 新版广告组件赋值
         */
        fnSetAdContent(currentAdIndex, adInfo) {
            const currentAdInfo = this.adsCacheInfo[currentAdIndex];
            const brand = this.serviceAdBrand
            const isVivo = brand === 'vivo';
            const isOppo = !!~['oppo', 'realme', 'oneplus'].indexOf(brand);
            const { imgUrlList, icon, clickBtnTxt, creativeType } = adInfo
            let images = [];
            let isIconStyle = false;
            let isVideoStyle = isVivo && !!~[4, 5].indexOf(creativeType) || isOppo && !!~[13, 16].indexOf(creativeType);
            let isVerticalStyle = isVivo && !!~[5, 6].indexOf(creativeType) || isOppo && !!~[15, 16].indexOf(creativeType);
            if (imgUrlList && imgUrlList.length && imgUrlList[0]) {
                images = imgUrlList.map(item => ({ url: item }))
            } else if (!isVideoStyle && icon) {
                images = [{ url: icon }]
                isIconStyle = true
                isVerticalStyle = false
            }
            currentAdInfo.btn_text = clickBtnTxt
            currentAdInfo.btnContent = this.fnGetBtnContent(clickBtnTxt)
            if (isVivo) {
                this.currentAdInfo = Object.assign({}, currentAdInfo, {
                    images,
                    adId: adInfo.adId || '',
                    title: adInfo.title || '',
                    description: adInfo.desc || '',
                    adtext: adInfo.logoUrl || currentAdInfo.adtext || '',
                    icon_url: adInfo.icon || '',
                    interaction_type: 0,
                    creativeType: adInfo.creativeType || '',
                    interactionType: adInfo.interactionType || '',
                    isIconStyle,
                    isVideoStyle,
                    isVerticalStyle
                });   
            }
            if(isOppo) {
                this.currentAdInfo = Object.assign({}, currentAdInfo, {
                    images,
                    adId: adInfo.adId || '',
                    title: adInfo.title || '',
                    description: adInfo.desc || '',
                    adtext: adInfo.logoUrl || currentAdInfo.adtext || '',
                    icon_url: adInfo.icon || '',
                    interaction_type: 0 ,
                    creativeType: adInfo.creativeType || '',
                    interactionType: adInfo.interactionType || '',
                    isIconStyle,
                    isVideoStyle,
                    isVerticalStyle
                }); 
            } 
        },
        /**
         * 新版广告组件加载错误
         */
        fnNewBrandAdError(err) {
            const errCode = err && err.errCode || 550010
            const errMsg = err && err.errMsg || '2.0预加载错误回调'
            const isOppo = !!~['oppo', 'realme', 'oneplus'].indexOf(this.serviceAdBrand);
            if (isOppo && this.currentAdInfo.isVideoStyle && +errCode === 1106) {
                return
            }
            this.isNewBrandAdError = true;
            this.shenceLog('PAdLSState', true, errCode, errMsg);
            this.fnChoiceChnAd();
        },
        /**
         * 新版广告组件点击
         */
        fnNewBrandAdClick() {
            this.fnResetClickType();                                                                // 重置点击类型
            if (this.isShowAdFullScreenCover) {
                this.clickType.clickType = 'isFullScreenCover';                                     // 点击类型判断
                this.fnCloseAdFullScreenCover();                                                    // 关闭广告全屏覆盖误触
            }
            this.$app.lastOpenPage = ''
            if(this.adType == 'open') {
                this.$emit('fnAdClick')
            }
            if(this.adType === 'wall' && this.adAlias === 'adWallLocal') {
                this.fnAdWallReport('ad_clk')
                this.$emit('adWallClick', {
                    index: this.adIndex
                })
            }
            let isMisclick = !this.adHasClick && !this.isCancelMisclick;                            // 是否误触，用于误触频次控制。第一次点击且没用取消误触，则认为是误触
            this.adHasClick = true;
            this.shenceLog('ADClick')
            this.adReport('click_trackers', 'click');
            this.$app.fnSaveClickedAd(this.currentAdInfo, isMisclick, this.adPosition);             // 存储已点击广告的素材，用来误触频次控制 - 2.0的点击默认都按误触计
            this.fnPageHideTimer();                                                                 // 广告点击页面跳转超时判断
            setTimeout(() => {
                this.fnResetClickType();                                                            // 重置点击类型
            }, 500);
        },
        /**
         * 关闭弹窗渲染开屏广告
         * @param {Object} evt 事件参数
         */
        fnCloseOpenAd(evt) {
            if (this.currentAdInfo.click_behive && !this.adHasClick && !(this.isBrandAd && this.brandAdVersion === 2)) {
                this.fnExtraClose(evt);
                return ;
            }
            this.fnReportAdClose();
            this.fnStopPropagation(evt)
            this.$emit('fnAdClose')
        },
        /**
         * 摇一摇支持
         */
        fnSupportShake() {
            if(this.adType === 'open' && sensor && sensor.subscribeAccelerometer) {
                this.isSupportShake = true
            }
        },
        /**
         * 监听重力感应
         */
        fnStartListenAccelerometer() {
            let that = this
            sensor.subscribeAccelerometer({
                callback: function(ret) {
                    let value = ''
                    let nowX = ret.x.toFixed(2)
                    let nowY = ret.y.toFixed(2)
                    let nowZ = ret.z.toFixed(2)
                    let deltaX = (nowX - that.speedX).toFixed(2)
                    let deltaY = (nowY - that.speedY).toFixed(2)
                    let deltaZ = (nowZ - that.speedZ).toFixed(2)
                    that.speedX = nowX
                    that.speedY = nowY
                    that.speedZ = nowZ
                    value = Math.sqrt(deltaX * deltaX + deltaY * deltaY + deltaZ * deltaZ)
                    if(that.isFirstRecordShake) {
                        that.isFirstRecordShake = false
                        return
                    }
                    if(that.chnType !== 'SDK_BAIDU' && (!that.isBrandAd || that.isBrandAd && that.brandAdVersion === 1 && that.hasReportBrandAdShow)) {
                        if(that.isShakeShow && !that.hasShakeClick && (that.currentAdInfo.shake_threshold || that.currentAdInfo.shake_threshold === 0) && value >= that.currentAdInfo.shake_threshold) {
                            that.clickX = that.fnCreateClickPosition('open', 'x')
                            that.clickY = that.fnCreateClickPosition('open', 'y')
                            that.hasShakeClick = true
                            that.clickType.isShake = true
                            that.fnClickSwitch()
                        }
                    }
                }
            })
        },
        /**
         * 停止监听重力感应
         */
        fnStopListenAccelerometer() {
            try {
                if(this.isSupportShake) {
                    sensor && sensor.unsubscribeAccelerometer && sensor.unsubscribeAccelerometer()
                }
            } catch(e) {
                console.log(e)
            }
        },
        /**
         * 模拟点击位置
         * @param {String} adType 广告类型
         * @param {String} axis 坐标轴
         */
        fnCreateClickPosition(adType, axis) {
            let max = this.positionLimit[adType][axis].max
            let min = this.positionLimit[adType][axis].min
            return parseInt((Math.random() * (max - min)) + min)
        },
        // 书架弹窗关闭
        fnClosePopAd (evt) {
            this.fnReportAdClose();
            this.fnStopPropagation(evt)
            this.$emit('fnPopClose');                                // dialog-h5组件接受
        },
        fnTouchStartHandle(e) {
            if(this.currentAdInfo.chn_type === 'SDK_BAIDU') {
                return false;
            }
            if(this.currentAdInfo && this.currentAdInfo.action_area && +this.currentAdInfo.action_area === 2  && !this.adHasClick && (this.isBrandAd && this.isLoadComplete && this.brandAdVersion === 1 || !this.isBrandAd && this.canShowAd)) {
                this.fnTouchStart(e)
            }
        },
        fnTouchEndHandle(e) {
            if(this.currentAdInfo.chn_type === 'SDK_BAIDU') {
                return false;
            }
            if(this.currentAdInfo && this.currentAdInfo.action_area && +this.currentAdInfo.action_area === 2 && (this.isBrandAd && this.isLoadComplete && this.brandAdVersion === 1 || !this.isBrandAd && this.canShowAd)) {
                this.fnTouchEnd(e)
            }
        },
        fnClickSwitchHandle() {
            if(this.currentAdInfo && this.currentAdInfo.action_area && +this.currentAdInfo.action_area === 2  && !this.adHasClick && (this.isBrandAd && this.isLoadComplete && this.brandAdVersion === 1 || !this.isBrandAd && this.canShowAd)) {
                this.fnClickSwitch()
            }
        },
        // 初始化厂商banner广告
        fnInitBannerAd (currentAdIndex) {
            if (!this.bannerAdShow) {
                this.fnChoiceChnAd();                                                   // 选择下一个广告源数据
                return false;
            }
            let top = this.adHeight ? (this.adHeight + 90 + 42 + 10) : 0,               // 阅读页传入的参数，是页面高度 - 146 - 90 - 42 之后的，90是阅读器顶部padding，42是底部页面高度，146是底部信息流高度，10是由于banner没有padding，加10距离菜单有点距离
                height = 136;                                                           // 底部广告的高度原本是146px，上下各有10px的padding，由于top加了10px，因此高度需要减少10px
            if (!top) {
                let deviceInfo = this.deviceInfo;
                if (!deviceInfo.windowHeight || !deviceInfo.windowWidth) {
                    this.fnChoiceChnAd();                                               // 选择下一个广告源数据
                    return false;
                }
                top = deviceInfo.windowHeight * 750 / deviceInfo.windowWidth - height;  //  windowWidth / 750 = windowHeight / X
            }
            const style = {
                left: 0,
                top,
                width: 750,
                height
            }
            /**
             * --bannerAd存储格式--
             * 
             * this.$app.bannerAd = {
             *     Read: {                                      // 阅读页的所有banner实例
             *         ad_12345: Object,                        // chn_slot_id为12345的banner实例
             *         status_12345: 1,                         // chn_slot_id为12345的banner实例的加载状态；-1：初始状态，0: error,  1: load
             *         chn_slot_id: 12345,                      // 当前页面正在展示的banner实例的chn_slot_id
             *     },
             *     Index: {}                                    // 首页的所有banner实例
             * }
            */
            const currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_slot_id } = currentAdInfo;
            const allBannerAd = this.$app.bannerAd[pageName];                           // 当前页面所有的banner广告的实例
            let bannerAd = allBannerAd['ad_' + chn_slot_id];                            // 当前chn_slot_id是否有创建过实例

            if (bannerAd) {                                                             // 有创建的广告实例
                /**
                 * bannerAd.show() 加载 或 展示当前的banner广告
                 * 如果上次状态是error，调用show()是广告加载，会触发onLoad或者onError回调
                 * 如果上次状态是load，调用show()是直接进行展示，不会有回调
                */
                this.shenceLog('PAdLoad', false, 550000, '加载');
                this.adReport('req2_trackers', 'req2', 'QAPP');                         // req2事件上报
                let adStatus = allBannerAd['status_' + chn_slot_id];                    // 当前banner广告的状态 0: error,  1: load
                if ([-1, 0].indexOf(adStatus) > -1) {
                    this.fnInitBannerAdCallback(currentAdIndex);                        // 重新初始banner广告onLoad和onError回调
                    bannerAd.show();                                                    // 加载
                    return false;
                }
                if (adStatus === 1) {                                                   // 如果当前banner广告的状态之前是 1：已加载成功，才进行imp事件上报
                    clearTimeout(this.adTimeoutTimer);
                    this.fnHideBannerAd(chn_slot_id);                                   // 隐藏上一次的banner广告
                    bannerAd.show();                                                    // 展示
                    this.fnReportBrandAd();                                             // load、win事件上报
                    this.fnBannerAdImpReport();                                         // imp事件上报
                    return false;
                }
                // this.fnHideBannerAd();                                               // 如果有遮挡，隐藏上次的banner广告。否则遮挡关闭后，可能展示上一次的banner
                return false;
            }

            const ad = require('@service.ad');
            if (!ad) {
                this.fnChoiceChnAd();                                                   // 处理下层广告策略
                return false;
            }
            let params = {
                adUnitId: chn_slot_id,
                style
            }
            if(this.serviceAdBrand === 'vivo') {
                params.channel = this.$app && this.$app.headerJson && this.$app.headerJson.channelCode || ''
            }
            bannerAd = allBannerAd['ad_' + chn_slot_id] = ad.createBannerAd(params);
            if (!bannerAd) {
                this.fnChoiceChnAd();                                                   // 选择下一个广告源数据
                return false;
            }
            this.shenceLog('PAdLoad', false, 550000, '加载');
            this.adReport('req2_trackers', 'req2', 'QAPP');                             // req2事件上报
            this.fnInitBannerAdCallback(currentAdIndex);                                // 重新初始banner广告onLoad和onError回调
            bannerAd.show();                                                            // 加载和展示广告
        },
        /**
         * 初始化厂商banner广告onLoad和onError回调
         * @param   {Number}    currentAdIndex     [当前广告策略的索引]
        */
        fnInitBannerAdCallback (currentAdIndex) {
            let allBannerAd = this.$app.bannerAd[pageName];                             // 当前页面所有banner广告的实例
            let currentAdInfo = this.adsCacheInfo[currentAdIndex];
            let { chn_slot_id } = currentAdInfo;
            let bannerAd = allBannerAd['ad_' + chn_slot_id];                            // 当前chn_slot_id是否有创建过实例
            if (!bannerAd) {
                return false;
            }
            allBannerAd['status_' + chn_slot_id] = -1;                                  // 当前banner实例的状态变为-1: 初始状态
            bannerAd.offLoad();
            bannerAd.onLoad(data => {
                console.log('---bannerAd onLoad---', data);
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (allBannerAd['status_' + chn_slot_id] === 1) {                       // 已经加载成功，如果先error，再load了，依然变为1，下次直接调用show()进行广告展示
                    return false;
                }
                allBannerAd['status_' + chn_slot_id] = 1;                               // 当前banner实例的状态变为 1: 已加载状态
                if (this.currentAdIndex !== currentAdIndex) {                           // 超时
                    bannerAd.hide();
                    return false;
                }
                clearTimeout(this.adTimeoutTimer);
                this.fnHideBannerAd(chn_slot_id);                                       // 隐藏之前的banner广告
                this.fnReportBrandAd();                                                 // load、win事件上报
                if (!this.bannerAdShow) {
                     bannerAd.hide();
                     return false;
                }
                this.fnBannerAdImpReport();                                             // imp事件上报
            });

            bannerAd.offError();
            bannerAd.onError(err => {
                if (!this.fnVmIsValid()) {                                              // 当前组件是否可用
                    return false;
                }
                if (allBannerAd['status_' + chn_slot_id] !== -1) {                      // 当前banner实例的状态不是 -1: 初始状态时
                    return false;
                }
                console.log('---bannerAd onError---', err);
                bannerAd.hide && bannerAd.hide();
                allBannerAd['status_' + chn_slot_id] = 0;                               // 当前banner实例的状态变为 0: error状态
                if (this.currentAdIndex !== currentAdIndex) {                           // 超时
                    return false;
                }
                let errCode = err && err.errCode || 550013,
                    errMsg = err && err.errMsg || 'banner加载失败';
                this.shenceLog('PAdLSState', true, errCode, errMsg);
                this.fnChoiceChnAd();                                                   // 选择下一个广告源数据
            });
        },
        /**
         * 隐藏之前的banner广告，防止下次自动刷新，盖住现有的api广告
         * @param   {String}    current_chn_slot_id   [当前广告的chn_slot_id]
        */
        fnHideBannerAd (current_chn_slot_id) {
            if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                return false;
            }
            let allBannerAd = this.$app.bannerAd[pageName];                             // 当前页面所有的banner广告实例
            let { chn_slot_id } = allBannerAd;                                          // 上一次banner广告的chn_slot_id
            if (current_chn_slot_id) {
                if (current_chn_slot_id === chn_slot_id) {
                    return false;
                }
                allBannerAd.chn_slot_id = current_chn_slot_id;                          // 存储当前的chn_slot_id
                if (!chn_slot_id) {
                    return false;
                }
                allBannerAd['ad_' + chn_slot_id].hide();                                // 隐藏上一次的banner广告
                return false;
            }
            if (chn_slot_id) {
                allBannerAd['ad_' + chn_slot_id].hide();
                allBannerAd.chn_slot_id = '';
                return false;
            }
        },
        // bannerAdShow prop changed
        fnBannerAdShowChange: common.fnDebounce(function (val) {
            try {
                if(val && this.currentAdInfo.isApiVideo && !this.isPibbVideoFinish){
                    this.$element('video-banner') && this.$element('video-banner').start()  // banner视频被菜单蒙版盖住后，出现封面，需手动调起播放 
                }
                console.log('---bannerAdShow change---', val);
                if (!this.fnVmIsValid() || !this.fnIsBanner()) {                        // !this.$app是为了解决组件if变化时，防抖引起的this.$app找不到的错误
                    return false;
                }
                let allBannerAd = this.$app.bannerAd[pageName],                         // 当前页面所有的banner广告实例
                    { chn_slot_id } = allBannerAd;                                      // 当前展示的banner广告的chn_slot_id
                if (!chn_slot_id) {
                    return false;
                }
                let bannerAd = allBannerAd['ad_' + chn_slot_id];                        // 当前展示的banner广告的实例
                if (!bannerAd) {
                    return false;
                }
                if (!val) {
                    bannerAd.hide();
                    return false;
                }
                bannerAd.show();                                                        // 展示当前的banner广告
                this.fnBannerAdImpReport();                                             // imp事件上报
            } catch (err) {
                // console.log('---error了---', err);
            }
        }, 250),
        // banner广告imp事件上报
        fnBannerAdImpReport () {
            if (!this.bannerAdShow) {
                return false;
            }
            this.adReport('imp_trackers', 'show', 'QAPP');                              // imp事件上报
            this.shenceLog('ADShow');                                                   // 神策打点
        },
        // 是否是banner广告 10199：厂商banner广告
        fnIsBanner () {
            return ['banner'].indexOf(this.adType) > -1 && this.currentAdInfo && this.currentAdInfo.style_type === 10199;
        },
        // 页面隐藏或展示状态改变
        fnPageShowChanged (event) {
            let isPageShow = event.detail || false;
            if (this.fnAdRefreshSwitch()) {                                             // 广告刷新开关
                if (isPageShow) {
                    if (this.pageHasHide) {
                        this.fnAdRefresh();
                        this.pageHasHide = false;
                    }
                } else {
                    if (!this.isPageHideTimeout) {                                      // 页面隐藏监听没有超时时，标记为页面隐藏
                        this.pageHasHide = true;
                        this.isPageHideTimeout = true;
                    }
                }
            }
            if (this.adType === 'banner') {
                this.fnBannerAdShowChange(isPageShow);
                return false;
            }
        },
        /**
         * 停止冒泡
         */
        fnStopPropagation(e) {
            e && e.stopPropagation && e.stopPropagation()
        },
        // 当前组件是否可用，销毁后不可用
        fnVmIsValid () {
            return !!(this && this.$app && this.$app.feedAd && this.$valid);
        },
        // 检查百度SDK支持性
        fnCheckBaiduSupport () {
            let isBaiduInRequestData = this.adRequestData.support_chns.indexOf('SDK_BAIDU') > -1;                                           // 请求参数中是否已经有百度
            if (isBaiduInRequestData) {
                return false;
            }
            let isSupportBaidu = this.$app.isBaiduSDKCreated && this.fnSupportBaidu() && !this.isNewOpenStyle;                              // 是否支持百度
            if (!isSupportBaidu) {
                return false;
            }
            this.adRequestData.support_chns.unshift('SDK_BAIDU');
        },
        // 百度SDK是否初始化成功
        fnBaiduSDKInitComlete() {
            return global && global.$union_quick_app_sdk && global.$union_quick_app_sdk.sdkVersion;
        },
        // 百度touchend事件，如果是点击触发的，取消冒泡，避免触发翻页、菜单功能
        fnBaiduTouchend(e) {
            if (this.SDK_BAIDU.isClicking) {
                this.fnStopPropagation(e);
            }
        },
        // 延迟展示1.0开屏误点击区域
        fnClickBlockShowChanged(newValue, oldValue) {
            if(newValue === true && oldValue === false) {
                if(this.isDoubleOpen) {
                    if(this.currentAdInfo.isVideoStyle) {
                        this.fnVideoAdControl('start')
                    }
                    this.fnAccelerometerSupport(this.currentAdInfo)
                    this.fnAutoClickSwitch()
                }
                setTimeout(() => {
                    this.isShowClickBlock = true
                    this.fnAdButtonContainerFixed();                    // 改变ad-button点击优化容器为fixed定位
                }, 200)
            }
            if(newValue === false && oldValue === true) {
                this.isShowClickBlock = false
                if(this.isSystemOpenStyle) {
                    this.isShakeShow = false
                    this.fnAdButtonOptimizeHide();                      // 开屏倒计时关闭后，如果是双开屏的第一个开屏，需要隐藏其ad-button点击优化区域。因为父元素高度变为0，fixed定位的子元素不会隐藏
                    this.fnBaiduOpenHide();                             // 开屏倒计时关闭后，如果是双开屏的第一个开屏，需要因此百度SDK开屏（百度开屏使用的是SDK倒计时，因此不会触发该方法）
                }
                this.fnCloseAdFullScreenCover();                        // 关闭广告全屏覆盖误触
            }
        },
        /**
         * 一键加桌成功处理
         */
        fnOneshortComplete(evt) {
            let position = evt.detail.position
            this.hasShortcut = true
            switch (position) {
                case 'adExit':
                    this.$app.exit()
                    break;
                case 'adAction':
                    if(!(this.isBrandAd && this.isLoadComplete || !this.isBrandAd && this.canShowAd)) {
                        return
                    }
                    this.clickType.isAddBtn = true
                    this.fnClickSwitch()
                    break;
                default:
            }
        },
        /**
         * 数美上报
         * @param   {String}    eventType       [事件类型 | trackers]
         * @param   {Object}    currentAdInfo   [当前广告数据]
        */
        fnSmReport (eventType, currentAdInfo = {}) {
            if (!this.$app.isSmSDKCreated) {                                                        // 数美SDK没有初始化
                return false;
            }
            let adType = '';                                                                        // 广告类型
            switch (this.adType) {
                case 'open':
                    adType = 'SPLASH_AD';                                                           // 开屏
                    break;
                case 'video':
                    adType = 'REWARDED_VIDEO_AD';                                                   // 激励视频
                    break;
                case 'pop':
                    adType = 'INTERSTITIAL_IMAGE_AD';                                               // 插屏
                    break;
                default:
                    adType = 'NATIVE_AD';                                                           // 信息流
            }
            if (!this.$app.getSmFlag(adType)) {                                                     // 上报开关判断
                return false;
            }
            const eventMap = {                                                                      // eventType对应数美接口的eventId
                imp_trackers: 'adShow',
                click_trackers: 'adClick',
            }
            const eventId = eventMap[eventType];                                                    // 数美eventId
            if (!eventId) {
                return false;
            }
            let data = {}
            if (['imp_trackers', 'click_trackers'].indexOf(eventType) > -1) {                       // 曝光、点击只需上传adType，codeId
                data = {
                    adType,
                    codeId: currentAdInfo.chn_slot_id || '',
                }
            }
            this.$app.fnSmReport(eventId, data);                                                    // 数美上报
        },
        fnAccelerometerSupport(currentAdInfo) {
            if(this.isSupportShake && currentAdInfo.style_type == '30004' && this.chnType !== 'SDK_BAIDU' && (!this.isBrandAd || this.isBrandAd && this.brandAdVersion === 1)) {
                this.isFirstRecordShake = true
                this.speedX = 0
                this.speedY = 0
                this.speedZ = 0
                this.fnStartListenAccelerometer()
                this.isShakeShow = true
            } else {
                this.isShakeShow = false
                this.fnStopListenAccelerometer()
            }
        },
        // 获取广告位置名称
        fnGetAdPosition() {
            let position = '未知'
            if(this.adAlias === 'readTop') {
                position = '阅读页顶部'
            }
            if(this.adAlias === 'readMiddle') {
                position = '阅读页中部'
            }
            if(this.adAlias === 'readBanner') {
                position = '阅读页底部浮动'
            }
            if(this.adAlias === 'readPre') {
                position = '阅读页章首'
            }
            if(this.adAlias === 'readInsert') {
                position = '阅读页插页'
            }
            if(this.adType === 'open' && this.isWarm === 'hot') {
                position = '热启动开屏'
            }
            if(this.adType === 'open' && this.isWarm !== 'hot') {
                position = '冷启动开屏'
            }
            if(this.adAlias == 'readOpen') {
                position = '阅读页开屏'
            }
            if(this.adType === 'pop') {
                position = '首页弹窗'
            }
            if(this.adType === 'tip') {
                position = '任务完成提示信息流'
            }
            if(this.adType === 'reward') {
                position = '阅读奖励信息流'
            }
            if(this.adType === 'video' && this.adAlias === 'signVideo') {
                position = '签到激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'taskVideo') {
                position = '任务激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'infoVideo') {
                position = '任务完成提示激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'readVideo') {
                position = '阅读页激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'readAwardVideo') {
                position = '阅读任务激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'insertVideo') {
                position = '插页激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'preVideo') {
                position = '章首激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'preNextVideo') {
                position = '章首后续任务激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'aliPayRedVideo') {
                position = '章末红包激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'withdrawVideo') {
                position = '提现门槛激励视频'
            }
            if(this.adType === 'video' && this.adAlias === 'listenVideo') {
                position = '听书激励视频'
            }
            if(this.adType === 'wall') {
                position = '广告墙'
            }
            if(this.adAlias === 'readBack') {
                position = '阅读页退出'
            }
            if(this.adAlias === 'indexBack') {
                position = '首页退出'
            }
            return position
        },
        // 是否是点睛插屏广告
        fnIsInsertEyeAd() {
            return ['open'].indexOf(this.adType) > -1 && this.currentAdInfo && this.currentAdInfo.style_type === 30002;
        }, 
        // 当前引擎是否支持点睛插屏广告
        fnCanUseInsertEyeAd() {
            const serviceAd = require('@service.ad')
            const brand = this.deviceInfo.brand.toLowerCase()
            if(!serviceAd) {
                return
            }
            if (serviceAd.createInsertClickEyeAd !== undefined && brand === 'vivo') {
                this.isSupportInsertEyeAd = true
                return
            }
            this.isSupportInsertEyeAd = false
        },
        /**
         * 初始化点睛插屏广告
         * @param {Number} currentAdIndex 当前策略索引
         */
        fnInitInsertEyeAd(currentAdIndex) {
            const ad = require('@service.ad');
            if (!ad) {
                this.fnChoiceChnAd();
                return false;
            }
            let params = {
                channel: this.$app && this.$app.headerJson && this.$app.headerJson.channelCode || ''
            }
            this.serviceAd = ad.createInsertClickEyeAd(params);
            this.fnInsertEyeAdInit(currentAdIndex);             
            this.fnInsertEyeAdLoad(); 
        },
        /**
         * 点睛插屏广告初始
         * @param {Number} currentAdIndex 当前策略索引
         */
        fnInsertEyeAdInit(currentAdIndex) {
            let serviceAd = this.serviceAd
            serviceAd.offLoad()
            serviceAd.onLoad(() => {
                if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                               // 超时
                    return false;
                }
                serviceAd.show().then(() => {
                    clearTimeout(this.adTimeoutTimer);
                    this.$app.hasInsertEyeAdShow = true
                    this.fnInsertEyeAdListen(currentAdIndex)
                    this.fnReportBrandAd();                                                 // send、win、load上报
                    this.adReport('imp_trackers', 'show', 'QAPP');                          // imp事件上报
                    this.shenceLog('ADShow');
                    this.$emit('fnGetInsertEyeAd');
                }, (err) => { 
                    let errCode = err && err.errCode || 550015;
                    let errMsg = err && err.errMsg || '点睛插屏曝光失败';
                    this.shenceLog('PAdLSState', true, errCode, errMsg);                    // 处理下层广告策略
                    this.fnChoiceChnAd();
                })
            })
            serviceAd.offError()
            serviceAd.onError((err) => {
                if (!this.fnVmIsValid()) {                                                  // 当前组件是否可用
                    return false;
                }
                if (currentAdIndex !== this.currentAdIndex) {                               // 超时
                    return false;
                }
                let errCode = err && err.errCode || 550014;
                let errMsg = err && err.errMsg || '点睛插屏加载失败';
                this.shenceLog('PAdLSState', true, errCode, errMsg);
                this.fnChoiceChnAd();                                                       // 处理下层广告策略
            });
        },
        // 点睛插屏广告加载
        fnInsertEyeAdLoad() {
            let serviceAd = this.serviceAd
            if (!serviceAd || !serviceAd.load) {
                this.fnChoiceChnAd();                                                       // 处理下层策略数据
                return false;
            }
            this.shenceLog('PAdLoad', false, 550000, '加载');
            this.adReport('req2_trackers', 'req2', 'QAPP');                                 // req2事件上报
            serviceAd.load();
        },
        /**
         * 点睛插屏广告事件监听
         * @param {Number} currentAdIndex 当前策略索引
         */
        fnInsertEyeAdListen(currentAdIndex) {
            let serviceAd = this.serviceAd
            serviceAd.offClick()
            serviceAd.onClick(() => {
                this.$emit('fnAdClick');
                this.shenceLog('ADClick');
                this.adReport('click_trackers', 'click');
            })
            serviceAd.offClose()
            serviceAd.onClose(() => {
                this.$emit('fnAdClose');
            })
        },
        // 曝光替换处理
        fnExposureReplaceHandle () {
            if (!this.currentAdInfo.isExposureReplace) {                                            // 当前未开启曝光替换
                return false;
            }
            if (!this.scene) {                                                                      // 没有场景值不进行替换
                return false;
            }
            let replaceAd = this.$app.fnGetExposureReplaceAd(this.scene, this.currentAdInfo);
            console.log('---曝光替换结果---', replaceAd);
            if (!replaceAd) {
                return false;
            }
            let {
                ad,
                fnExposure,                                                                         // 曝光回调，执行会更新曝光次数、曝光时间等
            } = replaceAd;
            let chnType = ad.chn_type.split('_')[0];                                                // 广告类型按 '-' 截取
            ad = Object.assign({}, ad, {                                                            // 误触等配置信息，仍然使用当前广告的配置
                ifcb: this.currentAdInfo.ifcb,
                btn_style_types: this.currentAdInfo.btn_style_types,
                click_behive: this.currentAdInfo.click_behive,                                      // 关闭按钮误触
                invisible_click_behive: this.currentAdInfo.invisible_click_behive,                  // 滑动误触
                menu_click_behive: this.currentAdInfo.menu_click_behive,                            // 底部菜单误触（扩展区域误触）
                loadAdStartTime: this.currentAdInfo.loadAdStartTime,                                // 加载时间，用作RequestId和广告加载状态判断
            });
            if (chnType === 'API') {
                this.currentAdInfo = ad;
                this.fnResetAdParams();                                                             // 重置广告参数和开关
                if (['tip', 'pop'].indexOf(this.adType) > -1 && this.$valid) {
                    this.$emit('fnGetAd');
                }
                if(this.adType === 'open' && this.$valid) {
                    this.$emit('fnGetAd', {
                        isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn
                    });
                }
                this.adStartTime = new Date().getTime();
                this.fnLoadSuccessHandle();                                                         // 广告加载成功后曝光前置处理方法
                this.canShowAd = true;
                this.hasExposureReplace = true;                                                     // 是否已经曝光替换
                fnExposure();                                                                       // 执行曝光回调，更新曝光次数、曝光时间等
                return true;
            }
            if (chnType === 'QAPP') {
                let { custom_id, chn_slot_id } = ad;
                let serviceAd = this.$app.adInstances[pageName]['ad_' + custom_id];                 // 广告实例
                console.log('---曝光替换，页面中是否有厂商实例---', !!serviceAd);
                if (serviceAd) {
                    this.currentAdInfo = ad;
                    this.fnResetAdParams();                                                         // 重置广告参数和开关                                                     
                    this.isBrandAd = true;
                    this.brandAdVersion = 1;                                                        // 厂商版本
                    this.serviceAd = this.feedAd['ad_' + chn_slot_id] = serviceAd;
                    this.fnLoadSuccessHandle();                                                     // 广告加载成功后曝光前置处理方法
                    this.isLoadComplete = true;
                    if (['tip', 'pop'].indexOf(this.adType) > -1 && this.$valid) {
                        this.$emit('fnGetAd');
                    }
                    if(this.adType === 'open' && this.$valid) {
                        this.$emit('fnGetAd', {
                            isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn
                        });
                    }
                    this.adStartTime = new Date().getTime();
                    this.hasExposureReplace = true;                                                 // 是否已经曝光替换
                    fnExposure();                                                                   // 执行曝光回调，更新曝光次数、曝光时间等
                    return true;
                }
            }
            return false;
        },
        // 重置点击类型
        fnResetClickType () {
            this.clickType.isClose = false;
            this.clickType.isTouch = false;
            this.clickType.isExtendArea = false;
            this.clickType.isReal = false;
            this.clickType.isShake = false;
            this.clickType.isAddBtn = false;
            this.clickType.isBtnClick = false;
            this.clickType.isAdButton = false;
            this.clickType.isExitButton = false;
            this.clickType.isAutoClick = false;
            this.clickType.isFullScreenCover = false;
            this.clickType.clickType = 'isReal';
        },
        // 扩展区域点击
        fnExtendAreaClickHandle () {
            this.clickType.isExtendArea = true;                                                     // 扩展区域误点击
        },
        /**
         * 按钮文案处理
         * @param {String} btnText 原按钮文案
         */
        fnGetBtnContent(btnText) {
            if(!btnText) {
                return '立即查看'
            }
            if(btnText.length > 4) {
                if(btnText.indexOf('详情') > -1) {
                    return '查看详情'
                }
                if(btnText.indexOf('下载') > -1 || btnText.indexOf('安装') > -1) {
                    return '点击下载'
                }
                if(btnText.indexOf('抢购') > -1) {
                    return '立即抢购'
                }
                return '立即查看'
            }
            return btnText
        },
        /*
         * 异常处理上报
         * @param   {String}    type    [类型]
         * @param   {Object}    detail  [详情]
        */
        fnExceptionReport(type = 0, detail = '') {
            let that = this
            that.$app.$def.requestData(that, {
                interface: '/glory/fastapp/2179',
                data: {
                    type,
                    detail
                },
                succ: function() {},
                fail: function() {}
            });
        },
        // 广告按钮点击
        fnAdBtnClick () {
            this.clickType.isBtnClick = true;
        },
        // 章首、插页、底部、退出 视频播放上报
        fnPibbVideoPrepared() {
            this.isPibbVideoFinish = false
            this.fnAdShow()                       
        },
        // 章首、插页、底部、退出 视频播放结束
        fnPibbVideoFinish() {
            if(this.canVideoFinishReport){
                this.adReport('play_finish_trackers', 'playFinish'); 
            }
            this.isPibbVideoFinish = true
            this.canVideoFinishReport = false 
        },
        /**
         * 华为ad-button自动下载click回调
         * @param   {Object}    data    [data.resultCode为自动下载结果，0：自动下载成功，其他均为失败]
        */
        fnDownloadStart(data) {
            /**
             * 自动下载成功，将点击类型标记为ad-button，fnAdClick不会上报厂商点击事件;
             * 否则fnAdClick会上报厂商点击事件，跳转落地页，但不会开始自动下载;
            */
            let code = data && data.resultCode;
            this.clickType.isAdButton = code === 0;
            this.fnAdClick();
            if (code !== 0) {
                this.$app.$def.quickappLog([702, {
                    qmap: {
                        site: '1',
                        code,
                        userId: this.$app.headerJson && this.$app.headerJson.userId || '',
                        adType: this.adType,
                        chnType: this.currentAdInfo.chn_type,
                        chnSlotId: this.currentAdInfo.chn_slot_id,
                    }
                }, 'huawei_auto_download_fail'], this);
            }
        },
        /**
         * 初始化oppo 2.0广告
         * @param   {Number}    currentAdIndex      [当前策略索引]
        */
        fnOppoAdInit(currentAdIndex) {
            this.shenceLog('PAdLoad', false, 550000, '加载');
            this.adReport('req2_trackers', 'req2', 'QAPP'); 
            //  oppo2.0回调 - adLoad
            this.fnOppoAdLoad = evt => {
                if (!this.fnVmIsValid()) {                                                      // 当前组件是否可用
                    return false;
                }
                if (this.currentAdIndex !== currentAdIndex) {                                   // 超时
                    return false;
                } 
                clearTimeout(this.adTimeoutTimer);
                try {
                    let adData = evt && evt.adData && JSON.parse(evt.adData);
                    let isVideoStyle = !!~[13, 16].indexOf(adData && adData.creativeType)
                    if (!adData || !isVideoStyle && !(adData.imgUrlList && adData.imgUrlList.length && adData.imgUrlList[0] || adData.icon)) {
                        this.shenceLog('PAdLSState', true, 550009, '2.0数据错误');
                        // this.fnChoiceChnAd();
                        // return false;
                    }
                    this.fnSetAdContent(currentAdIndex, adData);
                    this.fnLoadSuccessHandle();
                    if(this.adType === 'open' && this.$valid) {
                        this.$emit('fnGetAd', {
                            isBottomCloseBtn: this.currentAdInfo.isBottomCloseBtn,
                            hasMisClick: this.currentAdInfo.click_behive                    // 是否有关闭误触
                        });
                    }                                                                       // 广告加载成功后曝光前置处理方法
                    this.isLoadComplete = true;
                    this.brandAdBackInfo = adData
                    this.fnReportBrandAd();
                    if(['tip', 'pop'].indexOf(this.adType) > -1 && this.$valid) {
                        this.$emit('fnGetAd');
                    }
                } catch(err) {
                    this.shenceLog('PAdLSState', true, 550011, err || '2.0非预加载错误捕获');
                    this.fnChoiceChnAd();
                }
            }
            this.fnOppoAdError = err => {
                const errCode = err && err.errCode || 550012
                const errMsg = err && err.errMsg || '2.0非预加载错误回调'
                if (!this.fnVmIsValid()) {                                                      // 当前组件是否可用
                    return false;
                }
                if (this.currentAdInfo.isVideoStyle && +errCode === 1106) {
                    return
                }
                if (this.currentAdIndex !== currentAdIndex) {                                   // 超时
                    return false;
                } 
                clearTimeout(this.adTimeoutTimer);
                this.isNewBrandAdError = true;
                this.shenceLog('PAdLSState', true, errCode, errMsg);
                this.fnChoiceChnAd();
            }
        },
        // 返回弹窗关闭
        fnCloseBack() {
            this.fnReportAdClose();
            this.isExit = true;
            this.$emit('adBack', {
                type: 'close'
            });
        },
        /**
         * 重置点击优化参数
        */
        fnResetAdButtonOptimize() {
            this.adButtonOptimize = {
                isShowContainer: false,                                     // 是否显示华为按钮点击优化容器
                isShowCloseBtn: false,                                      // 是否显示华为按钮点击优化容器内的关闭按钮（未开启关闭误触时）
                adButtonCounts: 0,                                          // 华为按钮点击优化，需要的按钮数
                containerStyle: {},                                         // 华为按钮点击优化容器样式
                adButtonStyle: {},                                          // 华为按钮点击优化容器内，每个ad-button的样式
                closeBtnStyle: {},                                          // 华为按钮点击优化容器内，关闭按钮样式
                hasInit: false,                                             // 是否已经初始化
                isResize: false,                                            // 是否正在resize
                isContainerFixed: false,                                    // 是否将华为按钮点击优化容器变为fixed定位，否则开屏倒计时fixed定位，会盖到容器上层
            }
        },
        /**
         * ad-button点击优化容器隐藏
        */
        fnAdButtonOptimizeHide() {
            this.adButtonOptimize.isShowCloseBtn = false;                   // 隐藏关闭按钮
            this.adButtonOptimize.isShowContainer = false;                  // 隐藏点击优化区域
        },
        /**
         * 初始化ad-button点击优化区域
        */
        fnInitAdButtonOptimize() {
            let {
                action_area,                                                                                    // 扩展区域
                click_behive,                                                                                   // 是否关闭误触
                menu_click_behive,                                                                              // 是否菜单误触
                ad_button_optimize,                                                                             // 是否点击优化
                exit_button_behive,                                                                             // 是否退出按钮误触
            } = this.currentAdInfo;

            if (!ad_button_optimize || this.adHasClick) {
                return false;
            }
            if (this.adButtonOptimize.hasInit) {                                                                // 防止多次创建
                return false;
            }
            let adWrap = this.$element('ad-wrap');
            if (!adWrap || !adWrap.getBoundingClientRect) {
                return false;
            }
            let that = this;
            adWrap.getBoundingClientRect({
                success: function(data_1) {
                    if (that.adButtonOptimize.hasInit) {
                        return false;
                    }
                    if (!data_1 || !data_1.height) {
                        return false;
                    }
                    let adContainer;
                    if (that.adType === 'banner') {                                                             // 底部根据是否开启菜单误触，选择不同的容器
                        adContainer = menu_click_behive ? that.$element('ad-container') : that.$element('ad-area');
                    }
                    if (['pre', 'insert'].indexOf(that.adType) > -1) {                                          // 章首 和 插页，根据是否开启扩展区域，选择不同的容器
                        adContainer = action_area === 2 ? that.$element('ad-container') : that.$element('ad-area');
                    }
                    if (['back', 'open'].indexOf(that.adType) > -1) {                                           // 返回、开屏位置，容器为ad-container
                        adContainer = that.$element('ad-container');
                    }
                    if (!adContainer || !adContainer.getBoundingClientRect) {
                        return false;
                    }
                    adContainer.getBoundingClientRect({
                        success: function(data_2) {
                            if (that.adButtonOptimize.hasInit) {
                                return false;
                            }
                            if (!data_2 || !data_2.height) {
                                return false;
                            }
                            let containerTop = data_2.top - data_1.top,
                                containerHeight = data_2.height;
                            if (that.adType === 'back' && !exit_button_behive) {                                // back位置，如果开启了退出按钮误触，整个弹窗全覆盖ad-button。否则需要减去按钮的高度 和 下间距，保证可以正常点击退出
                                containerHeight = containerHeight - (that.isVerticalButton ? 192 : 130);        // 竖版按钮 192 = 80 + 80 + 32，横板按钮 130 = 90 + 40
                            }
                            /* 开屏倒计时是fixed定位，会盖到absolute定位上层，因此不需要调整容器的height和top
                            if (that.adType === 'open' && !click_behive) {                                      // 开屏，且未开启关闭误触时，容器从倒计时按钮下方开始绘制
                                let offset = 165;                                                               // 165 = 倒计时按钮高度45 + top值120
                                containerTop = offset;
                                containerHeight = containerHeight - offset;
                            }
                            */
                            let adButtonHeight = 40;                                                            // 单个ad-button的高度
                            that.adButtonOptimize.adButtonCounts = Math.ceil(containerHeight / adButtonHeight); // 需要ad-button的个数
                            that.adButtonOptimize.adButtonStyle = {                                             // ad-button的样式
                                width: data_2.width + 'px',
                                height: adButtonHeight + 'px',
                            }
                            that.adButtonOptimize.containerStyle = {                                            // ad-container元素的位置
                                top: containerTop + 'px',
                                left: data_2.left - data_1.left + 'px',
                                width: data_2.width + 'px',
                                _height: containerHeight + 'px',                                                // 暂存实际高度
                                height: 0,                                                                      // 1103引擎限制，需要先将容器高度置为0，渲染后延迟恢复高度
                            };
                            
                            if (click_behive || that.adType === 'open') {                                       // 开启关闭误触，全区域覆盖ad-button，不需要将关闭按钮置顶；开屏未开启关闭误触时，点击优化容器是absolute定位，倒计时是fixed定位，会覆盖在顶层；开屏开启关闭误触时，会在倒计时展示后，将点击优化容器变为fixed定位，覆盖在倒计时上方
                                that.adButtonOptimize.hasInit = true;
                                fnShowContainer();                                                              // 显示点击优化区域
                                return false;
                            }
                            let adCloseBtn = that.$element('ad-close-btn');
                            if (!adCloseBtn || !adCloseBtn.getBoundingClientRect) {
                                return false;
                            }
                            adCloseBtn.getBoundingClientRect({                                                  // 获取关闭按钮的位置，将点击优化区域的的按钮置顶，并且覆盖在原来按钮的位置
                                success: function(data_3) {
                                    if (that.adButtonOptimize.hasInit) {
                                        return false;
                                    }
                                    if (!data_3) {
                                        return false;
                                    }
                                    that.adButtonOptimize.closeBtnStyle = {                                     // ad-container里关闭按钮的位置
                                        position: 'absolute',
                                        top: data_3.top -  data_2.top + 'px',
                                        left: data_3.left - data_2.left + 'px',
                                        width: data_3.width + 'px',
                                        height: data_3.height + 'px',
                                    };
                                    that.adButtonOptimize.hasInit = true;
                                    that.adButtonOptimize.isShowCloseBtn = true;
                                    fnShowContainer();                                                          // 显示点击优化区域
                                },
                                fail: function() {
                                    console.log('---获取ad-close-btn位置失败---');
                                }
                            });
                        },
                        fail: function() {
                            console.log('---获取ad-container位置失败---');
                        }
                    });
                },
                fail: function() {
                    console.log('---获取ad-wrap位置失败---');
                }
            });
            // 显示点击按钮优化容器，并且延迟修改容器的样式（高度、透明度）
            function fnShowContainer() {
                that.adButtonOptimize.isShowContainer = true;                                                   // 显示点击优化区域
                setTimeout(() => {
                    /**
                     * 延迟恢复容器高度，设置容器透明度
                     * 此处需要重新赋值containerStyle为新的响应式对象
                    */
                    that.adButtonOptimize.containerStyle = Object.assign(
                        {},
                        that.adButtonOptimize.containerStyle,
                        {
                            height: that.adButtonOptimize.containerStyle._height,
                            opacity: 0
                        }
                    );
                }, 200);
            }
        },
        /**
         * ad-container容器，onResize回调
         * 章首、插页位置，在有其他弹窗遮挡时，阅读页将外层容器高度设为0，导致appear不触发，没有初始化点击区域位置
         * 因此，在onResize回调中，重新初始化点击区域位置
        */
        fnAdContainerResize() {
            let that = this;
            if (!that.isExtraShow || !that.isLoadComplete || !that.currentAdInfo.ad_button_optimize || that.adHasClick) {
                return false;
            }
            if (that.adButtonOptimize.hasInit) {
                return false;
            }
            let adContainer = that.$element('ad-container');
            if (!adContainer || !adContainer.getBoundingClientRect) {
                return false;
            }
            adContainer.getBoundingClientRect({                                                                 // 如果ad-container有高度，才初始化点击优化区域位置
                success: function(data) {
                    if (that.adButtonOptimize.isResize) {                                                       // 如果正在resize处理
                        return false;
                    }
                    if (!data || data.height < 10) {
                        return false;
                    }
                    that.adButtonOptimize.isResize = true;
                    setTimeout(() => {
                        that.fnInitAdButtonOptimize();                                                          // 初始化点击优化区域位置
                        that.adButtonOptimize.isResize = false;
                    }, 200);
                },
                fail: function() {
                    console.log('---获取resize-ad-container位置失败---');
                }
            });
        },
        /**
         * ad-button点击优化容器，是否变为fixed定位
         * 由于开屏倒计时为fixed定位，且延迟展示，因此需要在倒计时展示后，将点击优化容器变为fixed定位，覆盖在倒计时上层
        */
        fnAdButtonContainerFixed() {
            let {
                click_behive,                                                           // 是否关闭误触
                ad_button_optimize,                                                     // 是否点击优化
            } = this.currentAdInfo;
            if (!ad_button_optimize || !click_behive || this.adHasClick) {
                return false;
            }
            this.isShowClickBlock = false;                                              // 隐藏开屏关闭误触的空白元素
            this.adButtonOptimize.isContainerFixed = true;                              // 点击优化容器变为fixed定位，覆盖在顶层
        },
        /**
         * 点击优化容器touchstart事件，用来重置是否滑动，开始坐标等
        */
        fnAdButtonContainerTouchstart(e) {
            this.adButtonOptimize.isTouch = false;
            this.adButtonOptimize.touchstartPosition = null;
        },
        /**
         * 点击优化容器touchmove事件，用来判断是点击还是滑动
         * touches任意点和滑动开始的位置做对比，x|y轴的移动距离超过10，认为是移动。否则是点击
        */
        fnAdButtonContainerTouchmove(e) {
            if (!(e && e.changedTouches && e.changedTouches[0])) {
                return false;
            }
            let position = e.changedTouches[0];
            if (!this.adButtonOptimize.touchstartPosition) {
                this.adButtonOptimize.touchstartPosition = position;
                return false;
            }
            let startPosition = this.adButtonOptimize.touchstartPosition;
            if (Math.abs(startPosition.pageX - position.pageX) > 10 || Math.abs(startPosition.pageY - position.pageY) > 10) {
                this.adButtonOptimize.isTouch = true;
            }
        },
        /**
         * 点击优化容器touchend事件，如果是点击，阻止默认行为
        */
        fnAdButtonContainerTouchend(e) {
            if (!this.adButtonOptimize.isTouch) {
                this.fnStopPropagation(e);
            }
        },
        // 隐藏百度开屏
        fnBaiduOpenHide() {
            this.SDK_BAIDU.canLoad = false;
        },
        /**
         * 获取广告位置 - 冷热启动开屏单独区分，其余均取adAlias属性
        */
        fnGetAdPostion() {
            this.adFullScreenCoverPosition = this.fnGetAdFullScreenCoverPosition();         // 获取全屏覆盖的位置名称
            if (this.adFullScreenCoverPosition.position && this.brandAdSwitch) {            // 当前位置支持广告全屏覆盖，且厂商广告2.0开关开启时，存储全局的全屏覆盖位置列表到当前组件变量中
                this.adFullScreenCover = this.$app.adFullScreenCover;
            }
            if (this.adType === 'video') {
                return ;
            }
            if (this.adType === 'open') {
                if (this.adAlias === 'openMessage') {
                    if (this.isWarm === 'normal') {                             // 冷启动开屏
                        this.adPosition = 'open';
                        return ;
                    }
                    this.adPosition = 'hotOpen';                                // 热启动开屏
                    return ;
                }
            }
            this.adPosition = this.adAlias;
        },
        /**
         * 校验误触是否超出频次限制
        */
        fnCheckMisclick() {
            if (!this.$app || !this.$app.fnIsCancelMisclick) {
                return false;
            }
            let currentAdInfo = this.currentAdInfo;
            let {
                result,
                msg
            } = this.$app.fnIsCancelMisclick(currentAdInfo, this.adPosition);                           // 是否取消误触
            console.log('---是否取消误触---', msg);
            if (result) {
                currentAdInfo.ifcb = [];
                currentAdInfo.click_behive = false;                                                     // 取消关闭误触
                currentAdInfo.invisible_click_behive = false;                                           // 取消滑动误触
                currentAdInfo.menu_click_behive = false;                                                // 取消菜单误触
                currentAdInfo.exit_button_behive = false;                                               // 取消退出按钮误触
                currentAdInfo.isAutoClick = false;                                                      // 取消自动触发
                currentAdInfo.action_area = 0;                                                          // 取消扩展区域点击热区
                this.isCancelMisclick = true;                                                           // 是否取消误触
            }
        },
        // oppo2.0广告自定义点击事件
        fnNewOppoAdClick() {
            this.oppoAdHasClick = true;
            setTimeout(() => {
                this.oppoAdHasClick = false;
            }, 200)
        },
        // 获取广告展示时长
        fnGetAdShowTime () {
            let showTime = 0
            if (this.adType === 'video') {       
                showTime = new Date().getTime() - this.adStartTime;                 // 视频类广告展示时长
            } else if (this.adType === 'pre' || this.adType === 'insert') {
                if(this.pageStartTime) {
                    if(this.pageEndTime) {
                        showTime = this.pageEndTime > this.pageStartTime ? this.pageEndTime - this.pageStartTime : 0;   // 翻页情况下章首或插页广告上报展示时长                 
                    } else {
                        showTime = new Date().getTime() - this.pageStartTime
                    }
                }
            } else if (this.adType === 'open' && this.isDoubleOpen) {
                showTime = this.doubleOpenAdShowTime ? new Date().getTime() - this.doubleOpenAdShowTime : 0 
            } else {
                showTime = this.adShowTime > 0 ? new Date().getTime() - this.adShowTime : 0;                    // 非翻页下信息流广告上报展示时长
            }
            return showTime
        },
        // 上报广告关闭神策打点
        fnReportAdClose() {
            if(!this.hasReportAdClose && this.hasShowReport) {
                this.hasReportAdClose = true;
                this.shenceLog('ADClose');
            }
        },
        // oppo2.0广告触碰
        fnTouchOppoAd(e) {
            if (!this.adHasClick || this.oppoAdHasClick) {
                this.fnStopPropagation(e);
            }
        },
        // 当前页数变更
        fnCurrentPageChange(newValue) {
            if(newValue > -1 && this.adPage > -1 && newValue === this.adPage) {     // 广告页页码页不是空白页 并且当前页是广告页记录开始时间
                this.needRecordPageStartTime = true
                this.fnRecordPageStartTime()                                        // 记录页面出现开始时间方法
            }
            if(newValue > -1 && this.adPage > -1 && this.pageStartTime && !this.pageEndTime && newValue !== this.adPage) {   // 广告页页码页不是空白页 并且获取到开始时间没有获取结束时间, 离开当前广告页                                                                                                               
                this.pageEndTime = new Date().getTime()                                                                      // 记录广告展示结束时间  
                this.fnReportAdClose()
            }
        },
        // 开屏展示状态改变
        fnOpenShowChange(newValue, oldValue) {
            if(newValue === false && oldValue === true) {
                this.fnRecordPageStartTime()
            }
        },
        // 记录页面出现时间
        fnRecordPageStartTime() {
            if(this.adType === 'pre' && !this.isOpenShow || this.adType === 'insert') {                    // 是章首并且开屏不展示或者是插页
                if(this.hasShowReport && this.needRecordPageStartTime && !this.pageStartTime) {            // 广告已经上报过曝光且需要记录页面开始时间并且未记录页面开始时间
                    this.pageStartTime = new Date().getTime()
                    this.fnAutoClickSwitch()
                }
            }
        },
        // 底部广告轮播前置方法
        fnBannerAdRepeatHandle() {
            if (this.isRepeat) {
                this.fnBannerAdRepeat();      // 底部广告轮播
            }
        },
        // 广告加载成功后曝光前置处理方法
        fnLoadSuccessHandle() {
            this.fnCheckMisclick();           // 校验误触是否超出频次限制
            if (this.adType === 'insert') {
                this.fnCalcInsert()
            }
            if (this.adType === 'banner') {
                this.fnBannerAdRepeat();      // 底部广告轮播
            }
            if (this.supportApiCache) {
                let lastAd = this.adsCacheInfo[this.adsCacheInfo.length - 1]
                let hasApi = lastAd && lastAd.chn_type && lastAd.chn_type.indexOf('API_') > -1
                let hasLocalCache = lastAd && lastAd.isLocalCache
                let isApi = this.chnType.indexOf('API_') > -1
                let isLocalCache = this.currentAdInfo.isLocalCache
                if (isApi && isLocalCache) {
                    this.$app.fnChangeApiCacheBySlotId(this.adUnitId)
                }
                if (!isApi && hasApi && !hasLocalCache) {
                    this.$app.fnAddApiCache(this.adUnitId, lastAd)
                }
            }
            this.fnCanShowAdFullScreenCover();                                              // 是否可以展示广告全屏覆盖误触
        },
        // 记录广告页开始时间前置方法
        fnRecordPageStartTimeHandle() {
            if (this.currentPage === 0 && this.adPage === 0) {     // 当前页面是章首广告页
                this.needRecordPageStartTime = true;
                this.fnRecordPageStartTime();                      // 记录页面出现开始时间
            }
        },
        // 双开屏第二个开屏展示
        fnDoubleOpenAdHasShow() {
            this.doubleOpenAdShowTime = new Date().getTime();
        },
        // 支持API缓存
        fnSupportApiCache() {
            return this.$app.isApiCache && (['pre', 'insert', 'banner', 'back'].indexOf(this.adType) > -1 || this.adType === 'open' && this.isWarm === 'hot')
        },
        // 检验存在API缓存
        fnCheckApiCache() {
            this.busContext.caid = ''
            if(this.supportApiCache) {
                let agentId = this.$app.fnFindApiAgentIdBySlotId(this.adUnitId)
                if(agentId) {
                    this.busContext.caid = +agentId
                }
            }
        },
        // 页面隐藏超时判断：广告点击后，1500ms内的页面隐藏认为是广告点击跳转
        fnPageHideTimer() {
            if (!this.fnAdRefreshSwitch()) {                                        // 广告刷新开关
                return false;
            }
            if (['pre', 'banner', 'insert'].indexOf(this.adType) > -1 || this.adAlias === 'readBack') {
                this.isPageHideTimeout = false;                                     // 页面隐藏是否超时
                setTimeout(() => {
                    this.isPageHideTimeout = true;
                }, 1500);
            }
        },
        // 广告刷新开关
        fnAdRefreshSwitch() {
            return !!(this.$app && this.$app.adRefreshSwitch);
        },
        // 广告刷新
        fnAdRefresh() {
            if (!this.fnVmIsValid()) {                                              // 组件销毁判断
                return false;
            }
            if (!this.fnAdRefreshSwitch()) {                                        // 广告刷新开关
                return false;
            }
            if (['pre', 'insert'].indexOf(this.adType) > -1) {                      // 章首和插页直接刷新广告
                this.pageEndTime = Date.now();                                      // 更新广告展示结束时间
                this.fnReportAdClose();                                             // 上报广告关闭事件
                this.pageStartTime = '';                                            // 重置广告展示开始时间
                this.pageEndTime = '';                                              // 重置广告展示结束时间
                this.isAdRefresh = true;                                            // 是否为广告刷新
                this.fnGetAd();
                return ;
            }
            if (this.adAlias === 'readBack') {                                      // 阅读器退出，广告点击后关闭弹窗
                this.fnCloseBack();
                return false;
            }
            if (this.adType === 'banner') {
                if (!this.isRepeat) {                                               // 底部未开启轮播时，直接刷新广告
                    this.fnReportAdClose();                                         // 上报广告关闭事件
                    this.isAdRefresh = true;                                        // 是否为广告刷新
                    this.fnGetAd();
                    return false;
                }
                this.isNeedRefresh = false;                                         // 重置页面onShow时的广告加载处理判断条件
                clearTimeout(this.bannerAdTimeout);                                 // 清除底部广告策略处理定时器
                clearTimeout(this.bannerAdPreTimeout);                              // 清除底部广告预加载定时器
                if (this.$app && this.$app.bannerAdInfo) {                          // 底部有轮播，且有缓存的广告，直接处理缓存的广告策略
                    this.fnBannerAdReload();
                    return false;
                }
                if (this.isPreLoading) {                                            // 底部正在进行ad广告策略请求
                    this.requestCount = 1;                                          // 用于在本次ad接口请求失败时，可以继续轮播
                    this.needHandleAds = true;                                      // 是否需要处理广告策略
                    return false;
                }
                this.fnReportAdClose();                                             // 上报广告关闭事件
                this.isAdRefresh = true;                                            // 是否为广告刷新
                this.requestCount = 0;                                              // 用于在本次ad接口请求失败时，可以继续轮播
                this.fnGetAd();                                                     // 没有缓存的广告时，直接刷新广告
                return false;
            }
        },
        // 自动触发支持
        fnSupportAutoClick() {
            return this.$app.autoClickReadTime > -1 && (['open', 'pre', 'insert', 'banner'].indexOf(this.adType) > -1)
        },
        // 自动触发判断
        fnAutoClickSwitch() {
            let that = this
            let isBrandAd = that.currentAdInfo.chn_type.indexOf('QAPP') > -1;   // 厂商
            let isApi = that.currentAdInfo.chn_type.indexOf('API') > -1;        // API
            if(that.canAutoClick && !that.adHasClick && that.currentAdInfo.isAutoClick && (isBrandAd && that.brandAdVersion === 1 || isApi)) {
                let bookId = that.bookId
                let needBookId = ['insert', 'banner'].indexOf(this.adType) > -1
                let readTime = bookId && that.$app.readRecord[bookId] || 1
                let nowTime = new Date().getTime()
                let spaceTime = that.currentAdInfo.ext.acti ? that.currentAdInfo.ext.acti * 1000 : 0
                if(nowTime > that.$app.canAutoClickTime && (needBookId && readTime >= that.$app.autoClickReadTime || !needBookId)) {
                    that.clickType.isAutoClick = true;
                    that.fnAdClick()
                    that.$app.canAutoClickTime = nowTime + spaceTime
                    storage.set({
                        key: 'canAutoClickTime',
                        value: that.$app.canAutoClickTime
                    })
                }
            }
        },
        // 退出按钮误触
        fnExitButtonBehive(e) {
            this.fnStopPropagation(e);
            if (!(this.isBrandAd && this.brandAdVersion === 1 && this.isLoadComplete || !this.isBrandAd && this.canShowAd)) {
                this.fnClickExit();                                                 // 没加载成功时，直接退出
                return false;
            }
            this.clickType.isExitButton = true;                                     // 点击类型 - 退出按钮
            this.fnAdClick();
        },
        // 获取当前日期
        fnGetCurrentDate() {
            let date = new Date()
            let year = date.getFullYear()
            let month = date.getMonth()
            let day = date.getDate()
            let ret = year + '' + ((month + 1) >= 10 ? (month + 1) : '0' + (month + 1)) + '' + (day >= 10 ? day : '0' + day)
            return ret
        },
        // 设置播放激励视频缓存信息
        fnSetVideoPlayStorage() {
            let currentDate = this.fnGetCurrentDate();
            if(currentDate === this.$app.videoPlayInfo.currentDate) {
                this.$app.videoPlayInfo.videoPlayTimes ++
            } else {
                this.$app.videoPlayInfo.currentDate = currentDate;
                this.$app.videoPlayInfo.videoPlayTimes = 1;
            }
            storage.set({
                key: 'videoPlayInfo',
                value: JSON.stringify(this.$app.videoPlayInfo)
            })
        },
        fnCalcInsert() {
            /**
             * 最小屏幕可用高度 855 
             * 
             * 横板内容计算
             * 736 基础内容高度
             * 888 仅带有今日推荐或者诱导点击的最小内容高度
             * 1008 带有今日推荐和诱导点击的最小内容高度
             */
            let adHeight = this.adHeight;
            let currentAdInfo = this.currentAdInfo;
            let isBrandAd = currentAdInfo.chn_type.indexOf('QAPP') > -1;
            let isApi = currentAdInfo.chn_type.indexOf('API') > -1;
            let isVertical = currentAdInfo.isVerticalVideo || currentAdInfo.isVerticalImage || currentAdInfo.isVerticalStyle;
            let hasBackground = currentAdInfo.background_type === 1;
            let hasInduce = currentAdInfo.isInsertInduceClick;
            if (hasInduce && (isBrandAd || isApi) && !isVertical) {
                currentAdInfo.insertInduceClickIndex = this.$app.getAppData('insertInduceClickIndex') % 4 + 1;
            }
            // 区分横板样式和竖版样式
            if (isVertical) {
                if(adHeight > 1230) {
                    this.insertWidth = 580;
                    this.insertHeight = 1030;
                    return
                }
                if(adHeight > 1350) {
                    this.insertWidth = 646;
                    this.insertHeight = 1150;
                    return
                }
                this.insertWidth = 480;
                this.insertHeight = 855;
            } else {
                this.insertWidth = 710;
                if (adHeight < 1230 || !hasBackground && !hasInduce) {
                    this.insertHeight = 736
                    return
                }
                if (adHeight > 1350 && hasBackground && hasInduce) {
                    this.insertHeight = 1008
                    this.insertCloseTop = 152
                    return
                }
                if (adHeight > 1230 && (hasBackground || hasInduce)) {
                    this.insertHeight = 888
                    if(hasBackground) {
                        this.insertCloseTop = 152
                    } else {
                        this.insertCloseTop = 16
                    }
                    return
                }
                this.insertHeight = 736
            }
        },
        // vivo2.0广告自定义点击事件
        fnVivoClick() {
            this.isVivoClick = true;
            setTimeout(() => {
                this.isVivoClick = false;
            }, 200)
        },
        // vivo2.0广告自定义滑动事件
        fnVivoTouch(e) {
            if(this.isVivoClick) {
                this.fnStopPropagation(e);
            }
        },
        // 广告点击上报  
        fnClickReport() {
            this.shenceLog('ADClick')
            this.adReport('click_trackers', 'click');  
            if(this.adType === 'wall' && this.adAlias === 'adWallLocal') {
                this.fnAdWallReport('ad_clk')
            }
        },
        // 获取全屏广告覆盖的位置标识
        fnGetAdFullScreenCoverPosition() {
            const position = {
                firstOpen: {
                    position: 'firstOpen',
                    priority: 6
                },
                doubleOpen: {
                    position: 'doubleOpen',
                    priority: 5
                },
                normalOpen: {
                    position: 'normalOpen',
                    priority: 6
                },
                hotOpen: {
                    position: 'hotOpen',
                    priority: 6
                },
                readPre: {
                    position: 'readPre',
                    priority: 3
                },
                readBanner: {
                    position: 'readBanner',
                    priority: 1
                },
                readInsert: {
                    position: 'readInsert',
                    priority: 2
                },
                readBack: {
                    position: 'readBack',
                    priority: 4
                },
                indexBack: {
                    position: 'indexBack',
                    priority: 4
                },
            }
            if (['readPre', 'readInsert', 'readBanner', 'readBack', 'indexBack'].indexOf(this.adAlias) > -1) {
                return position[this.adAlias];
            }
            if (this.adAlias === 'readOpen') {
                if (this.isDoubleOpen) {
                    return position.doubleOpen;
                }
                return position.firstOpen;
            }
            if (this.adType === 'open') {
                if (this.isWarm === 'normal') {
                    return position.normalOpen;
                }
                if (this.isWarm === 'hot') {
                    return position.hotOpen;
                }
            }
            return {};
        },
        // 是否可以展示广告全屏覆盖误触
        fnCanShowAdFullScreenCover() {
            if (!(this.currentAdInfo && this.currentAdInfo.isFullScreenCover)) {
                return false;                                                               // 全屏覆盖误触开关判断
            }
            let position = this.adFullScreenCoverPosition;                                  // 当前位置是否支持
            if (!position.position) {
                return false;
            }
            if (this.isBrandAd && this.brandAdVersion === 2 && ['QAPP_VIVO', 'QAPP_OPPO'].indexOf(this.currentAdInfo.chn_type) > -1) {
                if (this.adType === 'open' && !this.currentAdInfo.click_behive) {
                    this.currentAdInfo.click_behive = true;                                 // 开屏位置，如果开启了全屏覆盖，需要将关闭误触打开
                }
                if (this.adType === 'pre' && this.currentAdInfo.action_area !== 2) {
                    this.currentAdInfo.action_area = 2;                                     // 章首位置，如果开启了全屏覆盖，需要将扩展区域打开
                }
                if (this.$app && this.$app.fnAdFullScreenCoverListAdd) {
                    this.fnShowAdFullScreenCover();
                    this.$app.fnAdFullScreenCoverListAdd(position);                         // 全局存储当前位置广告覆盖标识
                }
            }
        },
        // 显示广告全屏覆盖误触
        fnShowAdFullScreenCover() {
            if (!this.isShowAdFullScreenCover) {
                setTimeout(() => {
                    this.isShowAdFullScreenCover = true;                                    // 显示广告全屏覆盖误触
                });
            }
        },
        // 隐藏广告全屏覆盖误触
        fnHideAdFullScreenCover() {
            if (this.isShowAdFullScreenCover) {
                this.isShowAdFullScreenCover = false;                                       // 隐藏当前位置的全屏覆盖
            }
        },
        // 关闭广告全屏覆盖误触
        fnCloseAdFullScreenCover() {
            this.fnHideAdFullScreenCover();                                                 // 隐藏当前位置的全屏覆盖
            let position = this.adFullScreenCoverPosition;                                  // 当前广告的位置标识
            if (!position.position) {
                return false;
            }
            if(this.$app && this.$app.fnAdFullScreenCoverListDelete) {
                this.$app.fnAdFullScreenCoverListDelete(position);                          // 全局删除当前位置广告覆盖标识
            }
        },
        fnVideoAdControl(operate) {
            if (!operate || !~(['start, pause'].indexOf(operate))) {
                return
            }
            const videoId = `video-${this.adType}`
            try {
                this.$element(videoId) && this.$element(videoId)[operate]()
            } catch(e) {}
        },
        // 模拟点击支持性判断
        fnSupportMockClick() {
            this.isSupportMockClick = !!~['xiaomi','redmi'].indexOf(this.serviceAdBrand);
        },
        // 小米手机获取广告点击信息
        fnGetAdClickInfo() {
            let adClickInfo = {};
            if (this.$app && this.$app.adClickCoordinatesInstance && this.$app.adClickCoordinatesInstance.fnGetAdMockClickInfo) {
                adClickInfo = this.$app.adClickCoordinatesInstance.fnGetAdMockClickInfo(this);
            }
            return adClickInfo;
        },
        // 按钮点击事件回调方法
        fnAdBtnClickHandle() {
            this.fnAdBtnClick();
            if (this.adType === 'back') {
                this.fnClickSwitch();
                return
            } 
            this.fnAdClick();
        }
    }
</script>