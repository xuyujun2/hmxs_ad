<import name="ad-union" src="../AdUnion/index"></import>

<template>
    <div>
        <stack class="dialogh-wrap">
            <stack class="dialogh52" if="!dialogh5ShowKai || (dialogh5ShowKai && imgInfo.type == 15 && !isGetAd)">
                <image class="kaiping" src="../Common/slogan.png"></image>
                <div class="verDisplay">
                    <text>Copyright&copy; 2023 {{appNameDis}} | {{' V' + newVersion}}</text>
                </div>
            </stack>
            <div class="dialogh5 {{imgInfo.type == 15 && !isGetAd ? 'dialogh5-hide' : ''}}" if="dialogh5ShowKai">
                <div class="dialogh5-ad {{imgInfo.type == 15 && !isGetAd ? 'dialogh5-hide' : ''}}" if="imgInfo.type == 15">                    
                    <ad-union
                        ad-unit-id="{{ openAdId }}"
                        ad-type="open"
                        ad-alias="openMessage"
                        is-warm="normal"
                        onfn-get-ad="fnGetAd"
                        onfn-ad-click="fnAdHasClick"
                        onfn-ad-close="fnAdClose"
                        onstart-count="fnStartCount"
                        onstop-count="fnStopCount"
                        is-cache-info="{{ isCacheInfo }}"
                        other-info="{{ popInfo }}"
                        from-page="/Index"
                        request-time="{{ adRequestTime }}"
                        brand-ad-switch="{{ brandAdSwitch }}"
                        has-show-time="{{ showTime && isShowCutDown }}"
                        skip-time="{{ popInfo.countdown || 5 }}"
                        count-time ="{{ countdownNum }}"
                    ></ad-union>
                </div>
                <image @click="clickDialogImg" class="dialogImg" src="{{dialogImg}}" else></image>
            </div>
            <text if="{{showTime && isShowCutDown && (imgInfo.type != 15 || imgInfo.type == 15 && isGetAd && !isHideCountdown)}}" class="close {{isBottomCloseBtn ? 'close-bottom' : 'close-top' }}" @click="fnCloseDialogH5">
                <span>{{countdownNum}}</span>
                <span>  跳过</span>
            </text>
        </stack>
    </div>
</template>

<style scoped lang="less">
    .dialogh-wrap {
        width: 100%;
        height: 100%;
    }
    .dialogh52{
        width:100%;
        height: 100%;
        /* flex-direction: column; */
        justify-content: center;
        align-items: center;
        .kaiping {
           width: 238px;
           margin-bottom: 360px;
        }
        .verDisplay {
            margin-bottom: 60px;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            align-self: flex-end;
            text {
                text-align: center;
                font-size: 26px;
                color: rgba(0, 0, 0, .5);
                line-height: 37px;
            }
        }
    }
    /* .dialogh52 image {        
    } */
    .dialogh5{
        width:100%;
        height:100%;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
    }
    .dialogh5-ad {
        width: 100%;
        height: 100%; 
        /* height: 1333px; */
    }
    .dialogh5-hide {
        width: 0px;
        height: 0px;
    }
    .close {
        position: fixed;
        right: 16px;
        background-color: rgba(0, 0, 0, 0.2);
        padding: 0px 16px;
        height: 59px;
        line-height: 59px;
        border-radius: 30px;
        justify-content: center;
        align-items: center;
        span {
            color: #fff;
            text-align: center;
            font-size: 24px;
        }
    }
    .close-top {
        top: 120px;
    }
    .close-bottom {
        bottom: 240px;
    }
    .dialogImg {    
        width:100%;
        height:100%;
    }
</style>

<script>
import app from '@system.app';
import storage from '@system.storage';
import router from '@system.router';
import prompt from '@system.prompt'
    // import { pageEnter } from '../TDSDK/TDSDK.min.js';
    // import { pageLeave } from '../TDSDK/TDSDK.min.js';
export default {
    private: {
        newVersion: '',
        appNameDis: '',
        isGetAd: false,
        requestComplete: false,
        hasAdClick: false, // 该参数实际意义是，广告是否发生跳转
        popInfo: {},
        isCacheInfo: true, // 是否是缓存信息
        isAdPopShow: false, // 广告弹窗显示
        loadLimit: 3000, // 超时时长，默认3000ms
        adRequestTime: 3000, // 广告剩余请求时间
        openAdId: '5001198504', // 开屏广告广告位id
        brandAdSwitch: false, // 支持新版厂商广告开关
        hasBack: false, // 开屏是否已经退出，防止百度触发2次关闭
        isAdClicked: false, // 广告是否已经点击过
        isBottomCloseBtn: false,  // 关闭按钮是否底部展示
        isHideCountdown : false,  // 是否隐藏倒计时
    },
    public:{
        dialogh5ShowKai:false,
        headerJson:'',
        webSrc:'',
        dialogImg:'',
        imgInfo:{
            id:'',
            type:'',
            info:'',
            actUrl:'',
        },
        showTime:false,
        countdown:3,
        countdownNum:'',
        timer:null,
        canClose:0,
        operationInfo:{},
        isShowCutDown:false,
        userTacticsVo:{},
    },
    protected:{
        frompage:999, // 来源是loginVisitor参数为0
    },
    onInit(){
        let that = this
        that.$app.$def.fnCreateAd.call(that);            // 创建当前页面的广告存储对象
        let appInfo = app.getInfo();
        that.appNameDis = appInfo.name;
        that.newVersion = appInfo.versionName;
        that.$app.$def.appSourceinfoLog(that)
        try {
            if(!that.$app.isGetOaid) {
                that.$app.$def.getOaid().then(oaid => {
                    that.$app.oaid = oaid
                    that.$app.isGetOaid = true
                }, (err) => {})
            }   
        } catch(err) {}
    },
    onDestroy() {
        this.$app.$def.fnDestoryAd.call(this);           // 销毁当前页面的广告实例
    },
    getDialogImg(){
        let that = this;
        let islog = true
        let startRequestTime = new Date().getTime()
        that.$app.$def.requestData(that,
            {
                url:'/Index',
                interface: '/glory/fastapp/2401',
                data: { 
                    location: '5',
                    isWarm: 0,
                    openAdControl: 1,
                },// 4弹窗  5开屏
                succ: function (res) {
                    if(res.data && JSON.stringify(res.data) != "{}"){
                        that.$app.fnSetMisclickConf({                                                       // 设置误触频次控制
                            misClickTotalFrequency: res.data.misClickTotalFrequency,                        // 误触总频次限制
                            misClickAdPosition: res.data.misClickAdPosition,                                // 各广告位置误触频次限制
                            misClickIntervalTime: res.data.misClickIntervalTime,                            // 时间间隔（秒）
                        });
                        if(res.data.autoTriggerChapterNum) {
                            that.$app.autoClickReadTime = res.data.autoTriggerChapterNum
                        }
                        // res.data.type = 15
                        if(res.data.type>=1&&res.data.type<=8){
                            that.requestComplete = true
                            that.dialogImg = res.data.imgUrl;
                            that.imgInfo.id = res.data.id;
                            that.imgInfo.type = res.data.type;
                            that.imgInfo.info = res.data.info;
                            that.imgInfo.actUrl = res.data.actUrl;
                            that.operationInfo = res.data.operationInfo
                            that.userTacticsVo = res.data.userTacticsVo||{}
                            if(res.data.skip==1){
                                that.isShowCutDown=true
                            }
                            if(res.data.countdown>3){
                                that.countdown = res.data.countdown;
                            }
                            let pictimer = setTimeout(() => {
                                that.dialogh5ShowKai = true;
                                that.fndaojishi();
                            }, 500);
    
                            that.$app.$def.quickappLog([701,{
                                qmap:{
                                    source:'openscreen'
                                }
                            }], that);
                            that.$app.$def.quickappLog([703, {
                                qmap:{
                                    type:'show',
                                    activity:that.imgInfo.id,
                                    imgType:that.imgInfo.type
                                }
                            }, 'openscreen'], that)
                            if(that.userTacticsVo.isDot=='1'){                            
                                that.$app.shenceLog.log(that,'track','OperationExposure', {
                                    OperationPosition:'loading页',
                                    OperationID:that.operationInfo.id,
                                    OperationName:that.operationInfo.name,
                                    OperationType:that.imgInfo.type,
                                    BookID:that.imgInfo.info||'',
                                    ActID:that.imgInfo.actUrl?that.imgInfo.actUrl.split('id=')[1]?that.imgInfo.actUrl.split('id=')[1]:'':'',
                                    PicURL:that.dialogImg||'',
                                    ActURL:that.imgInfo.actUrl||'',
                                    Countdown:that.countdown,
                                    StartTime:that.operationInfo.startTime,
                                    EndTime:that.operationInfo.endTime,
                                    TacticsId:that.userTacticsVo.tacticsId||'',
                                    TacticsName:that.userTacticsVo.tacticsName||'',
                                    SourceId:that.userTacticsVo.sourceId||'',
                                    SourceName:that.userTacticsVo.sourceName||'',
                                    ShuntId:that.userTacticsVo.shuntID||'',
                                    ShuntName:that.userTacticsVo.shuntName||''
                                });
                            }
                        }else if(res.data.type == 15) {
                            if(res.data.baiduSDKFlag){
                                that.$app.fnInitBaiduSDK();                                     // 初始化百度sdk
                            }
                            if(res.data.xmDeviation) {
                                that.$app.setAppData('adClickOffsetConfInfo',res.data.xmDeviation);
                            }
                            that.$app.brandAdPreloadSwitch = !!res.data.brandAdPreloadSwitch
                            // 场景值判断
                            if(res.data.openScreenStartSceneJudge && !(that.$app && that.$app.startScene && that.$app.startScene === 'shortcut')) {
                                setTimeout(() => {
                                    router.replace({
                                        uri:'/Index',
                                        params:{
                                            isStartToIndex:1
                                        }
                                    })
                                }, 500);
                                return
                            }
                            if(res.data.brandAdSwitch) {
                                that.brandAdSwitch = true
                            }
                            if(res.data.adPositionId) {
                                that.openAdId = res.data.adPositionId
                            }
                            that.requestComplete = true
                            if(res.data.loadTime) {
                                that.loadLimit = res.data.loadTime
                            }
                            let endRequestTime = new Date().getTime()
                            that.adRequestTime = that.loadLimit - (endRequestTime - startRequestTime)
                            if(that.adRequestTime < 0) {
                                router.replace({
                                    uri:'/Index',
                                    params:{
                                        isStartToIndex:1
                                    }
                                })
                                return
                            }
                            setTimeout(() => {
                                if(!that.isGetAd) {
                                    router.replace({
                                        uri:'/Index',
                                        params:{
                                            isStartToIndex:1
                                        }
                                    })
                                }
                            }, that.adRequestTime)
                            that.popInfo = res.data
                            that.dialogh5ShowKai = true;
                            that.imgInfo.id = res.data.id;
                            that.imgInfo.type = res.data.type;
                            that.operationInfo = res.data.operationInfo
                            that.userTacticsVo = res.data.userTacticsVo || {}
                            if(res.data.skip == 1) {
                                that.isShowCutDown = true
                            }
                            if(res.data.countdown > 3) {
                                that.countdown = res.data.countdown;
                            }
                        }else {
                            setTimeout(() => {
                                router.replace({
                                    uri:'/Index',
                                    params:{
                                        isStartToIndex:1
                                    }
                                })
                            }, 500);
                        }
                    }else{
                        setTimeout(() => {
                            router.replace({
                                uri:'/Index',
                                params:{
                                    isStartToIndex:1
                                }
                            })
                        }, 500);
                    }
                },
                error: function (code) {
                    that.requestComplete = true
                    router.replace({
                        uri:'/Index',
                        params:{
                            isStartToIndex:1
                        }
                    })
                    if(islog){
                        that.$app.$def.quickappLog([703, {
                            qmap:{
                                type:'err',
                                activity:that.imgInfo.id,
                                imgType:that.imgInfo.type
                            }
                        }, 'openscreen'], that)
                    }
                }
            }
        )
        setTimeout(function(){
            if(!that.requestComplete){
                islog = false
                router.replace({
                    uri:'/Index',
                    params:{
                        isStartToIndex:1
                    }
                })
            }
        },3000)

    },
    // 广告已获取
    fnGetAd(event) {
        let that = this
        that.isGetAd = true
        that.requestComplete = true
        let chn_type = event && event.detail && event.detail.chn_type;
        if (chn_type === 'SDK_BAIDU') {                                     // 使用百度SDK倒计时
            return false;
        }
        that.isHideCountdown = event && event.detail && event.detail.hasMisClick;           // 是否隐藏倒计时
        that.isBottomCloseBtn = event && event.detail && event.detail.isBottomCloseBtn;     // 是否在底部展示跳过按钮
        that.timer = setTimeout(() => {
            that.fndaojishi();
        }, 1000);
    },
    // 页面跳转
    fnAdClick() {
        let that = this
        that.hasAdClick = true
        clearTimeout(that.timer);
    },
    onShow() {
        this.$app.lastOpenPage = ''
        this.$app.shenceLog.log(this, 'pageShow', '', {
            Title: '冷启动开屏'
        });
        let that = this;
        that.$app.$def.quickappLog([701, {
            qmap:{
                frompage:that.frompage
            }
        }], that)

        if(that.hasAdClick) {
            that.fnAdClose();                                               // 关闭开屏
            return false;
        }

        if(that.frompage != 0){
            router.replace({
                uri:'/Index',
                params:{
                    isStartToIndex:1
                }
            })
        }
        that.config=that.$app.$data;
        that.getDialogImg();

    },
    onHide() {
        // try {
		// 	pageLeave(this.$page.path);	
		// } catch (error) {
		// 	console.log(error)
		// }
        if (this.isAdClicked && !this.hasAdClick) {
            this.fnAdClick();
        }
    },
    fnStartCount() {
        let that = this
        that.isAdPopShow = false
        that.timer = setTimeout(() => {
            that.fndaojishi()
        }, 1000);       
    },
    fnStopCount() {
        let that = this
        that.isAdPopShow = true
        clearTimeout(that.timer);
    },
    fnCloseDialogH5(){
        let that = this;
        clearTimeout(that.timer);
        that.$app.$def.quickappLog([702, {
            qmap:{
                type:'close',
                activity:that.imgInfo.id,
                imgType:that.imgInfo.type,
            }
        }, 'openscreen'], that)
        
        router.replace({
            uri:'/Index',
            params:{
                isStartToIndex:1
            }
        })
    },
    fnMessage(res){
        let that=this;

        // 清除计时器  改变来源 frompage 为非0
        clearTimeout(that.timer);
        that.frompage = 999;

        switch(that.imgInfo.type){
            case 1: //书籍阅读页
                var trigger_time = that.$app.$def.getLogTime()
                var omap = {
                    origin:'kp',
                    action:'2',
                    channel_id:'qd_kp',
                    channel_name:'启动开屏',
                    channel_pos:0,
                    column_id:that.imgInfo.id,
                    column_name:'启动开屏',
                    column_pos:0,
                    content_id:that.imgInfo.info,
                    content_pos:0,
                    content_type:'2',
                    trigger_time:trigger_time
                }
                that.$app.$def.quickappLog([702, {
                    omap:omap
                }, 'book_click'], that)
                router.push({
                    uri:'/Read',
                    params:{
                        bookId:that.imgInfo.info,
                        activity:that.imgInfo.id, //活动id
                        SourcePosition:'loading页运营位',
                        omap:omap
                    }
                })
                break;
            case 2: // web
                router.push({
                    uri:'/Webhuodong',
                    params:{
                        webSrc:that.imgInfo.actUrl,
                        activity:that.imgInfo.id, //活动id
                        pageFrom:'openscreen',
                        OperationPosition:'loading页',
                        OperationID:that.operationInfo.id,
                        OperationName:that.operationInfo.type,
                        OperationType:that.imgInfo.type||'',
                        StartTime:that.operationInfo.startTime,
                        EndTime:that.operationInfo.endTime
                    }
                })
                break;
            case 4: //充值页
                router.push({
                    uri:'/Recharge',
                    params:{
                        activity:that.imgInfo.id //活动id
                    }
                })
                break;
            default:
                router.push({
                    uri:'/Index',
                    params:{
                        isStartToIndex:1
                    }
                })
        }
        if(that.userTacticsVo.isDot=='1'){
            that.$app.shenceLog.log(that,'track','OperationClick', {
                OperationPosition: 'loading页',
                OperationID: that.operationInfo.id || '',
                OperationName: that.operationInfo.name || '',
                OperationType: that.imgInfo.type + '' || '',
                BookID: that.imgInfo.info || '',
                ActID: that.imgInfo.actUrl ? that.imgInfo.actUrl.split('id=')[1] ? that.imgInfo.actUrl.split('id=')[1]: '' : '',
                PicURL: that.dialogImg || '',
                ActURL: that.imgInfo.actUrl || '',
                Countdown: that.countdown || '',
                StartTime: that.operationInfo.startTime || '',
                EndTime: that.operationInfo.endTime || '',
                TacticsId: that.userTacticsVo.tacticsId || '',
                TacticsName: that.userTacticsVo.tacticsName || '',
                SourceId: that.userTacticsVo.sourceId || '',
                SourceName: that.userTacticsVo.sourceName || '',
                ShuntId: that.userTacticsVo.shuntID || '',
                ShuntName: that.userTacticsVo.shuntName || '',
                PositionName: '点击loading页',
                BookName: that.imgInfo.bookName || '',
                ChaptersID: that.imgInfo.chapterId || ''
            });
        }
    },
    fndaojishi(){
        let that = this;
        that.countdownNum = that.countdown;
        that.showTime=true;
        if(that.canClose>=3){
            // that.showTime=true;
        }
        if(that.countdown == 0){
            // 倒计时为0时跳转
            clearTimeout(that.timer);
            router.replace({
                uri:'/Index',
                params:{
                    isStartToIndex:1
                }
            })
        }else{
            that.countdown--;
            that.canClose++;
            clearTimeout(that.timer);
            that.timer = setTimeout(() => {
                that.fndaojishi()
            }, 1000);
        }
    },
    clickDialogImg(){
        let that=this;
        // that.dialogh5Show=false;
        that.$app.$def.quickappLog([702, {
            qmap:{
                type:'clickImg',
                activity:that.imgInfo.id,
                imgType:that.imgInfo.type
            }
        }, 'openscreen'], that)
        that.fnMessage();
    },
    onBackPress (e) {
        let that = this;
        setTimeout(() => {
            if(that.isAdPopShow) {
                that.$broadcast('closeExtra')
                that.fnStartCount()
                return true
            }
            // 阻止默认行为，等待异步操作
            router.replace({
                uri:'/Index',
                params:{
                    isStartToIndex:1
                }
            })
        }, 0)
        return true
    },
    // 广告点击
    fnAdHasClick() {
        this.isAdClicked = true;                                        // 标记当前开屏广告点击过
    },
    // 开屏关闭
    fnAdClose() {
        if (this.hasBack) {                                             // 防止多次关闭
            return false;
        }
        this.hasBack = true;                                            // 开屏是否已经退出
        router.replace({
            uri:'/Index',
            params:{
                isStartToIndex: 1
            }
        });
    },
}
</script>